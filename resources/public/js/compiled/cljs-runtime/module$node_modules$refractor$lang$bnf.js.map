{
"version":3,
"file":"module$node_modules$refractor$lang$bnf.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMxHC,QAASA,IAAG,CAACC,KAAD,CAAQ,CAClBA,KAAAC,UAAAF,IAAA,CAAsB,CACpBG,OAAQ,CACNC,QAAS,yBADH,CADY,CAIpBC,WAAY,CACVD,QAAS,0BADC,CAEVE,MAAO,CAAC,MAAD,CAAS,SAAT,CAFG,CAGVC,OAAQ,CACNC,YAAa,OADP,CAHE,CAJQ,CAWpBC,KAAM,CACJL,QAAS,gBADL,CAEJG,OAAQ,CACNC,YAAa,OADP,CAFJ,CAXc,CAiBpBE,SAAU,yBAjBU,CAmBtBT,MAAAC,UAAAS,KAAA,CAAuBV,KAAAC,UAAAF,IApBL,CAHpBH,MAAAC,QAAA,CAAiBE,GACjBA,IAAAY,YAAA,CAAkB,KAClBZ,IAAAa,QAAA,CAAc,CAAC,MAAD,CAL0G;",
"sources":["node_modules/refractor/lang/bnf.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$bnf\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = bnf\nbnf.displayName = 'bnf'\nbnf.aliases = ['rbnf']\nfunction bnf(Prism) {\n  Prism.languages.bnf = {\n    string: {\n      pattern: /\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/\n    },\n    definition: {\n      pattern: /<[^<>\\r\\n\\t]+>(?=\\s*::=)/,\n      alias: ['rule', 'keyword'],\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    rule: {\n      pattern: /<[^<>\\r\\n\\t]+>/,\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    operator: /::=|[|()[\\]{}*+?]|\\.{3}/\n  }\n  Prism.languages.rbnf = Prism.languages.bnf\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","bnf","Prism","languages","string","pattern","definition","alias","inside","punctuation","rule","operator","rbnf","displayName","aliases"]
}
