{
"version":3,
"file":"module$node_modules$refractor$lang$processing.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,8CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM/HC,QAASA,WAAU,CAACC,KAAD,CAAQ,CACzBA,KAAAC,UAAAF,WAAA,CAA6BC,KAAAC,UAAAC,OAAA,CAAuB,OAAvB,CAAgC,CAC3DC,QAAS,oKADkD,CAE3DC,SAAU,2CAFiD,CAAhC,CAI7BJ,MAAAC,UAAAI,aAAA,CAA6B,YAA7B,CAA2C,QAA3C,CAAqD,CAEnDC,SAAU,6BAFyC;AAGnDC,KAAM,CACJC,QAAS,+DADL,CAEJC,MAAO,UAFH,CAH6C,CAArD,CAQAT,MAAAC,UAAAF,WAAA,CAA2B,UAA3B,CAAAS,QAAA,CAAiD,cACjDR,MAAAC,UAAAF,WAAA,CAA2B,YAA3B,CAAAU,MAAA,CAAiD,UAdxB,CAH3Bb,MAAAC,QAAA,CAAiBE,UACjBA,WAAAW,YAAA,CAAyB,YACzBX,WAAAY,QAAA,CAAqB,EAL0G;",
"sources":["node_modules/refractor/lang/processing.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$processing\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = processing\nprocessing.displayName = 'processing'\nprocessing.aliases = []\nfunction processing(Prism) {\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword: /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  })\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\n      alias: 'variable'\n    }\n  }) // Spaces are allowed between function name and parenthesis\n  Prism.languages.processing['function'].pattern = /\\w+(?=\\s*\\()/ // Class-names is not styled by default\n  Prism.languages.processing['class-name'].alias = 'variable'\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","processing","Prism","languages","extend","keyword","operator","insertBefore","constant","type","pattern","alias","displayName","aliases"]
}
