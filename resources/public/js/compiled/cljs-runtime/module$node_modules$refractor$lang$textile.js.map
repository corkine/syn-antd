{
"version":3,
"file":"module$node_modules$refractor$lang$textile.js",
"lineCount":9,
"mappings":"AAAAA,cAAA,2CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM5HC,QAASA,QAAO,CAACC,KAAD,CAAQ,CAIpB,IAAIC,cAAgB,sCAAAC,OAApB,CACIC,eAAiB,CACnBC,IAAK,CACHC,QAAS,WADN,CAEHC,OAAQ,CACNC,KA8PLP,KA9PWQ,UAAAJ,IADA,CAFL,CADc,CAOnB,WAAY,CACVC,QAAS,iBADC,CAEVI,WAAY,CAAA,CAFF,CAGVC,MAAO,YAHG,CAPO,CAYnBC,KAAM,CACJN,QAAS,kBADL,CAEJI,WAAY,CAAA,CAFR,CAGJC,MAAO,YAHH,CAZa,CAkBnBE,YAAa,cAlBM,CAoBjBb,eAAAA,CA8OHC,KA9OcQ,UAAAT,QAAXA,CA8OHC,KA9OwCQ,UAAAK,OAAA,CAAuB,QAAvB;AAAiC,CACxEC,OAAQ,CACNT,QAAS,0CADH,CAENI,WAAY,CAAA,CAFN,CAGNH,OAAQ,CAEN,YAAa,CACXD,QAASU,MAAA,CAAO,eAAP,CAAyBd,aAAzB,CAAyC,wBAAzC,CADE,CAEXK,OAAQ,CACNU,SAAU,CACRX,QAASU,MAAA,CACP,iBADO,CACad,aADb,CAC6B,+BAD7B,CADD,CAIRQ,WAAY,CAAA,CAJJ,CAKRH,OAAQH,cALA,CADJ,CAQNc,IAAK,WARC,CASNL,YAAa,KATP,CAFG,CAFP,CAkBNM,KAAM,CACJb,QAASU,MAAA,CAAO,WAAP,CAAqBd,aAArB,CAAqC,UAArC,CAAiD,GAAjD,CADL,CAEJK,OAAQ,CACNU,SAAU,CACRX,QAASU,MAAA,CAAO,UAAP,CAAoBd,aAApB,CADD,CAERQ,WAAY,CAAA,CAFJ,CAGRH,OAAQH,cAHA,CADJ,CAMNS,YAAa,QANP,CAFJ,CAlBA;AA8BNO,MAAO,CAGLd,QAASU,MAAA,CACP,SADO,CAELd,aAFK,CAGL,4CAHK,CAILA,aAJK,CAKL,mDALK,CAMP,GANO,CAHJ,CAWLK,OAAQ,CACNU,SAAU,CAGRX,QAASU,MAAA,CACP,4BADO,CAELd,aAFK,CAGL,8CAHK,CAHD,CAQRQ,WAAY,CAAA,CARJ,CASRH,OAAQH,cATA,CADJ,CAYNS,YAAa,QAZP,CAXH,CA9BD,CAwDNQ,OAAQ,CACNf,QAASU,MAAA,CACP,oCADO,CACgCd,aADhC,CACgD,UADhD,CADH,CAINK,OAAQ,CAGNe,KAAM,CACJhB,QAASU,MAAA,CACP,gBADO,CACYd,aADZ,CAC4B,kBAD5B,CADL;AAIJQ,WAAY,CAAA,CAJR,CAHA,CAUNa,OAAQ,CACNjB,QAASU,MAAA,CAAO,YAAP,CAAsBd,aAAtB,CAAsC,kBAAtC,CADH,CAENQ,WAAY,CAAA,CAFN,CAVF,CAeNc,KAAM,CACJlB,QAASU,MAAA,CACP,aADO,CACSd,aADT,CACyB,qBADzB,CADL,CAIJQ,WAAY,CAAA,CAJR,CAKJC,MAAO,QALH,CAfA,CAuBNc,KAAM,CACJnB,QAASU,MAAA,CAAO,QAAP,CAAkBd,aAAlB,CAAkC,gBAAlC,CADL,CAEJQ,WAAY,CAAA,CAFR,CAGJC,MAAO,SAHH,CAvBA,CA6BNe,SAAU,CACRpB,QAASU,MAAA,CAAO,UAAP,CAAoBd,aAApB,CAAoC,kBAApC,CADD,CAERQ,WAAY,CAAA,CAFJ,CA7BJ,CAkCNiB,QAAS,CACPrB,QAASU,MAAA,CAAO,QAAP,CAAkBd,aAAlB,CAAkC,gBAAlC,CADF,CAEPQ,WAAY,CAAA,CAFL,CAlCH,CAuCNkB,KAAM,CACJtB,QAASU,MAAA,CAAO,QAAP,CAAkBd,aAAlB;AAAkC,gBAAlC,CADL,CAEJQ,WAAY,CAAA,CAFR,CAvCA,CA2CNO,SAAU,CACRX,QAASU,MAAA,CACP,kCADO,CAC8Bd,aAD9B,CADD,CAIRQ,WAAY,CAAA,CAJJ,CAKRH,OAAQH,cALA,CA3CJ,CAkDNS,YAAa,eAlDP,CAJF,CAxDF,CAkHN,WAAY,CACVP,QAAS,kBADC,CAEVC,OAAQ,CACNsB,OAAQ,CACNvB,QAAS,kBADH,CAENI,WAAY,CAAA,CAFN,CADF,CAKNoB,IAAK,CACHxB,QAAS,UADN,CAEHI,WAAY,CAAA,CAFT,CALC,CASNG,YAAa,QATP,CAFE,CAlHN,CAkINkB,KAAM,CACJzB,QAASU,MAAA,CACP,MADO,CACEd,aADF,CACkB,sCADlB,CADL,CAIJK,OAAQ,CACNyB,KAAM,CACJ1B,QAASU,MAAA,CAAO,QAAP,CAAkBd,aAAlB,CAAkC,kBAAlC,CADL,CAEJQ,WAAY,CAAA,CAFR,CADA;AAKNO,SAAU,CACRX,QAASU,MAAA,CAAO,MAAP,CAAgBd,aAAhB,CADD,CAERQ,WAAY,CAAA,CAFJ,CAGRH,OAAQH,cAHA,CALJ,CAUN0B,IAAK,CACHxB,QAAS,OADN,CAEHI,WAAY,CAAA,CAFT,CAVC,CAcNG,YAAa,MAdP,CAJJ,CAlIA,CAyJNoB,MAAO,CACL3B,QAASU,MAAA,CACP,MADO,CAELd,aAFK,CAGL,iFAHK,CADJ,CAMLK,OAAQ,CACNJ,OAAQ,CACNG,QAASU,MAAA,CACP,QADO,CAELd,aAFK,CAGL,wDAHK,CADH,CAMNQ,WAAY,CAAA,CANN,CAONC,MAAO,KAPD,CADF,CAUNM,SAAU,CACRX,QAASU,MAAA,CAAO,SAAP,CAAmBd,aAAnB,CAAmC,qBAAnC,CADD,CAERQ,WAAY,CAAA,CAFJ,CAGRH,OAAQH,cAHA,CAVJ;AAeN0B,IAAK,CACHxB,QAAS,OADN,CAEHI,WAAY,CAAA,CAFT,CAfC,CAmBNG,YAAa,MAnBP,CANH,CAzJD,CAsLNqB,SAAU,CACR5B,QAAS,WADD,CAERK,MAAO,SAFC,CAGRJ,OAAQ,CACNM,YAAa,OADP,CAHA,CAtLJ,CA8LNsB,QAAS,CACP7B,QAAS,qBADF,CAEPC,OAAQ,CACN6B,QAAS,CACP9B,QAAS,iBADF,CAEPI,WAAY,CAAA,CAFL,CADH,CAKNG,YAAa,MALP,CAFD,CA9LH,CAyMNwB,KAAM,CACJ/B,QAAS,kBADL,CAEJK,MAAO,SAFH,CAGJJ,OAAQ,CACNM,YAAa,MADP,CAHJ,CAzMA,CAHF,CADgE,CAAjC,CAuNrCyB,cAAAA,CAAetC,cAAA,OAAAO,OACfgC,MAAAA,CAAiB,CACnBlB,OAAQiB,aAAA,OADW,CAEnBP,KAAMO,aAAA,KAFa,CAGnBL,MAAOK,aAAA,MAHY,CAInBJ,SAAUI,aAAA,SAJS,CAKnBH,QAASG,aAAA,QALU;AAMnBD,KAAMC,aAAA,KANa,CAQrBtC,eAAAkB,IAAAZ,QAAA,CAAsB,oGAClBkC,eAAAA,CAAqBF,aAAA,OAAA/B,OACzBiC,eAAA,KAAAjC,OAAA,CAAoCgC,KACpCC,eAAA,OAAAjC,OAAA,CAAsCgC,KACtCC,eAAA,SAAAjC,OAAA,CAAwCgC,KACxCC,eAAA,QAAAjC,OAAA,CAAuCgC,KACvCC,eAAA,KAAAjC,OAAA,CAAoCgC,KAChCE,cAAAA,CAAoBH,aAAA,MAAA/B,OACxBkC,cAAA,OAAA,CAA8BF,KAAA,OAC9BE,cAAA,KAAA,CAA4BF,KAAA,KAC5BE,cAAA,MAAA,CAA6BF,KAAA,MAC7BE;aAAA,SAAA,CAAgCF,KAAA,SAChCE,cAAA,QAAA,CAA+BF,KAAA,QAC/BE,cAAA,KAAA,CAA4BF,KAAA,KAtQR,CAHxB1C,MAAAC,QAAA,CAAiBE,OACjBA,QAAA0C,YAAA,CAAsB,SACtB1C,QAAA2C,QAAA,CAAkB,EAL0G;",
"sources":["node_modules/refractor/lang/textile.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$textile\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = textile\ntextile.displayName = 'textile'\ntextile.aliases = []\nfunction textile(Prism) {\n  ;(function(Prism) {\n    // We don't allow for pipes inside parentheses\n    // to not break table pattern |(. foo |). bar |\n    var modifierRegex = /(?:\\([^|)]+\\)|\\[[^\\]]+\\]|\\{[^}]+\\})+/.source\n    var modifierTokens = {\n      css: {\n        pattern: /\\{[^}]+\\}/,\n        inside: {\n          rest: Prism.languages.css\n        }\n      },\n      'class-id': {\n        pattern: /(\\()[^)]+(?=\\))/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      lang: {\n        pattern: /(\\[)[^\\]]+(?=\\])/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n      punctuation: /[\\\\\\/]\\d+|\\S/\n    }\n    var textile = (Prism.languages.textile = Prism.languages.extend('markup', {\n      phrase: {\n        pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n        lookbehind: true,\n        inside: {\n          // h1. Header 1\n          'block-tag': {\n            pattern: RegExp('^[a-z]\\\\w*(?:' + modifierRegex + '|[<>=()])*\\\\.'),\n            inside: {\n              modifier: {\n                pattern: RegExp(\n                  '(^[a-z]\\\\w*)(?:' + modifierRegex + '|[<>=()])+(?=\\\\.)'\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              tag: /^[a-z]\\w*/,\n              punctuation: /\\.$/\n            }\n          },\n          // # List item\n          // * List item\n          list: {\n            pattern: RegExp('^[*#]+(?:' + modifierRegex + ')?\\\\s+.+', 'm'),\n            inside: {\n              modifier: {\n                pattern: RegExp('(^[*#]+)' + modifierRegex),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /^[*#]+/\n            }\n          },\n          // | cell | cell | cell |\n          table: {\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\n            // or the cell: |{color:red}.1|2|3|\n            pattern: RegExp(\n              '^(?:(?:' +\n                modifierRegex +\n                '|[<>=()^~])+\\\\.\\\\s*)?(?:\\\\|(?:(?:' +\n                modifierRegex +\n                '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+\\\\.)?[^|]*)+\\\\|',\n              'm'\n            ),\n            inside: {\n              modifier: {\n                // Modifiers for rows after the first one are\n                // preceded by a pipe and a line feed\n                pattern: RegExp(\n                  '(^|\\\\|(?:\\\\r?\\\\n|\\\\r)?)(?:' +\n                    modifierRegex +\n                    '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+(?=\\\\.)'\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /\\||^\\./\n            }\n          },\n          inline: {\n            pattern: RegExp(\n              '(\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])(?:' + modifierRegex + ')?.+?\\\\1'\n            ),\n            inside: {\n              // Note: superscripts and subscripts are not handled specifically\n              // *bold*, **bold**\n              bold: {\n                pattern: RegExp(\n                  '(^(\\\\*\\\\*?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'\n                ),\n                lookbehind: true\n              },\n              // _italic_, __italic__\n              italic: {\n                pattern: RegExp('(^(__?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),\n                lookbehind: true\n              },\n              // ??cite??\n              cite: {\n                pattern: RegExp(\n                  '(^\\\\?\\\\?(?:' + modifierRegex + ')?).+?(?=\\\\?\\\\?)'\n                ),\n                lookbehind: true,\n                alias: 'string'\n              },\n              // @code@\n              code: {\n                pattern: RegExp('(^@(?:' + modifierRegex + ')?).+?(?=@)'),\n                lookbehind: true,\n                alias: 'keyword'\n              },\n              // +inserted+\n              inserted: {\n                pattern: RegExp('(^\\\\+(?:' + modifierRegex + ')?).+?(?=\\\\+)'),\n                lookbehind: true\n              },\n              // -deleted-\n              deleted: {\n                pattern: RegExp('(^-(?:' + modifierRegex + ')?).+?(?=-)'),\n                lookbehind: true\n              },\n              // %span%\n              span: {\n                pattern: RegExp('(^%(?:' + modifierRegex + ')?).+?(?=%)'),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: RegExp(\n                  '(^\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])' + modifierRegex\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /[*_%?@+\\-^~]+/\n            }\n          },\n          // [alias]http://example.com\n          'link-ref': {\n            pattern: /^\\[[^\\]]+\\]\\S+$/m,\n            inside: {\n              string: {\n                pattern: /(\\[)[^\\]]+(?=\\])/,\n                lookbehind: true\n              },\n              url: {\n                pattern: /(\\])\\S+$/,\n                lookbehind: true\n              },\n              punctuation: /[\\[\\]]/\n            }\n          },\n          // \"text\":http://example.com\n          // \"text\":link-ref\n          link: {\n            pattern: RegExp(\n              '\"(?:' + modifierRegex + ')?[^\"]+\":.+?(?=[^\\\\w/]?(?:\\\\s|$))'\n            ),\n            inside: {\n              text: {\n                pattern: RegExp('(^\"(?:' + modifierRegex + ')?)[^\"]+(?=\")'),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: RegExp('(^\")' + modifierRegex),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[\":]/\n            }\n          },\n          // !image.jpg!\n          // !image.jpg(Title)!:http://example.com\n          image: {\n            pattern: RegExp(\n              '!(?:' +\n                modifierRegex +\n                '|[<>=()])*[^!\\\\s()]+(?:\\\\([^)]+\\\\))?!(?::.+?(?=[^\\\\w/]?(?:\\\\s|$)))?'\n            ),\n            inside: {\n              source: {\n                pattern: RegExp(\n                  '(^!(?:' +\n                    modifierRegex +\n                    '|[<>=()])*)[^!\\\\s()]+(?:\\\\([^)]+\\\\))?(?=!)'\n                ),\n                lookbehind: true,\n                alias: 'url'\n              },\n              modifier: {\n                pattern: RegExp('(^!)(?:' + modifierRegex + '|[<>=()])+'),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[!:]/\n            }\n          },\n          // Footnote[1]\n          footnote: {\n            pattern: /\\b\\[\\d+\\]/,\n            alias: 'comment',\n            inside: {\n              punctuation: /\\[|\\]/\n            }\n          },\n          // CSS(Cascading Style Sheet)\n          acronym: {\n            pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n            inside: {\n              comment: {\n                pattern: /(\\()[^)]+(?=\\))/,\n                lookbehind: true\n              },\n              punctuation: /[()]/\n            }\n          },\n          // Prism(C)\n          mark: {\n            pattern: /\\b\\((?:TM|R|C)\\)/,\n            alias: 'comment',\n            inside: {\n              punctuation: /[()]/\n            }\n          }\n        }\n      }\n    }))\n    var phraseInside = textile['phrase'].inside\n    var nestedPatterns = {\n      inline: phraseInside['inline'],\n      link: phraseInside['link'],\n      image: phraseInside['image'],\n      footnote: phraseInside['footnote'],\n      acronym: phraseInside['acronym'],\n      mark: phraseInside['mark']\n    } // Only allow alpha-numeric HTML tags, not XML tags\n    textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i // Allow some nesting\n    var phraseInlineInside = phraseInside['inline'].inside\n    phraseInlineInside['bold'].inside = nestedPatterns\n    phraseInlineInside['italic'].inside = nestedPatterns\n    phraseInlineInside['inserted'].inside = nestedPatterns\n    phraseInlineInside['deleted'].inside = nestedPatterns\n    phraseInlineInside['span'].inside = nestedPatterns // Allow some styles inside table cells\n    var phraseTableInside = phraseInside['table'].inside\n    phraseTableInside['inline'] = nestedPatterns['inline']\n    phraseTableInside['link'] = nestedPatterns['link']\n    phraseTableInside['image'] = nestedPatterns['image']\n    phraseTableInside['footnote'] = nestedPatterns['footnote']\n    phraseTableInside['acronym'] = nestedPatterns['acronym']\n    phraseTableInside['mark'] = nestedPatterns['mark']\n  })(Prism)\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","textile","Prism","modifierRegex","source","modifierTokens","css","pattern","inside","rest","languages","lookbehind","alias","lang","punctuation","extend","phrase","RegExp","modifier","tag","list","table","inline","bold","italic","cite","code","inserted","deleted","span","string","url","link","text","image","footnote","acronym","comment","mark","phraseInside","nestedPatterns","phraseInlineInside","phraseTableInside","displayName","aliases"]
}
