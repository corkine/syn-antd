shadow$provide.module$node_modules$refractor$lang$markup=function(global,process,require,module,exports,shadow$shims){function markup(Prism){Prism.languages.markup={comment:/\x3c!--[\s\S]*?--\x3e/,prolog:/<\?[\s\S]+?\?>/,doctype:/<!DOCTYPE[\s\S]+?>/i,cdata:/<!\[CDATA\[[\s\S]*?]]\x3e/i,tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/i,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/i,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},
"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/i,inside:{punctuation:[/^=/,{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:/&#?[\da-z]{1,8};/i};Prism.languages.markup.tag.inside["attr-value"].inside.entity=Prism.languages.markup.entity;Prism.hooks.add("wrap",function(env){"entity"===env.type&&(env.attributes.title=env.content.value.replace(/&amp;/,"\x26"))});Object.defineProperty(Prism.languages.markup.tag,
"addInlined",{value:function(tagName,lang){var includedCdataInside={};includedCdataInside["language-"+lang]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:Prism.languages[lang]};includedCdataInside.cdata=/^<!\[CDATA\[|\]\]>$/i;includedCdataInside={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:includedCdataInside}};includedCdataInside["language-"+lang]={pattern:/[\s\S]+/,inside:Prism.languages[lang]};lang={};lang[tagName]={pattern:RegExp(/(<__[\s\S]*?>)(?:<!\[CDATA\[[\s\S]*?\]\]>\s*|[\s\S])*?(?=<\/__>)/.source.replace(/__/g,
tagName),"i"),lookbehind:!0,greedy:!0,inside:includedCdataInside};Prism.languages.insertBefore("markup","cdata",lang)}});Prism.languages.xml=Prism.languages.extend("markup",{});Prism.languages.html=Prism.languages.markup;Prism.languages.mathml=Prism.languages.markup;Prism.languages.svg=Prism.languages.markup}module.exports=markup;markup.displayName="markup";markup.aliases=["xml","html","mathml","svg"]}
//# sourceMappingURL=module$node_modules$refractor$lang$markup.js.map
