{
"version":3,
"file":"module$node_modules$refractor$lang$ada.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMxHC,QAASA,IAAG,CAACC,KAAD,CAAQ,CAClBA,KAAAC,UAAAF,IAAA,CAAsB,CACpBG,QAAS,MADW,CAEpBC,OAAQ,uBAFY,CAGpBC,OAAQ,CACN,CACEC,QAAS,yFADX,CADM,CAIN,CACEA,QAAS,0DADX,CAJM,CAHY,CAWpB,YAAa,SAXO,CAYpBC,QAAS,4cAZW;AAapBC,QAAS,qBAbW,CAcpBC,SAAU,oCAdU,CAepBC,YAAa,eAfO,CAgBpBC,KAAM,KAhBc,CAiBpBC,SAAU,yBAjBU,CADJ,CAHpBf,MAAAC,QAAA,CAAiBE,GACjBA,IAAAa,YAAA,CAAkB,KAClBb,IAAAc,QAAA,CAAc,EAL0G;",
"sources":["node_modules/refractor/lang/ada.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$ada\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = ada\nada.displayName = 'ada'\nada.aliases = []\nfunction ada(Prism) {\n  Prism.languages.ada = {\n    comment: /--.*/,\n    string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/i,\n    number: [\n      {\n        pattern: /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n      },\n      {\n        pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n      }\n    ],\n    'attr-name': /\\b'\\w+/i,\n    keyword: /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n    boolean: /\\b(?:true|false)\\b/i,\n    operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n    punctuation: /\\.\\.?|[,;():]/,\n    char: /'.'/,\n    variable: /\\b[a-z](?:[_a-z\\d])*\\b/i\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","ada","Prism","languages","comment","string","number","pattern","keyword","boolean","operator","punctuation","char","variable","displayName","aliases"]
}
