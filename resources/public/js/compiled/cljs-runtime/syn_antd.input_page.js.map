{"version":3,"sources":["syn_antd/input_page.cljs"],"mappings":"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","names":["syn-antd.input-page/event-value","e","p1__25986#","syn-antd.input-page/basic-input-element","syn-antd.input/input","cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic","syn-antd.input-page/basic-input","syn-antd.dev/demo-element","syn-antd.input-page/rf-controls","k","syn-antd.button/button","G__25998","re-frame.core/dispatch-sync","G__26000","cljs.core/deref","p1__26001#","syn-antd.input-page/controlled-rf-input-element","G__26002","re-frame.core/subscribe","G__26003","syn-antd.input-page/controlled-rf-input","G__26013","p1__26014#","syn-antd.input-page/controlled-rf-input2-element","G__26020","G__26024","syn-antd.input-page/controlled-rf-input2","G__26026","p1__26027#","syn-antd.input-page/controlled-rf-password-input-element","syn-antd.input/input-password","G__26028","G__26031","syn-antd.input-page/controlled-rf-password-input","G__26039","p1__26040#","syn-antd.input-page/controlled-rf-search-input-element","syn-antd.input/input-search","G__26041","G__26042","syn-antd.input-page/controlled-rf-search-input","G__26044","p1__26045#","syn-antd.input-page/controlled-rf-text-area-input-element","syn-antd.input/input-text-area","G__26046","G__26047","syn-antd.input-page/controlled-rf-text-area-input","G__26049","syn-antd.input-page/test-input-page","syn-antd.dev/demo-page","syn-antd.alert/alert","G__26050","G__26051","re-frame.core/reg-sub","db","_","G__26052","G__26053","G__26054","G__26055","G__26056","G__26057","G__26058","G__26059","re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","p__26060","vec__26061","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","v","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"],"sourcesContent":["(ns syn-antd.input-page\n  (:require [syn-antd.alert :as alert]\n            [syn-antd.button :as button]\n            [syn-antd.input :as input]\n            [syn-antd.dev :as dev]\n            [re-frame.core :as re-frame])\n  (:require-macros [syn-antd.util :refer [source]]))\n\n(defn event-value [e]\n  (.. e -target -value))\n\n(defn basic-input-element []\n  [input/input\n   {:on-change #(prn (event-value %))}])\n\n(defn basic-input []\n  [dev/demo-element\n   \"Uncontrolled input\"\n   (source basic-input-element)\n   [basic-input-element]])\n\n(defn rf-controls [k]\n  [:<>\n   [button/button\n    {:type     \"primary\"\n     :on-click #(re-frame/dispatch-sync [::set-value k \"Test\"])}\n    \"Reset input to 'Test'\"]\n   [button/button\n    {:on-click #(re-frame/dispatch-sync [::set-value k nil])}\n    \"Reset input to nil\"]])\n\n(defn controlled-rf-input-element []\n  [input/input\n   {:value     @(re-frame/subscribe [::input1])\n    :on-change #(re-frame/dispatch-sync [::set-value ::input1 (event-value %)])}])\n\n(defn controlled-rf-input []\n  [dev/demo-element\n   \"Controlled input (re-frame)\"\n   (source controlled-rf-input-element)\n   [:<>\n    [rf-controls ::input1]\n    [controlled-rf-input-element]\n    [:p \"Value: \" @(re-frame/subscribe [::input1])]]])\n\n(defn controlled-rf-input2-element []\n  [input/input\n   {:value     @(re-frame/subscribe [::input2])\n    :on-change #(re-frame/dispatch-sync [::set-value ::input2 (event-value %)])}])\n\n(defn controlled-rf-input2 []\n  [dev/demo-element\n   \"Controlled input with default value (re-frame)\"\n   (source controlled-rf-input2-element)\n   [:<>\n    [rf-controls ::input2]\n    [controlled-rf-input2-element]\n    [:p \"Value: \" @(re-frame/subscribe [::input2])]]])\n\n(defn controlled-rf-password-input-element []\n  [input/input-password\n   {:value     @(re-frame/subscribe [::input3])\n    :on-change #(re-frame/dispatch-sync [::set-value ::input3 (event-value %)])}])\n\n(defn controlled-rf-password-input []\n  [dev/demo-element\n   \"Controlled password input (re-frame)\"\n   (source controlled-rf-password-input-element)\n   [:<>\n    [rf-controls ::input3]\n    [controlled-rf-password-input-element]\n    [:p \"Value: \" @(re-frame/subscribe [::input3])]]])\n\n(defn controlled-rf-search-input-element []\n  [input/input-search\n   {:value     @(re-frame/subscribe [::input4])\n    :on-change #(re-frame/dispatch-sync [::set-value ::input4 (event-value %)])}])\n\n(defn controlled-rf-search-input []\n  [dev/demo-element\n   \"Controlled search input (re-frame)\"\n   (source controlled-rf-search-input-element)\n   [:<>\n    [rf-controls ::input4]\n    [controlled-rf-search-input-element]\n    [:p \"Value: \" @(re-frame/subscribe [::input4])]]])\n\n(defn controlled-rf-text-area-input-element []\n  [input/input-text-area\n   {:value     @(re-frame/subscribe [::input5])\n    :on-change #(re-frame/dispatch-sync [::set-value ::input5 (event-value %)])}])\n\n(defn controlled-rf-text-area-input []\n  [dev/demo-element\n   \"Controlled text area input (re-frame)\"\n   (source controlled-rf-text-area-input-element)\n   [:<>\n    [rf-controls ::input5]\n    [controlled-rf-text-area-input-element]\n    [:p \"Value:\"]\n    [:pre @(re-frame/subscribe [::input5])]]])\n\n\n;; PAGE\n(defn test-input-page []\n  (dev/demo-page\n    {:title \"syn-antd.input\"\n     :link \"https://ant.design/components/input/\"\n     :link-title \"antd Documentation - Input\"\n     :alerts [alert/alert\n              {:type \"info\"\n               :message \"Note for re-frame use\"\n               :description \"Very fast typing, or slow rendering, can cause cursor jumping when managing input field state via re-frame. To avoid this, you have to synchronously trigger re-frame events, i.e. re-frame/dispatch-sync instead of re-frame/dispatch. See code below for examples\"}]\n     :elements [:<>\n                [basic-input]\n                [controlled-rf-input]\n                [controlled-rf-input2]\n                [controlled-rf-password-input]\n                [controlled-rf-search-input]\n                [controlled-rf-text-area-input]]}))\n\n\n;; RE FRAME STUFFS\n(re-frame/reg-sub ::input1 (fn [db _] (::input1 db)))\n(re-frame/reg-sub ::input2 (fn [db _] (::input2 db)))\n(re-frame/reg-sub ::input3 (fn [db _] (::input3 db)))\n(re-frame/reg-sub ::input4 (fn [db _] (::input4 db)))\n(re-frame/reg-sub ::input5 (fn [db _] (::input5 db)))\n\n(re-frame/reg-event-db\n  ::init\n  (fn [db _]\n    (assoc db ::input1 \"\"\n              ::input2 \"Test\"\n              ::input3 \"\"\n              ::input4 \"\"\n              ::input5 \"\")))\n\n(re-frame/reg-event-db\n  ::set-value\n  (fn [db [_ k v]]\n    (assoc db k v)))"]}