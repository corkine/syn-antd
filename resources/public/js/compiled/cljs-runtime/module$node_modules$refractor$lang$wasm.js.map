{
"version":3,
"file":"module$node_modules$refractor$lang$wasm.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMzHC,QAASA,KAAI,CAACC,KAAD,CAAQ,CACnBA,KAAAC,UAAAF,KAAA,CAAuB,CACrBG,QAAS,CACP,gBADO,CAEP,CACEC,QAAS,MADX,CAEEC,OAAQ,CAAA,CAFV,CAFO,CADY,CAQrBC,OAAQ,CACNF,QAAS,wBADH,CAENC,OAAQ,CAAA,CAFF,CARa,CAYrBE,QAAS,CACP,CACEH,QAAS,qBADX,CAEEI,OAAQ,CACNC,SAAU,GADJ,CAFV,CADO,CAOP,CACEL,QAAS,gbADX;AAEEI,OAAQ,CACNE,YAAa,IADP,CAFV,CAPO,CAaP,0QAbO,CAZY,CA2BrBC,SAAU,mCA3BW,CA4BrBC,OAAQ,iNA5Ba;AA6BrBF,YAAa,MA7BQ,CADJ,CAHrBb,MAAAC,QAAA,CAAiBE,IACjBA,KAAAa,YAAA,CAAmB,MACnBb,KAAAc,QAAA,CAAe,EAL0G;",
"sources":["node_modules/refractor/lang/wasm.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$wasm\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = wasm\nwasm.displayName = 'wasm'\nwasm.aliases = []\nfunction wasm(Prism) {\n  Prism.languages.wasm = {\n    comment: [\n      /\\(;[\\s\\S]*?;\\)/,\n      {\n        pattern: /;;.*/,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      greedy: true\n    },\n    keyword: [\n      {\n        pattern: /\\b(?:align|offset)=/,\n        inside: {\n          operator: /=/\n        }\n      },\n      {\n        pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/\n    ],\n    variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n    number: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n    punctuation: /[()]/\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","wasm","Prism","languages","comment","pattern","greedy","string","keyword","inside","operator","punctuation","variable","number","displayName","aliases"]
}
