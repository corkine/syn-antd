shadow$provide.module$node_modules$refractor$lang$javadoc=function(global,process,require,module,exports,shadow$shims){function javadoc(Prism){Prism.register(refractorJavadoclike);var codeLines={code:{pattern:/(^(\s*(?:\*\s*)*)).*[^*\s].+$/m,lookbehind:!0,inside:Prism.languages.java,alias:"language-java"}};Prism.languages.javadoc=Prism.languages.extend("javadoclike",{});Prism.languages.insertBefore("javadoc","keyword",{"class-name":[{pattern:/(@(?:exception|throws|see|link|linkplain|value)\s+(?:[a-z\d]+\.)*)[A-Z](?:\w*[a-z]\w*)?(?:\.[A-Z](?:\w*[a-z]\w*)?)*/,
lookbehind:!0,inside:{punctuation:/\./}},{pattern:/(@param\s+)<[A-Z]\w*>/,lookbehind:!0,inside:{punctuation:/[.<>]/}}],namespace:{pattern:/(@(?:exception|throws|see|link|linkplain)\s+)(?:[a-z\d]+\.)+/,lookbehind:!0,inside:{punctuation:/\./}},"code-section":[{pattern:/(\{@code\s+)(?:[^{}]|\{[^{}]*\})+?(?=\s*\})/,lookbehind:!0,inside:codeLines},{pattern:/(<(code|tt)>\s*)[\s\S]+?(?=\s*<\/\2>)/,lookbehind:!0,inside:codeLines}],tag:Prism.languages.markup.tag});Prism.languages.javadoclike.addSupport("java",
Prism.languages.javadoc)}var refractorJavadoclike=require("module$node_modules$refractor$lang$javadoclike");module.exports=javadoc;javadoc.displayName="javadoc";javadoc.aliases=[]}
//# sourceMappingURL=module$node_modules$refractor$lang$javadoc.js.map
