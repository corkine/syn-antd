{
"version":3,
"file":"module$node_modules$refractor$lang$lolcode.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,2CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM5HC,QAASA,QAAO,CAACC,KAAD,CAAQ,CACtBA,KAAAC,UAAAF,QAAA,CAA0B,CACxBG,QAAS,CAAC,4BAAD,CAA+B,SAA/B,CADe,CAExBC,OAAQ,CACNC,QAAS,gBADH,CAENC,OAAQ,CACNC,SAAU,YADJ,CAENC,OAAQ,CAAC,gBAAD,CAAmB,aAAnB,CAAkC,UAAlC,CAFF,CAFF,CAMNC,OAAQ,CAAA,CANF,CAFgB,CAUxBC,OAAQ,iCAVgB,CAWxBF,OAAQ,CACNH,QAAS,gEADH,CAENM,WAAY,CAAA,CAFN,CAGNL,OAAQ,CACNM,QAAS,SADH,CAHF,CAXgB;AAkBxBC,MAAO,CACLR,QAAS,gDADJ,CAELM,WAAY,CAAA,CAFP,CAGLG,MAAO,QAHF,CAlBiB,CAuBxBC,SAAU,CACRV,QAAS,4CADD,CAERM,WAAY,CAAA,CAFJ,CAvBc,CA2BxBC,QAAS,CACP,CACEP,QAAS,qRADX,CAEEM,WAAY,CAAA,CAFd,CADO,CAKP,cALO,CA3Be,CAkCxBK,QAAS,CACPX,QAAS,8BADF;AAEPM,WAAY,CAAA,CAFL,CAlCe,CAsCxBJ,SAAU,CACRF,QAAS,oBADD,CAERM,WAAY,CAAA,CAFJ,CAtCc,CA0CxBM,SAAU,CACRZ,QAAS,sHADD,CAERM,WAAY,CAAA,CAFJ,CA1Cc,CA8CxBO,YAAa,aA9CW,CADJ,CAHxBrB,MAAAC,QAAA,CAAiBE,OACjBA,QAAAmB,YAAA,CAAsB,SACtBnB,QAAAoB,QAAA,CAAkB,EAL0G;",
"sources":["node_modules/refractor/lang/lolcode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$lolcode\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = lolcode\nlolcode.displayName = 'lolcode'\nlolcode.aliases = []\nfunction lolcode(Prism) {\n  Prism.languages.lolcode = {\n    comment: [/\\bOBTW\\s+[\\s\\S]*?\\s+TLDR\\b/, /\\bBTW.+/],\n    string: {\n      pattern: /\"(?::.|[^\"])*\"/,\n      inside: {\n        variable: /:\\{[^}]+\\}/,\n        symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n      },\n      greedy: true\n    },\n    number: /(?:\\B-)?(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)/,\n    symbol: {\n      pattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,\n      lookbehind: true,\n      inside: {\n        keyword: /A(?=\\s)/\n      }\n    },\n    label: {\n      pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,\n      lookbehind: true\n    },\n    keyword: [\n      {\n        pattern: /(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      /'Z(?=\\s|,|$)/\n    ],\n    boolean: {\n      pattern: /(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    variable: {\n      pattern: /(^|\\s)IT(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    operator: {\n      pattern: /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    punctuation: /\\.{3}|\u2026|,|!/\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","lolcode","Prism","languages","comment","string","pattern","inside","variable","symbol","greedy","number","lookbehind","keyword","label","alias","function","boolean","operator","punctuation","displayName","aliases"]
}
