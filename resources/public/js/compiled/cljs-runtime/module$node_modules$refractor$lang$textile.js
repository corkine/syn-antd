shadow$provide.module$node_modules$refractor$lang$textile=function(global,process,require,module,exports,shadow$shims){function textile(Prism){var modifierRegex=/(?:\([^|)]+\)|\[[^\]]+\]|\{[^}]+\})+/.source,modifierTokens={css:{pattern:/\{[^}]+\}/,inside:{rest:Prism.languages.css}},"class-id":{pattern:/(\()[^)]+(?=\))/,lookbehind:!0,alias:"attr-value"},lang:{pattern:/(\[)[^\]]+(?=\])/,lookbehind:!0,alias:"attr-value"},punctuation:/[\\\/]\d+|\S/};modifierTokens=Prism.languages.textile=Prism.languages.extend("markup",
{phrase:{pattern:/(^|\r|\n)\S[\s\S]*?(?=$|\r?\n\r?\n|\r\r)/,lookbehind:!0,inside:{"block-tag":{pattern:RegExp("^[a-z]\\w*(?:"+modifierRegex+"|[\x3c\x3e\x3d()])*\\."),inside:{modifier:{pattern:RegExp("(^[a-z]\\w*)(?:"+modifierRegex+"|[\x3c\x3e\x3d()])+(?\x3d\\.)"),lookbehind:!0,inside:modifierTokens},tag:/^[a-z]\w*/,punctuation:/\.$/}},list:{pattern:RegExp("^[*#]+(?:"+modifierRegex+")?\\s+.+","m"),inside:{modifier:{pattern:RegExp("(^[*#]+)"+modifierRegex),lookbehind:!0,inside:modifierTokens},punctuation:/^[*#]+/}},
table:{pattern:RegExp("^(?:(?:"+modifierRegex+"|[\x3c\x3e\x3d()^~])+\\.\\s*)?(?:\\|(?:(?:"+modifierRegex+"|[\x3c\x3e\x3d()^~_]|[\\\\/]\\d+)+\\.)?[^|]*)+\\|","m"),inside:{modifier:{pattern:RegExp("(^|\\|(?:\\r?\\n|\\r)?)(?:"+modifierRegex+"|[\x3c\x3e\x3d()^~_]|[\\\\/]\\d+)+(?\x3d\\.)"),lookbehind:!0,inside:modifierTokens},punctuation:/\||^\./}},inline:{pattern:RegExp("(\\*\\*|__|\\?\\?|[*_%@+\\-^~])(?:"+modifierRegex+")?.+?\\1"),inside:{bold:{pattern:RegExp("(^(\\*\\*?)(?:"+modifierRegex+")?).+?(?\x3d\\2)"),
lookbehind:!0},italic:{pattern:RegExp("(^(__?)(?:"+modifierRegex+")?).+?(?\x3d\\2)"),lookbehind:!0},cite:{pattern:RegExp("(^\\?\\?(?:"+modifierRegex+")?).+?(?\x3d\\?\\?)"),lookbehind:!0,alias:"string"},code:{pattern:RegExp("(^@(?:"+modifierRegex+")?).+?(?\x3d@)"),lookbehind:!0,alias:"keyword"},inserted:{pattern:RegExp("(^\\+(?:"+modifierRegex+")?).+?(?\x3d\\+)"),lookbehind:!0},deleted:{pattern:RegExp("(^-(?:"+modifierRegex+")?).+?(?\x3d-)"),lookbehind:!0},span:{pattern:RegExp("(^%(?:"+modifierRegex+
")?).+?(?\x3d%)"),lookbehind:!0},modifier:{pattern:RegExp("(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])"+modifierRegex),lookbehind:!0,inside:modifierTokens},punctuation:/[*_%?@+\-^~]+/}},"link-ref":{pattern:/^\[[^\]]+\]\S+$/m,inside:{string:{pattern:/(\[)[^\]]+(?=\])/,lookbehind:!0},url:{pattern:/(\])\S+$/,lookbehind:!0},punctuation:/[\[\]]/}},link:{pattern:RegExp('"(?:'+modifierRegex+')?[^"]+":.+?(?\x3d[^\\w/]?(?:\\s|$))'),inside:{text:{pattern:RegExp('(^"(?:'+modifierRegex+')?)[^"]+(?\x3d")'),lookbehind:!0},
modifier:{pattern:RegExp('(^")'+modifierRegex),lookbehind:!0,inside:modifierTokens},url:{pattern:/(:).+/,lookbehind:!0},punctuation:/[":]/}},image:{pattern:RegExp("!(?:"+modifierRegex+"|[\x3c\x3e\x3d()])*[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?\x3d[^\\w/]?(?:\\s|$)))?"),inside:{source:{pattern:RegExp("(^!(?:"+modifierRegex+"|[\x3c\x3e\x3d()])*)[^!\\s()]+(?:\\([^)]+\\))?(?\x3d!)"),lookbehind:!0,alias:"url"},modifier:{pattern:RegExp("(^!)(?:"+modifierRegex+"|[\x3c\x3e\x3d()])+"),lookbehind:!0,inside:modifierTokens},
url:{pattern:/(:).+/,lookbehind:!0},punctuation:/[!:]/}},footnote:{pattern:/\b\[\d+\]/,alias:"comment",inside:{punctuation:/\[|\]/}},acronym:{pattern:/\b[A-Z\d]+\([^)]+\)/,inside:{comment:{pattern:/(\()[^)]+(?=\))/,lookbehind:!0},punctuation:/[()]/}},mark:{pattern:/\b\((?:TM|R|C)\)/,alias:"comment",inside:{punctuation:/[()]/}}}}});modifierRegex=modifierTokens.phrase.inside;Prism={inline:modifierRegex.inline,link:modifierRegex.link,image:modifierRegex.image,footnote:modifierRegex.footnote,acronym:modifierRegex.acronym,
mark:modifierRegex.mark};modifierTokens.tag.pattern=/<\/?(?!\d)[a-z0-9]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/i;modifierTokens=modifierRegex.inline.inside;modifierTokens.bold.inside=Prism;modifierTokens.italic.inside=Prism;modifierTokens.inserted.inside=Prism;modifierTokens.deleted.inside=Prism;modifierTokens.span.inside=Prism;modifierRegex=modifierRegex.table.inside;modifierRegex.inline=Prism.inline;modifierRegex.link=Prism.link;modifierRegex.image=Prism.image;
modifierRegex.footnote=Prism.footnote;modifierRegex.acronym=Prism.acronym;modifierRegex.mark=Prism.mark}module.exports=textile;textile.displayName="textile";textile.aliases=[]}
//# sourceMappingURL=module$node_modules$refractor$lang$textile.js.map
