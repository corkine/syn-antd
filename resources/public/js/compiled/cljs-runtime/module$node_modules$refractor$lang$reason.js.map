{
"version":3,
"file":"module$node_modules$refractor$lang$reason.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,0CAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM3HC,QAASA,OAAM,CAACC,KAAD,CAAQ,CACrBA,KAAAC,UAAAF,OAAA,CAAyBC,KAAAC,UAAAC,OAAA,CAAuB,OAAvB,CAAgC,CACvDC,QAAS,CACPC,QAAS,2BADF,CAEPC,WAAY,CAAA,CAFL,CAD8C,CAKvDC,OAAQ,CACNF,QAAS,qCADH,CAENG,OAAQ,CAAA,CAFF,CAL+C,CAUvD,aAAc,YAVyC,CAWvDC,QAAS,2RAX8C;AAYvDC,SAAU,qGAZ6C,CAAhC,CAczBT,MAAAC,UAAAS,aAAA,CAA6B,QAA7B,CAAuC,YAAvC,CAAqD,CACnDC,UAAW,CACTP,QAAS,+DADA,CAETQ,MAAO,QAFE,CADwC,CAKnDC,YAAa,CAEXT,QAAS,uBAFE,CAGXQ,MAAO,UAHI,CALsC,CAUnDE,MAAO,CACLV,QAAS,kBADJ,CAELQ,MAAO,QAFF,CAV4C,CAArD,CAeA,QAAOZ,KAAAC,UAAAF,OAAAgB,SA9Bc,CAHvBnB,MAAAC,QAAA,CAAiBE,MACjBA,OAAAiB,YAAA,CAAqB,QACrBjB,OAAAkB,QAAA,CAAiB,EAL0G;",
"sources":["node_modules/refractor/lang/reason.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$reason\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = reason\nreason.displayName = 'reason'\nreason.aliases = []\nfunction reason(Prism) {\n  Prism.languages.reason = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    // 'class-name' must be matched *after* 'constructor' defined below\n    'class-name': /\\b[A-Z]\\w*/,\n    keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n    operator: /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n  })\n  Prism.languages.insertBefore('reason', 'class-name', {\n    character: {\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n      alias: 'string'\n    },\n    constructor: {\n      // Negative look-ahead prevents from matching things like String.capitalize\n      pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n      alias: 'variable'\n    },\n    label: {\n      pattern: /\\b[a-z]\\w*(?=::)/,\n      alias: 'symbol'\n    }\n  }) // We can't match functions property, so let's not even try.\n  delete Prism.languages.reason.function\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","reason","Prism","languages","extend","comment","pattern","lookbehind","string","greedy","keyword","operator","insertBefore","character","alias","constructor","label","function","displayName","aliases"]
}
