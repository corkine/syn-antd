{
"version":3,
"file":"module$node_modules$refractor$lang$pascaligo.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,6CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM9HC,QAASA,UAAS,CAACC,cAAD,CAAQ,CACtB,SAAQ,CAACA,KAAD,CAAQ,CAGhB,IAAIC,KAAO,+BAAAC,OAAAC,QAAA,CACT,WADS,CADE,0CAAAD,OACF,CAAX,CAIIH,UAAaC,KAAAI,UAAAL,UAAbA,CAAyC,CAC3CM,QAAS,yBADkC,CAE3CC,OAAQ,CACNC,QAAS,2CADH,CAENC,OAAQ,CAAA,CAFF,CAFmC,CAM3C,aAAc,CACZ,CACED,QAASE,MAAA,CACP,8BAAAP,OAAAC,QAAA,CAA8C,SAA9C;AAAyDF,IAAzD,CADO,CAEP,GAFO,CADX,CAKES,WAAY,CAAA,CALd,CAMEC,OAAQ,IANV,CADY,CASZ,CACEJ,QAASE,MAAA,CACP,mBAAAP,OAAAC,QAAA,CAAmC,SAAnC,CAA8CF,IAA9C,CADO,CAEP,GAFO,CADX,CAKEU,OAAQ,IALV,CATY,CAgBZ,CACEJ,QAASE,MAAA,CAAO,cAAAP,OAAAC,QAAA,CAA8B,SAA9B,CAAyCF,IAAzC,CAAP,CADX,CAEES,WAAY,CAAA,CAFd,CAGEC,OAAQ,IAHV,CAhBY,CAN6B,CA4B3CC,QAAS,CACPL,QAAS,kIADF,CAEPG,WAAY,CAAA,CAFL,CA5BkC,CAgC3CG,QAAS,CACPN,QAAS,6BADF,CAEPG,WAAY,CAAA,CAFL,CAhCkC,CAoC3CI,QAAS,CACPP,QAAS,2DADF;AAEPG,WAAY,CAAA,CAFL,CApCkC,CAwC3CK,SAAU,eAxCiC,CAyC3CC,OAAQ,CAEN,4BAFM,CAGN,0CAHM,CAzCmC,CA8C3CC,SAAU,0EA9CiC,CA+C3CC,YAAa,0BA/C8B,CAJ7C,CAqDIC,gBAAkB,CACpB,SADoB,CAEpB,SAFoB,CAGpB,SAHoB,CAIpB,UAJoB,CAKpB,aALoB,CAAAC,OAAA,CAMb,QAAQ,CAACC,KAAD,CAAQC,GAAR,CAAa,CAC5BD,KAAA,CAAMC,GAAN,CAAA,CAAavB,SAAA,CAAUuB,GAAV,CACb,OAAOD,MAFqB,CANR,CASnB,EATmB,CAUtBtB,UAAA,CAAU,YAAV,CAAAwB,QAAA,CAAgC,QAAQ,CAACC,CAAD,CAAI,CAC1CA,CAAAb,OAAA,CAAWQ,eAD+B,CAA5C,CAlEgB,CAAhB,CAAD,CAqEEnB,cArEF,CADuB,CAH1BJ,MAAAC,QAAA,CAAiBE,SACjBA;SAAA0B,YAAA,CAAwB,WACxB1B,UAAA2B,QAAA,CAAoB,EAL0G;",
"sources":["node_modules/refractor/lang/pascaligo.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$pascaligo\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = pascaligo\npascaligo.displayName = 'pascaligo'\npascaligo.aliases = []\nfunction pascaligo(Prism) {\n  ;(function(Prism) {\n    // Pascaligo is a layer 2 smart contract language for the tezos blockchain\n    var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source\n    var type = /(?:\\w+(?:<braces>)?|<braces>)/.source.replace(\n      /<braces>/g,\n      braces\n    )\n    var pascaligo = (Prism.languages.pascaligo = {\n      comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n      string: {\n        pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n        greedy: true\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(/<type>/g, type),\n            'i'\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /<type>(?=\\s+is\\b)/.source.replace(/<type>/g, type),\n            'i'\n          ),\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(/(:\\s*)<type>/.source.replace(/<type>/g, type)),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n      keyword: {\n        pattern: /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[^&])\\b(?:True|False)\\b/i,\n        lookbehind: true\n      },\n      builtin: {\n        pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n        lookbehind: true\n      },\n      function: /\\w+(?=\\s*\\()/i,\n      number: [\n        // Hexadecimal, octal and binary\n        /%[01]+|&[0-7]+|\\$[a-f\\d]+/i, // Decimal\n        /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\n      ],\n      operator: /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n      punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n    })\n    var classNameInside = [\n      'comment',\n      'keyword',\n      'builtin',\n      'operator',\n      'punctuation'\n    ].reduce(function(accum, key) {\n      accum[key] = pascaligo[key]\n      return accum\n    }, {})\n    pascaligo['class-name'].forEach(function(p) {\n      p.inside = classNameInside\n    })\n  })(Prism)\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","pascaligo","Prism","type","source","replace","languages","comment","string","pattern","greedy","RegExp","lookbehind","inside","keyword","boolean","builtin","function","number","operator","punctuation","classNameInside","reduce","accum","key","forEach","p","displayName","aliases"]
}
