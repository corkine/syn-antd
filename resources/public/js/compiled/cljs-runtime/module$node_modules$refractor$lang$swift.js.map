{
"version":3,
"file":"module$node_modules$refractor$lang$swift.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,yCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM1HC,QAASA,MAAK,CAACC,KAAD,CAAQ,CAEpBA,KAAAC,UAAAF,MAAA,CAAwBC,KAAAC,UAAAC,OAAA,CAAuB,OAAvB,CAAgC,CACtDC,OAAQ,CACNC,QAAS,sEADH,CAENC,OAAQ,CAAA,CAFF,CAGNC,OAAQ,CACNC,cAAe,CACbH,QAAS,4BADI,CAEbE,OAAQ,CACNE,UAAW,CACTJ,QAAS,WADA,CAETK,MAAO,UAFE,CADL,CAFK,CADT,CAHF,CAD8C,CAgBtDC,QAAS,+hBAhB6C;AAiBtDC,OAAQ,iFAjB8C,CAkBtDC,SAAU,yCAlB4C,CAmBtDC,OAAQ,gJAnB8C,CAoBtDC,QAAS,miBApB6C,CAAhC,CAsBxBd;KAAAC,UAAAF,MAAA,OAAAO,OAAA,cAAAA,OAAAS,KAAA,CACEf,KAAAC,UAAAF,MAzBkB,CAHtBH,MAAAC,QAAA,CAAiBE,KACjBA,MAAAiB,YAAA,CAAoB,OACpBjB,MAAAkB,QAAA,CAAgB,EAL0G;",
"sources":["node_modules/refractor/lang/swift.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$swift\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = swift\nswift.displayName = 'swift'\nswift.aliases = []\nfunction swift(Prism) {\n  // issues: nested multiline comments\n  Prism.languages.swift = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,\n          inside: {\n            delimiter: {\n              pattern: /^\\\\\\(|\\)$/,\n              alias: 'variable' // See rest below\n            }\n          }\n        }\n      }\n    },\n    keyword: /\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,\n    number: /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n    constant: /\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n    atrule: /@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,\n    builtin: /\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/\n  })\n  Prism.languages.swift['string'].inside['interpolation'].inside.rest =\n    Prism.languages.swift\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","swift","Prism","languages","extend","string","pattern","greedy","inside","interpolation","delimiter","alias","keyword","number","constant","atrule","builtin","rest","displayName","aliases"]
}
