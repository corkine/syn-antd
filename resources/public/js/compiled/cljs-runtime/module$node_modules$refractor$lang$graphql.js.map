{
"version":3,
"file":"module$node_modules$refractor$lang$graphql.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,2CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM5HC,QAASA,QAAO,CAACC,KAAD,CAAQ,CACtBA,KAAAC,UAAAF,QAAA,CAA0B,CACxBG,QAAS,KADe,CAExBC,OAAQ,CACNC,QAAS,uBADH,CAENC,OAAQ,CAAA,CAFF,CAFgB,CAMxBC,OAAQ,0CANgB,CAOxBC,QAAS,oBAPe,CAQxBC,SAAU,cARc,CASxBC,UAAW,CACTL,QAAS,aADA,CAETM,MAAO,UAFE,CATa,CAaxB,YAAa,CACXN,QAAS,8DADE,CAEXC,OAAQ,CAAA,CAFG,CAbW,CAiBxB,aAAc,CACZD,QAAS,uEADG;AAEZO,WAAY,CAAA,CAFA,CAjBU,CAqBxBC,SAAU,CACRR,QAAS,8CADD,CAERO,WAAY,CAAA,CAFJ,CAGRD,MAAO,UAHC,CArBc,CA0BxBG,QAAS,6FA1Be,CA2BxBC,SAAU,aA3Bc,CA4BxBC,YAAa,gBA5BW,CA6BxBC,SAAU,4BA7Bc,CADJ,CAHxBpB,MAAAC,QAAA,CAAiBE,OACjBA,QAAAkB,YAAA,CAAsB,SACtBlB,QAAAmB,QAAA,CAAkB,EAL0G;",
"sources":["node_modules/refractor/lang/graphql.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$graphql\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = graphql\ngraphql.displayName = 'graphql'\ngraphql.aliases = []\nfunction graphql(Prism) {\n  Prism.languages.graphql = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:true|false)\\b/,\n    variable: /\\$[a-z_]\\w*/i,\n    directive: {\n      pattern: /@[a-z_]\\w*/i,\n      alias: 'function'\n    },\n    'attr-name': {\n      pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true\n    },\n    fragment: {\n      pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: /\\b(?:enum|fragment|implements|input|interface|mutation|on|query|scalar|schema|type|union)\\b/,\n    operator: /[!=|]|\\.{3}/,\n    punctuation: /[!(){}\\[\\]:=,]/,\n    constant: /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","graphql","Prism","languages","comment","string","pattern","greedy","number","boolean","variable","directive","alias","lookbehind","fragment","keyword","operator","punctuation","constant","displayName","aliases"]
}
