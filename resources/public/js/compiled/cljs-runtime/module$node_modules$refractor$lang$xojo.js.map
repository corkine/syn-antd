{
"version":3,
"file":"module$node_modules$refractor$lang$xojo.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMzHC,QAASA,KAAI,CAACC,KAAD,CAAQ,CACnBA,KAAAC,UAAAF,KAAA,CAAuB,CACrBG,QAAS,CACPC,QAAS,qBADF,CAEPC,OAAQ,CACNC,QAAS,OADH,CAFD,CADY,CAOrBC,OAAQ,CACNH,QAAS,gBADH,CAENI,OAAQ,CAAA,CAFF,CAPa,CAWrBC,OAAQ,CAAC,wCAAD,CAA2C,mBAA3C,CAXa,CAYrBC,OAAQ,qCAZa,CAarBJ,QAAS,oXAbY;AAcrBK,SAAU,4FAdW,CAerBC,YAAa,UAfQ,CADJ,CAHrBf,MAAAC,QAAA,CAAiBE,IACjBA,KAAAa,YAAA,CAAmB,MACnBb,KAAAc,QAAA,CAAe,EAL0G;",
"sources":["node_modules/refractor/lang/xojo.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$xojo\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = xojo\nxojo.displayName = 'xojo'\nxojo.aliases = []\nfunction xojo(Prism) {\n  Prism.languages.xojo = {\n    comment: {\n      pattern: /(?:'|\\/\\/|Rem\\b).+/i,\n      inside: {\n        keyword: /^Rem/i\n      }\n    },\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    number: [/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\n    symbol: /#(?:If|Else|ElseIf|Endif|Pragma)\\b/i,\n    keyword: /\\b(?:AddHandler|App|Array|As(?:signs)?|By(?:Ref|Val)|Break|Call|Case|Catch|Const|Continue|CurrentMethodName|Declare|Dim|Do(?:wnTo)?|Each|Else(?:If)?|End|Exit|Extends|False|Finally|For|Global|If|In|Lib|Loop|Me|Next|Nil|Optional|ParamArray|Raise(?:Event)?|ReDim|Rem|RemoveHandler|Return|Select|Self|Soft|Static|Step|Super|Then|To|True|Try|Ubound|Until|Using|Wend|While)\\b/i,\n    operator: /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|Xor|WeakAddressOf)\\b/i,\n    punctuation: /[.,;:()]/\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","xojo","Prism","languages","comment","pattern","inside","keyword","string","greedy","number","symbol","operator","punctuation","displayName","aliases"]
}
