{
"version":3,
"file":"module$node_modules$refractor$lang$bison.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,yCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM1HC,QAASA,MAAK,CAACC,KAAD,CAAQ,CACpBA,KAAAC,SAAA,CAAeC,UAAf,CACAF,MAAAG,UAAAJ,MAAA,CAAwBC,KAAAG,UAAAC,OAAA,CAAuB,GAAvB,CAA4B,EAA5B,CACxBJ,MAAAG,UAAAE,aAAA,CAA6B,OAA7B,CAAsC,SAAtC,CAAiD,CAC/CN,MAAO,CAILO,QAAS,uBAJJ,CAKLC,OAAQ,CACNC,EAAG,CAEDF,QAAS,yCAFR,CAGDC,OAAQ,CACNE,UAAW,CACTH,QAAS,aADA,CAETI,MAAO,aAFE,CADL,CAKN,iBAAkB,CAChBJ,QAAS,0BADO,CAEhBI,MAAO,UAFS,CAGhBH,OAAQ,CACNI,YAAa,KADP,CAHQ,CALZ;AAYNC,KAAMZ,KAAAG,UAAAK,EAZA,CAHP,CADG,CAmBNK,QAASb,KAAAG,UAAAK,EAAAK,QAnBH,CAoBNC,OAAQd,KAAAG,UAAAK,EAAAM,OApBF,CAqBNC,SAAU,UArBJ,CAsBNC,QAAS,MAtBH,CAuBNC,OAAQ,CACNX,QAAS,+BADH,CAENY,WAAY,CAAA,CAFN,CAvBF,CA2BNP,YAAa,mBA3BP,CALH,CADwC,CAAjD,CAHoB,CAJtB,IAAIT,WAAaP,OAAA,CAAQ,sCAAR,CACjBC,OAAAC,QAAA,CAAiBE,KACjBA,MAAAoB,YAAA,CAAoB,OACpBpB,MAAAqB,QAAA,CAAgB,EAL0G;",
"sources":["node_modules/refractor/lang/bison.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$bison\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = bison\nbison.displayName = 'bison'\nbison.aliases = []\nfunction bison(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.bison = Prism.languages.extend('c', {})\n  Prism.languages.insertBefore('bison', 'comment', {\n    bison: {\n      // This should match all the beginning of the file\n      // including the prologue(s), the bison declarations and\n      // the grammar rules.\n      pattern: /^[\\s\\S]*?%%[\\s\\S]*?%%/,\n      inside: {\n        c: {\n          // Allow for one level of nested braces\n          pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^%?\\{|%?\\}$/,\n              alias: 'punctuation'\n            },\n            'bison-variable': {\n              pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n              alias: 'variable',\n              inside: {\n                punctuation: /<|>/\n              }\n            },\n            rest: Prism.languages.c\n          }\n        },\n        comment: Prism.languages.c.comment,\n        string: Prism.languages.c.string,\n        property: /\\S+(?=:)/,\n        keyword: /%\\w+/,\n        number: {\n          pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n          lookbehind: true\n        },\n        punctuation: /%[%?]|[|:;\\[\\]<>]/\n      }\n    }\n  })\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","bison","Prism","register","refractorC","languages","extend","insertBefore","pattern","inside","c","delimiter","alias","punctuation","rest","comment","string","property","keyword","number","lookbehind","displayName","aliases"]
}
