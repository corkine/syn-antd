shadow$provide.module$node_modules$react_syntax_highlighter$dist$cjs$highlight=function(global,process,require,module,exports,shadow$shims){function getLineNumbers(_ref){var startingLineNumber=_ref.startingLineNumber,style=_ref.style;return _ref.lines.map(function(_,i){_=i+startingLineNumber;return _react.default.createElement("span",{key:"line-".concat(i),className:"react-syntax-highlighter-line-number",style:"function"===typeof style?style(_):style},"".concat(_,"\n"))})}function LineNumbers(_ref2){var codeString=
_ref2.codeString,_ref2$containerStyle=_ref2.containerStyle,_ref2$numberStyle=_ref2.numberStyle;_ref2$numberStyle=void 0===_ref2$numberStyle?{}:_ref2$numberStyle;var startingLineNumber=_ref2.startingLineNumber;return _react.default.createElement("code",{style:Object.assign({},_ref2.codeStyle,void 0===_ref2$containerStyle?{float:"left",paddingRight:"10px"}:_ref2$containerStyle)},getLineNumbers({lines:codeString.replace(/\n$/,"").split("\n"),style:_ref2$numberStyle,startingLineNumber:startingLineNumber}))}
function createLineElement(_ref3){var children=_ref3.children,lineNumber=_ref3.lineNumber,lineProps=_ref3.lineProps;_ref3=_ref3.className;_ref3=void 0===_ref3?[]:_ref3;lineNumber=("function"===typeof lineProps?lineProps(lineNumber):lineProps)||{};lineNumber.className=lineNumber.className?_ref3.concat(lineNumber.className):_ref3;return{type:"element",tagName:"span",properties:lineNumber,children:children}}function flattenCodeTree(tree){for(var className=1<arguments.length&&void 0!==arguments[1]?arguments[1]:
[],newTree=2<arguments.length&&void 0!==arguments[2]?arguments[2]:[],i=0;i<tree.length;i++){var node=tree[i];if("text"===node.type)newTree.push(createLineElement({children:[node],className:className}));else if(node.children){var classNames=className.concat(node.properties.className);newTree=newTree.concat(flattenCodeTree(node.children,classNames))}}return newTree}function wrapLinesInSpan(codeTree,lineProps){var tree=flattenCodeTree(codeTree.value),newTree=[],lastLineBreakIndex=-1,index=0;for(codeTree=
function(){var node=tree[index],value=node.children[0].value;if(value.match(newLineRegex)){var splitValue=value.split("\n");splitValue.forEach(function(text,i){var lineNumber=newTree.length+1,newChild={type:"text",value:"".concat(text,"\n")};0===i?(text=tree.slice(lastLineBreakIndex+1,index).concat(createLineElement({children:[newChild],className:node.properties.className})),newTree.push(createLineElement({children:text,lineNumber:lineNumber,lineProps:lineProps}))):i===splitValue.length-1?tree[index+
1]&&tree[index+1].children&&tree[index+1].children[0]?(lineNumber={type:"text",value:"".concat(text)},lineNumber=createLineElement({children:[lineNumber],className:node.properties.className}),tree.splice(index+1,0,lineNumber)):newTree.push(createLineElement({children:[newChild],lineNumber:lineNumber,lineProps:lineProps,className:node.properties.className})):newTree.push(createLineElement({children:[newChild],lineNumber:lineNumber,lineProps:lineProps,className:node.properties.className}))});lastLineBreakIndex=
index}index++};index<tree.length;)codeTree();lastLineBreakIndex!==tree.length-1&&(codeTree=tree.slice(lastLineBreakIndex+1,tree.length))&&codeTree.length&&newTree.push(createLineElement({children:codeTree,lineNumber:newTree.length+1,lineProps:lineProps}));return newTree}function defaultRenderer(_ref4){var stylesheet=_ref4.stylesheet,useInlineStyles=_ref4.useInlineStyles;return _ref4.rows.map(function(node,i){return(0,_createElement.default)({node:node,stylesheet:stylesheet,useInlineStyles:useInlineStyles,
key:"code-segement".concat(i)})})}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(defaultAstGenerator,defaultStyle){return function(_ref6){var language=_ref6.language,children=_ref6.children,_ref6$style=_ref6.style;_ref6$style=void 0===_ref6$style?defaultStyle:_ref6$style;var _ref6$customStyle=_ref6.customStyle,customStyle=void 0===_ref6$customStyle?{}:_ref6$customStyle;_ref6$customStyle=
_ref6.codeTagProps;_ref6$customStyle=void 0===_ref6$customStyle?{style:_ref6$style['code[class*\x3d"language-"]']}:_ref6$customStyle;var _ref6$useInlineStyles=_ref6.useInlineStyles;_ref6$useInlineStyles=void 0===_ref6$useInlineStyles?!0:_ref6$useInlineStyles;var _ref6$showLineNumbers=_ref6.showLineNumbers,showLineNumbers=void 0===_ref6$showLineNumbers?!1:_ref6$showLineNumbers;_ref6$showLineNumbers=_ref6.startingLineNumber;var startingLineNumber=void 0===_ref6$showLineNumbers?1:_ref6$showLineNumbers,
lineNumberContainerStyle=_ref6.lineNumberContainerStyle,lineNumberStyle=_ref6.lineNumberStyle;_ref6$showLineNumbers=_ref6.wrapLines;var _ref6$lineProps=_ref6.lineProps,lineProps=void 0===_ref6$lineProps?{}:_ref6$lineProps;_ref6$lineProps=_ref6.renderer;var _ref6$PreTag=_ref6.PreTag;_ref6$PreTag=void 0===_ref6$PreTag?"pre":_ref6$PreTag;var _ref6$CodeTag=_ref6.CodeTag;_ref6$CodeTag=void 0===_ref6$CodeTag?"code":_ref6$CodeTag;var _ref6$code=_ref6.code;children=void 0===_ref6$code?Array.isArray(children)?
children[0]:children:_ref6$code;_ref6$code=_ref6.astGenerator;var rest=(0,_objectWithoutProperties2.default)(_ref6,"language children style customStyle codeTagProps useInlineStyles showLineNumbers startingLineNumber lineNumberContainerStyle lineNumberStyle wrapLines lineProps renderer PreTag CodeTag code astGenerator".split(" "));_ref6$code=_ref6$code||defaultAstGenerator;_ref6=showLineNumbers?_react.default.createElement(LineNumbers,{containerStyle:lineNumberContainerStyle,codeStyle:_ref6$customStyle.style||
{},numberStyle:lineNumberStyle,startingLineNumber:startingLineNumber,codeString:children}):null;showLineNumbers=_ref6$style.hljs||_ref6$style['pre[class*\x3d"language-"]']||{backgroundColor:"#fff"};customStyle=_ref6$useInlineStyles?Object.assign({},rest,{style:Object.assign({},showLineNumbers,customStyle)}):Object.assign({},rest,{className:"hljs"});if(!_ref6$code)return _react.default.createElement(_ref6$PreTag,customStyle,_ref6,_react.default.createElement(_ref6$CodeTag,_ref6$customStyle,children));
_ref6$showLineNumbers=_ref6$lineProps&&void 0===_ref6$showLineNumbers?!0:_ref6$showLineNumbers;_ref6$lineProps=_ref6$lineProps||defaultRenderer;showLineNumbers=[{type:"text",value:children}];startingLineNumber=_ref6$code;if(startingLineNumber.getLanguage){var codeTree=language&&startingLineNumber.getLanguage(language);codeTree="text"===language?{value:showLineNumbers,language:"text"}:codeTree?startingLineNumber.highlight(language,children):startingLineNumber.highlightAuto(children)}else try{codeTree=
language&&"text"!==language?{value:startingLineNumber.highlight(children,language)}:{value:showLineNumbers}}catch(e){codeTree={value:showLineNumbers}}null===codeTree.language&&(codeTree.value=showLineNumbers);language=_ref6$showLineNumbers?wrapLinesInSpan(codeTree,lineProps):codeTree.value;return _react.default.createElement(_ref6$PreTag,customStyle,_ref6,_react.default.createElement(_ref6$CodeTag,_ref6$customStyle,_ref6$lineProps({rows:language,stylesheet:_ref6$style,useInlineStyles:_ref6$useInlineStyles})))}};
var _objectWithoutProperties2=global(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),_react=global(require("module$node_modules$react$index")),_createElement=global(require("module$node_modules$react_syntax_highlighter$dist$cjs$create_element")),newLineRegex=/\n/g}
//# sourceMappingURL=module$node_modules$react_syntax_highlighter$dist$cjs$highlight.js.map
