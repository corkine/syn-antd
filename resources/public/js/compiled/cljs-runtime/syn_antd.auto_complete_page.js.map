{"version":3,"sources":["syn_antd/auto_complete_page.cljs"],"mappings":";;;;;;;AAQA,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA,AAAA,AAAAD,AACGE;AADH,AAEgB,AAAAF,AAACG;;;AAEjB,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA,AACGC,AAEA,AACCJ;;AAEJ,AAAA,AAAMQ;AAAN,AAAA,AAAA,AAAA,AAAA,AAAAH,AACGJ,AACa,AAAAQ,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;AAFjB,AAAA,AAAAJ;AAAA,AAGgB,AAAAK,AAAA,AAAA,AAAA,AAAAL;AAAA,AAAA,AAAAK,AAAAA,AAACC,AAAAA,AAAAA;AAHjB,AAAA,AAAAL;AAAA,AAIgB,AAAA,AAAAA,AAACL;;;AAEjB,AAAA,AAAMW;AAAN,AAAA,AAAA,AAAA,AACGT,AAEA,AACCI;;AAEJ,AAAA,AAAMQ;AAAN,AAAA,AAAA,AAAA,AAAA,AAAAX,AACGJ,AACa,AAAAgB,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACP,AAAAA,AAAAA;AAFjB,AAAA,AAAAI;AAAA,AAGgB,AAAAI,AAAA,AAAA,AAAA,AAAAJ;AAAA,AAAA,AAAAI,AAAAA,AAACN,AAAAA,AAAAA;AAHjB,AAAA,AAAAG;AAAA,AAIgB,AAAA,AAAAA,AAACb;;;AAEjB,AAAA,AAAMiB;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACGf,AAEA,AAGGgB;AANN,AAQkB,AAAAC,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;AARnB,AAAA,AAAA,AAAA,AAAA,AAUMF;AAVN,AAWkB,AAAAG,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACD,AAAAA,AAAAA;AAXnB,AAAA,AAaKN;;AAIL,AAAA,AAAMQ;AAAN,AACE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAIeC,AAKCvB,AACAU,AACAM;;AAInB,AAAAQ,AAAA;AAAAC,AAA2B;AAAKE,AAAGC;AAAR,AAAW,AAAA,AAAUD;;;AAAhD,AAAA,AAAAH,AAAAC,AAAAD,AAAAC,AAACC,AAAAA,AAAAA;AACD,AAAAG,AAAA;AAAAC,AAA2B;AAAKH,AAAGC;AAAR,AAAW,AAAA,AAAUD;;;AAAhD,AAAA,AAAAE,AAAAC,AAAAD,AAAAC,AAACJ,AAAAA,AAAAA;AAED,AAAA,AAACK,AAEC,AAAKJ,AAAGC;AAAR,AACE,AAAA,AAAA,AAAA,AAAA,AAACI,AAAML;;AAGX,AAAA,AAACI,AAEC,AAAAE,AAAKN;AAAL,AAAA,AAAAO,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASN;AAAT,AAAAO,AAAAD,AAAA,AAAA,AAAWE;AAAX,AAAAD,AAAAD,AAAA,AAAA,AAAaG;AAAb,AACE,AAACC,AAAMX,AAAGS,AAAEC","names":["p1__26332#","syn-antd.auto-complete-page/basic-auto-complete-element","syn-antd.auto-complete/auto-complete","cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic","syn-antd.auto-complete-page/basic-auto-complete","syn-antd.dev/demo-element","cljs.core/deref","p1__26334#","p1__26335#","syn-antd.auto-complete-page/controlled-rf-auto-complete-element","G__26336","re-frame.core/subscribe","G__26337","re-frame.core/dispatch-sync","syn-antd.auto-complete-page/controlled-rf-auto-complete","p1__26340#","p1__26341#","syn-antd.auto-complete-page/controlled-rf-auto-complete2-element","G__26342","G__26343","syn-antd.auto-complete-page/controlled-rf-auto-complete2","syn-antd.button/button","G__26346","re-frame.core/dispatch","G__26347","syn-antd.auto-complete-page/test-auto-complete-page","syn-antd.dev/demo-page","syn-antd.alert/alert","G__26348","G__26349","re-frame.core/reg-sub","db","_","G__26350","G__26351","re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","p__26352","vec__26353","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","k","v","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"],"sourcesContent":["(ns syn-antd.auto-complete-page\n  (:require [syn-antd.alert :as alert]\n            [syn-antd.button :as button]\n            [syn-antd.auto-complete :as auto-complete]\n            [syn-antd.dev :as dev]\n            [re-frame.core :as re-frame])\n  (:require-macros [syn-antd.util :refer [source]]))\n\n(defn basic-auto-complete-element []\n  [auto-complete/auto-complete\n   {:on-search #(prn %)}])\n\n(defn basic-auto-complete []\n  [dev/demo-element\n   \"Uncontrolled auto-complete\"\n   (source basic-auto-complete-element)\n   [basic-auto-complete-element]])\n\n(defn controlled-rf-auto-complete-element []\n  [auto-complete/auto-complete\n   {:value     @(re-frame/subscribe [::input1])\n    :on-change #(re-frame/dispatch-sync [::set-value ::input1 %])\n    :on-search #(prn \"Search\" %)}])\n\n(defn controlled-rf-auto-complete []\n  [dev/demo-element\n   \"Controlled auto-complete\"\n   (source controlled-rf-auto-complete-element)\n   [controlled-rf-auto-complete-element]])\n\n(defn controlled-rf-auto-complete2-element []\n  [auto-complete/auto-complete\n   {:value     @(re-frame/subscribe [::input2])\n    :on-change #(re-frame/dispatch-sync [::set-value ::input2 %])\n    :on-search #(prn \"Search\" %)}])\n\n(defn controlled-rf-auto-complete2 []\n  [dev/demo-element\n   \"Controlled auto-complete with default values\"\n   (source controlled-rf-auto-complete2-element)\n   [:<>\n    [:div\n     [button/button\n      {:type     \"primary\"\n       :on-click #(re-frame/dispatch [::set-value ::input2 \"Test\"])}\n      \"Set to 'Test'\"]\n     [button/button\n      {:on-click #(re-frame/dispatch [::set-value ::input2 nil])}\n      \"Set to nil\"]]\n    [controlled-rf-auto-complete2-element]]])\n\n\n;; PAGE\n(defn test-auto-complete-page []\n  (dev/demo-page\n    {:title      \"syn-antd.auto-complete\"\n     :link       \"https://ant.design/components/auto-complete/\"\n     :link-title \"antd Documentation - AutoComplete\"\n     :alerts     [alert/alert\n                  {:type        \"info\"\n                   :message     \"Note for re-frame use\"\n                   :description \"Very fast typing, or slow rendering, can cause cursor jumping when managing input field state via re-frame. To avoid this, you have to synchronously trigger re-frame events, i.e. re-frame/dispatch-sync instead of re-frame/dispatch. See code below for examples\"}]\n     :elements   [:<>\n                  [basic-auto-complete]\n                  [controlled-rf-auto-complete]\n                  [controlled-rf-auto-complete2]]}))\n\n\n;; RE FRAME STUFFS\n(re-frame/reg-sub ::input1 (fn [db _] (::input1 db)))\n(re-frame/reg-sub ::input2 (fn [db _] (::input2 db)))\n\n(re-frame/reg-event-db\n  ::init\n  (fn [db _]\n    (assoc db ::input1 \"\"\n              ::input2 \"Test\")))\n\n(re-frame/reg-event-db\n  ::set-value\n  (fn [db [_ k v]]\n    (assoc db k v)))"]}