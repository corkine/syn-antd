{
"version":3,
"file":"goog.net.xpc.iframerelaytransport.js",
"lineCount":196,
"mappings":"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",
"sources":["goog/net/xpc/iframerelaytransport.js"],
"sourcesContent":["// Copyright 2007 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Contains the iframe relay tranport.\n */\n\n\ngoog.provide('goog.net.xpc.IframeRelayTransport');\n\ngoog.require('goog.dom');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.safe');\ngoog.require('goog.events');\ngoog.require('goog.html.SafeHtml');\ngoog.require('goog.log');\ngoog.require('goog.log.Level');\ngoog.require('goog.net.xpc');\ngoog.require('goog.net.xpc.CfgFields');\ngoog.require('goog.net.xpc.Transport');\ngoog.require('goog.net.xpc.TransportTypes');\ngoog.require('goog.string');\ngoog.require('goog.string.Const');\ngoog.require('goog.userAgent');\n\n\n\n/**\n * Iframe relay transport. Creates hidden iframes containing a document\n * from the peer's origin. Data is transferred in the fragment identifier.\n * Therefore the document loaded in the iframes can be served from the\n * browser's cache.\n *\n * @param {goog.net.xpc.CrossPageChannel} channel The channel this\n *     transport belongs to.\n * @param {goog.dom.DomHelper=} opt_domHelper The dom helper to use for finding\n *     the correct window.\n * @constructor\n * @extends {goog.net.xpc.Transport}\n * @final\n */\ngoog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {\n  goog.net.xpc.IframeRelayTransport.base(this, 'constructor', opt_domHelper);\n\n  /**\n   * The channel this transport belongs to.\n   * @type {goog.net.xpc.CrossPageChannel}\n   * @private\n   */\n  this.channel_ = channel;\n\n  /**\n   * The URI used to relay data to the peer.\n   * @type {string}\n   * @private\n   */\n  this.peerRelayUri_ =\n      this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_RELAY_URI];\n\n  /**\n   * The id of the iframe the peer page lives in.\n   * @type {string}\n   * @private\n   */\n  this.peerIframeId_ =\n      this.channel_.getConfig()[goog.net.xpc.CfgFields.IFRAME_ID];\n\n  if (goog.userAgent.WEBKIT) {\n    goog.net.xpc.IframeRelayTransport.startCleanupTimer_();\n  }\n};\ngoog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);\n\n\nif (goog.userAgent.WEBKIT) {\n  /**\n   * Array to keep references to the relay-iframes. Used only if\n   * there is no way to detect when the iframes are loaded. In that\n   * case the relay-iframes are removed after a timeout.\n   * @type {Array<Object>}\n   * @private\n   */\n  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];\n\n\n  /**\n   * Interval at which iframes are destroyed.\n   * @type {number}\n   * @private\n   */\n  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1000;\n\n\n  /**\n   * Time after which a relay-iframe is destroyed.\n   * @type {number}\n   * @private\n   */\n  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3000;\n\n\n  /**\n   * The cleanup timer id.\n   * @type {number}\n   * @private\n   */\n  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;\n\n\n  /**\n   * Starts the cleanup timer.\n   * @private\n   */\n  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {\n    if (!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {\n      goog.net.xpc.IframeRelayTransport.cleanupTimer_ =\n          window.setTimeout(function() {\n            goog.net.xpc.IframeRelayTransport.cleanup_();\n          }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);\n    }\n  };\n\n\n  /**\n   * Remove all relay-iframes which are older than the maximal age.\n   * @param {number=} opt_maxAge The maximal age in milliseconds.\n   * @private\n   */\n  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {\n    var now = goog.now();\n    var maxAge =\n        opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;\n\n    while (goog.net.xpc.IframeRelayTransport.iframeRefs_.length &&\n           now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >=\n               maxAge) {\n      var ifr =\n          goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;\n      goog.dom.removeNode(ifr);\n      goog.log.log(\n          goog.net.xpc.logger, goog.log.Level.FINEST, 'iframe removed');\n    }\n\n    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(\n        goog.net.xpc.IframeRelayTransport.cleanupCb_,\n        goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);\n  };\n\n\n  /**\n   * Function which wraps cleanup_().\n   * @private\n   */\n  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {\n    goog.net.xpc.IframeRelayTransport.cleanup_();\n  };\n}\n\n\n/**\n * Maximum sendable size of a payload via a single iframe in IE.\n * @type {number}\n * @private\n */\ngoog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;\n\n\n/**\n * @typedef {{fragments: !Array<string>, received: number, expected: number}}\n */\ngoog.net.xpc.IframeRelayTransport.FragmentInfo;\n\n\n/**\n * Used to track incoming payload fragments. The implementation can process\n * incoming fragments from several channels at a time, even if data is\n * out-of-order or interleaved.\n *\n * @type {!Object<string, !goog.net.xpc.IframeRelayTransport.FragmentInfo>}\n * @private\n */\ngoog.net.xpc.IframeRelayTransport.fragmentMap_ = {};\n\n\n/**\n * The transport type.\n * @type {number}\n * @override\n */\ngoog.net.xpc.IframeRelayTransport.prototype.transportType =\n    goog.net.xpc.TransportTypes.IFRAME_RELAY;\n\n\n/**\n * Connects this transport.\n * @override\n */\ngoog.net.xpc.IframeRelayTransport.prototype.connect = function() {\n  if (!this.getWindow()['xpcRelay']) {\n    this.getWindow()['xpcRelay'] =\n        goog.net.xpc.IframeRelayTransport.receiveMessage_;\n  }\n\n  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);\n};\n\n\n/**\n * Processes an incoming message.\n *\n * @param {string} channelName The name of the channel.\n * @param {string} frame The raw frame content.\n * @private\n */\ngoog.net.xpc.IframeRelayTransport.receiveMessage_ = function(\n    channelName, frame) {\n  var pos = frame.indexOf(':');\n  var header = frame.substr(0, pos);\n  var payload = frame.substr(pos + 1);\n\n  if (!goog.userAgent.IE || (pos = header.indexOf('|')) == -1) {\n    // First, the easy case.\n    var service = header;\n  } else {\n    // There was a fragment id in the header, so this is a message\n    // fragment, not a whole message.\n    var service = header.substr(0, pos);\n    var fragmentIdStr = header.substr(pos + 1);\n\n    // Separate the message id string and the fragment number. Note that\n    // there may be a single leading + in the argument to parseInt, but\n    // this is harmless.\n    pos = fragmentIdStr.indexOf('+');\n    var messageIdStr = fragmentIdStr.substr(0, pos);\n    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);\n    var fragmentInfo =\n        goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];\n    if (!fragmentInfo) {\n      fragmentInfo =\n          goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] =\n              {fragments: [], received: 0, expected: 0};\n    }\n\n    if (goog.string.contains(fragmentIdStr, '++')) {\n      fragmentInfo.expected = fragmentNum + 1;\n    }\n    fragmentInfo.fragments[fragmentNum] = payload;\n    fragmentInfo.received++;\n\n    if (fragmentInfo.received != fragmentInfo.expected) {\n      return;\n    }\n\n    // We've received all outstanding fragments; combine what we've received\n    // into payload and fall out to the call to xpcDeliver.\n    payload = fragmentInfo.fragments.join('');\n    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];\n  }\n\n  goog.net.xpc.channels[channelName].xpcDeliver(\n      service, decodeURIComponent(payload));\n};\n\n\n/**\n * Handles transport service messages (internal signalling).\n * @param {string} payload The message content.\n * @override\n */\ngoog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(\n    payload) {\n  if (payload == goog.net.xpc.SETUP) {\n    // TODO(user) Safari swallows the SETUP_ACK from the iframe to the\n    // container after hitting reload.\n    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);\n    this.channel_.notifyConnected();\n  } else if (payload == goog.net.xpc.SETUP_ACK_) {\n    this.channel_.notifyConnected();\n  }\n};\n\n\n/**\n * Sends a message.\n *\n * @param {string} service Name of service this the message has to be delivered.\n * @param {string} payload The message content.\n * @override\n */\ngoog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {\n  // If we're on IE and the post-encoding payload is large, split it\n  // into multiple payloads and send each one separately. Otherwise,\n  // just send the whole thing.\n  var encodedPayload = encodeURIComponent(payload);\n  var encodedLen = encodedPayload.length;\n  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;\n\n  if (goog.userAgent.IE && encodedLen > maxSize) {\n    // A probabilistically-unique string used to link together all fragments\n    // in this message.\n    var messageIdStr = goog.string.getRandomString();\n\n    for (var startIndex = 0, fragmentNum = 0; startIndex < encodedLen;\n         fragmentNum++) {\n      var payloadFragment = encodedPayload.substr(startIndex, maxSize);\n      startIndex += maxSize;\n      var fragmentIdStr =\n          messageIdStr + (startIndex >= encodedLen ? '++' : '+') + fragmentNum;\n      this.send_(service, payloadFragment, fragmentIdStr);\n    }\n  } else {\n    this.send_(service, encodedPayload);\n  }\n};\n\n\n/**\n * Sends an encoded message or message fragment.\n * @param {string} service Name of service this the message has to be delivered.\n * @param {string} encodedPayload The message content, URI encoded.\n * @param {string=} opt_fragmentIdStr If sending a fragment, a string that\n *     identifies the fragment.\n * @private\n */\ngoog.net.xpc.IframeRelayTransport.prototype.send_ = function(\n    service, encodedPayload, opt_fragmentIdStr) {\n  // IE requires that we create the onload attribute inline, otherwise the\n  // handler is not triggered\n  if (goog.userAgent.IE) {\n    var div =\n        this.getWindow().document.createElement(String(goog.dom.TagName.DIV));\n    // TODO(mlourenco): It might be possible to set the sandbox attribute\n    // to restrict the privileges of the created iframe.\n    goog.dom.safe.setInnerHtml(\n        div, goog.html.SafeHtml.createIframe(null, null, {\n          'onload': goog.string.Const.from('this.xpcOnload()'),\n          'sandbox': null\n        }));\n    var ifr = div.childNodes[0];\n    div = null;\n    ifr['xpcOnload'] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_;\n  } else {\n    var ifr = this.getWindow().document.createElement(\n        String(goog.dom.TagName.IFRAME));\n\n    if (goog.userAgent.WEBKIT) {\n      // safari doesn't fire load-events on iframes.\n      // keep a reference and remove after a timeout.\n      goog.net.xpc.IframeRelayTransport.iframeRefs_.push(\n          {timestamp: goog.now(), iframeElement: ifr});\n    } else {\n      goog.events.listen(\n          ifr, 'load', goog.net.xpc.IframeRelayTransport.iframeLoadHandler_);\n    }\n  }\n\n  var style = ifr.style;\n  style.visibility = 'hidden';\n  style.width = ifr.style.height = '0px';\n  style.position = 'absolute';\n\n  var url = this.peerRelayUri_;\n  url += '#' + this.channel_.name;\n  if (this.peerIframeId_) {\n    url += ',' + this.peerIframeId_;\n  }\n  url += '|' + service;\n  if (opt_fragmentIdStr) {\n    url += '|' + opt_fragmentIdStr;\n  }\n  url += ':' + encodedPayload;\n\n  ifr.src = url;\n\n  this.getWindow().document.body.appendChild(ifr);\n\n  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, 'msg sent: ' + url);\n};\n\n\n/**\n * The iframe load handler. Gets called as method on the iframe element.\n * @private\n * @this {Element}\n */\ngoog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {\n  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, 'iframe-load');\n  goog.dom.removeNode(this);\n  this.xpcOnload = null;\n};\n\n\n/** @override */\ngoog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {\n  goog.net.xpc.IframeRelayTransport.base(this, 'disposeInternal');\n  if (goog.userAgent.WEBKIT) {\n    goog.net.xpc.IframeRelayTransport.cleanup_(0);\n  }\n};\n"],
"names":["goog","provide","require","net","xpc","IframeRelayTransport","goog.net.xpc.IframeRelayTransport","channel","opt_domHelper","base","channel_","peerRelayUri_","getConfig","CfgFields","PEER_RELAY_URI","peerIframeId_","IFRAME_ID","userAgent","WEBKIT","startCleanupTimer_","inherits","Transport","iframeRefs_","CLEANUP_INTERVAL_","IFRAME_MAX_AGE_","cleanupTimer_","goog.net.xpc.IframeRelayTransport.startCleanupTimer_","window","setTimeout","cleanup_","goog.net.xpc.IframeRelayTransport.cleanup_","opt_maxAge","now","maxAge","length","timestamp","ifr","shift","iframeElement","dom","removeNode","log","logger","Level","FINEST","cleanupCb_","goog.net.xpc.IframeRelayTransport.cleanupCb_","IE_PAYLOAD_MAX_SIZE_","FragmentInfo","fragmentMap_","prototype","transportType","TransportTypes","IFRAME_RELAY","connect","goog.net.xpc.IframeRelayTransport.prototype.connect","getWindow","receiveMessage_","send","TRANSPORT_SERVICE_","SETUP","goog.net.xpc.IframeRelayTransport.receiveMessage_","channelName","frame","pos","indexOf","header","substr","payload","IE","service","fragmentIdStr","messageIdStr","fragmentNum","parseInt","fragmentInfo","fragments","received","expected","string","contains","join","channels","xpcDeliver","decodeURIComponent","transportServiceHandler","goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler","SETUP_ACK_","notifyConnected","goog.net.xpc.IframeRelayTransport.prototype.send","encodedPayload","encodeURIComponent","encodedLen","maxSize","getRandomString","startIndex","payloadFragment","send_","goog.net.xpc.IframeRelayTransport.prototype.send_","opt_fragmentIdStr","div","document","createElement","String","TagName","DIV","safe","setInnerHtml","html","SafeHtml","createIframe","Const","from","childNodes","iframeLoadHandler_","IFRAME","push","events","listen","style","visibility","width","height","position","url","name","src","body","appendChild","goog.net.xpc.IframeRelayTransport.iframeLoadHandler_","xpcOnload","disposeInternal","goog.net.xpc.IframeRelayTransport.prototype.disposeInternal"]
}
