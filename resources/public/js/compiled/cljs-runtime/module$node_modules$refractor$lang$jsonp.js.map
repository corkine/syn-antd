{
"version":3,
"file":"module$node_modules$refractor$lang$jsonp.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,yCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM1HC,QAASA,MAAK,CAACC,KAAD,CAAQ,CACpBA,KAAAC,SAAA,CAAeC,aAAf,CACAF,MAAAG,UAAAJ,MAAA,CAAwBC,KAAAG,UAAAC,OAAA,CAAuB,MAAvB,CAA+B,CACrDC,YAAa,cADwC,CAA/B,CAGxBL,MAAAG,UAAAG,aAAA,CAA6B,OAA7B,CAAsC,aAAtC,CAAqD,CACnDC,SAAU,iDADyC,CAArD,CALoB,CAJtB,IAAIL,cAAgBP,OAAA,CAAQ,yCAAR,CACpBC,OAAAC,QAAA,CAAiBE,KACjBA,MAAAS,YAAA,CAAoB,OACpBT,MAAAU,QAAA,CAAgB,EAL0G;",
"sources":["node_modules/refractor/lang/jsonp.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$jsonp\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\nvar refractorJson = require('./json.js')\nmodule.exports = jsonp\njsonp.displayName = 'jsonp'\njsonp.aliases = []\nfunction jsonp(Prism) {\n  Prism.register(refractorJson)\n  Prism.languages.jsonp = Prism.languages.extend('json', {\n    punctuation: /[{}[\\]();,.]/\n  })\n  Prism.languages.insertBefore('jsonp', 'punctuation', {\n    function: /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/\n  })\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","jsonp","Prism","register","refractorJson","languages","extend","punctuation","insertBefore","function","displayName","aliases"]
}
