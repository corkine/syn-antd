{
"version":3,
"file":"module$node_modules$hast_util_parse_selector$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGpIF,MAAAC,QAAA,CAMAE,QAAc,CAACC,QAAD,CAAWC,cAAX,CAA2B,CACnCC,QAAAA,CAAQF,QAARE,EAAoB,EACpBC,eAAAA,CAAOF,cAAPE,EAAyB,KAU7B,KATA,IAAIC,MAAQ,EAAZ,CACIC,MAAS,EADb,CAEIC,OAASJ,QAAAI,OAFb,CAGIC,SAHJ,CAIIC,IAJJ,CAKIC,IALJ,CAMIC,QAGJ,CAAO,EAAEL,KAAT,EAAkBC,MAAlB,CAAA,CAGE,GAFAG,IAEI,CAFGP,QAAAS,WAAA,CAAiBN,KAAjB,CAEH,CAAA,CAACI,IAAD,EAASA,IAAT,GAAkBG,GAAlB,EAAyBH,IAAzB,GAAkCI,UAAtC,CAAkD,CAGhD,GAFAH,QAEA,CAFWR,QAAAY,MAAA,CAAYC,QAAZ,CAAuBV,KAAvB,CAEX,CACMG,IAAJ,GAAaI,GAAb,CAEML,SAAJ,CACEA,SAAAS,KAAA,CAAeN,QAAf,CADF,EAGEH,SACA;AADY,CAACG,QAAD,CACZ,CAAAN,KAAAG,UAAA,CAAkBA,SAJpB,CAFF,CAQWC,IAAJ,GAAaK,UAAb,CACLT,KAAAa,GADK,CACMP,QADN,CAGLP,cAHK,CAGEO,QAIXK,SAAA,CAAYV,KAAZ,CAAoB,CACpBG,KAAA,CAAOC,IApByC,CAwBpD,MAAO,CACLD,KAAM,SADD,CAELU,QAASf,cAFJ,CAGLgB,WAAYf,KAHP,CAILgB,SAAU,EAJL,CAvCgC,CAJzC,KAAIP,WAAa,EAAjB,CACID,IAAM,EAN0H;",
"sources":["node_modules/hast-util-parse-selector/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$hast_util_parse_selector$index\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = parse\n\nvar numberSign = 35 //  '#'\nvar dot = 46 //  '.'\n\n// Create a hast element from a simple CSS selector.\nfunction parse(selector, defaultTagName) {\n  var value = selector || ''\n  var name = defaultTagName || 'div'\n  var props = {}\n  var index = -1\n  var length = value.length\n  var className\n  var type\n  var code\n  var subvalue\n  var lastIndex\n\n  while (++index <= length) {\n    code = value.charCodeAt(index)\n\n    if (!code || code === dot || code === numberSign) {\n      subvalue = value.slice(lastIndex, index)\n\n      if (subvalue) {\n        if (type === dot) {\n          // eslint-disable-next-line max-depth\n          if (className) {\n            className.push(subvalue)\n          } else {\n            className = [subvalue]\n            props.className = className\n          }\n        } else if (type === numberSign) {\n          props.id = subvalue\n        } else {\n          name = subvalue\n        }\n      }\n\n      lastIndex = index + 1\n      type = code\n    }\n  }\n\n  return {\n    type: 'element',\n    tagName: name,\n    properties: props,\n    children: []\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","parse","selector","defaultTagName","value","name","props","index","length","className","type","code","subvalue","charCodeAt","dot","numberSign","slice","lastIndex","push","id","tagName","properties","children"]
}
