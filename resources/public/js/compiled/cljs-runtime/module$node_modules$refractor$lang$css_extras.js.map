{
"version":3,
"file":"module$node_modules$refractor$lang$css_extras.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,8CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM/HC,QAASA,UAAS,CAACC,KAAD,CAAQ,CACxBA,KAAAC,UAAAC,IAAAC,SAAA,CAA+B,CAC7BC,QAASJ,KAAAC,UAAAC,IAAAC,SADoB,CAE7BE,OAAQ,CACN,iBAAkB,8DADZ,CAEN,eAAgB,SAFV,CAGNC,MAAO,YAHD,CAINC,GAAI,WAJE,CAKNC,UAAW,CACTJ,QAAS,iEADA,CAETK,OAAQ,CAAA,CAFC,CAGTJ,OAAQ,CACNK,YAAa,SADP,CAEN,mBAAoB,CAClBN,QAAS,YADS;AAElBO,WAAY,CAAA,CAFM,CAGlBC,MAAO,SAHW,CAFd,CAONC,UAAW,CACTT,QAAS,iCADA,CAETO,WAAY,CAAA,CAFH,CAGTN,OAAQ,CACNK,YAAa,KADP,CAHC,CAPL,CAcNF,UAAW,CACTJ,QAAS,yBADA,CAETO,WAAY,CAAA,CAFH,CAdL,CAkBNG,MAAO,CACL,+CADK,CAEL,CACEV,QAAS,iCADX,CAEEO,WAAY,CAAA,CAFd,CAFK,CAlBD,CAyBNI,SAAU,WAzBJ,CAHC,CALL,CAoCN,OAAQ,CACN,CACEX,QAAS,iDADX,CAEEO,WAAY,CAAA,CAFd,CAGEN,OAAQ,CACNW,OAAQ,QADF,CAEND,SAAU,MAFJ,CAHV,CADM,CASN,CACEX,QAAS,+BADX,CAEEO,WAAY,CAAA,CAFd,CATM,CApCF;AAkDND,YAAa,MAlDP,CAFqB,CAuD/BV,MAAAC,UAAAgB,aAAA,CAA6B,KAA7B,CAAoC,UAApC,CAAgD,CAC9CC,SAAU,CACRd,QAAS,6DADD,CAERO,WAAY,CAAA,CAFJ,CADoC,CAAhD,CAMAX,MAAAC,UAAAgB,aAAA,CAA6B,KAA7B,CAAoC,UAApC,CAAgD,CAC9CF,SAAU,CACRX,QAAS,oBADD,CAERO,WAAY,CAAA,CAFJ,CADoC,CAK9CQ,QAAS,gBALqC,CAM9CC,OAAQ,iBANsC,CAO9CC,KAAM,CACJjB,QAAS,kBADL,CAEJO,WAAY,CAAA,CAFR,CAPwC,CAW9CK,OAAQ,UAXsC,CAAhD,CA9DwB,CAH1BpB,MAAAC,QAAA,CAAiBE,SACjBA,UAAAuB,YAAA,CAAwB,WACxBvB,UAAAwB,QAAA,CAAoB,EAL2G;",
"sources":["node_modules/refractor/lang/css-extras.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$css_extras\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = cssExtras\ncssExtras.displayName = 'cssExtras'\ncssExtras.aliases = []\nfunction cssExtras(Prism) {\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector,\n    inside: {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      class: /\\.[-:.\\w]+/,\n      id: /#[-:.\\w]+/,\n      attribute: {\n        pattern: /\\[(?:[^[\\]\"']|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1)*\\]/,\n        greedy: true,\n        inside: {\n          punctuation: /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          namespace: {\n            pattern: /^(\\s*)[-*\\w\\xA0-\\uFFFF]*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\|$/\n            }\n          },\n          attribute: {\n            pattern: /^(\\s*)[-\\w\\xA0-\\uFFFF]+/,\n            lookbehind: true\n          },\n          value: [\n            /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            {\n              pattern: /(=\\s*)[-\\w\\xA0-\\uFFFF]+(?=\\s*$)/,\n              lookbehind: true\n            }\n          ],\n          operator: /[|~*^$]?=/\n        }\n      },\n      'n-th': [\n        {\n          pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n          lookbehind: true,\n          inside: {\n            number: /[\\dn]+/,\n            operator: /[+-]/\n          }\n        },\n        {\n          pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n          lookbehind: true\n        }\n      ],\n      punctuation: /[()]/\n    }\n  }\n  Prism.languages.insertBefore('css', 'property', {\n    variable: {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*/i,\n      lookbehind: true\n    }\n  })\n  Prism.languages.insertBefore('css', 'function', {\n    operator: {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    hexcode: /#[\\da-f]{3,8}/i,\n    entity: /\\\\[\\da-f]{1,8}/i,\n    unit: {\n      pattern: /(\\d)(?:%|[a-z]+)/,\n      lookbehind: true\n    },\n    number: /-?[\\d.]+/\n  })\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","cssExtras","Prism","languages","css","selector","pattern","inside","class","id","attribute","greedy","punctuation","lookbehind","alias","namespace","value","operator","number","insertBefore","variable","hexcode","entity","unit","displayName","aliases"]
}
