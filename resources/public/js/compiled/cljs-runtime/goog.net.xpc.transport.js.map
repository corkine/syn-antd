{
"version":3,
"file":"goog.net.xpc.transport.js",
"lineCount":44,
"mappings":"AAoBAA,IAAAC,QAAA,CAAa,wBAAb,CAAA;AAEAD,IAAAE,QAAA,CAAa,iBAAb,CAAA;AACAF,IAAAE,QAAA,CAAa,UAAb,CAAA;AACAF,IAAAE,QAAA,CAAa,6BAAb,CAAA;AAWA;;;;;AAAAF,IAAAG,IAAAC,IAAAC,UAAA,GAAyBC,QAAQ,CAACC,aAAD,CAAgB;AAC/CP,MAAAQ,WAAAC,KAAA,CAAqB,IAArB,CAAA;AAOA,6CAAA,IAAAC,WAAA,GAAkBH,aAAlB,IAAmCP,IAAAW,IAAAC,aAAA,EAAnC;AAR+C,CAAjD;AAUAZ,IAAAa,SAAA,CAAcb,IAAAG,IAAAC,IAAAC,UAAd,EAAsCL,IAAAQ,WAAtC,CAAA;AAQA,iCAAAR,IAAAG,IAAAC,IAAAC,UAAAS,UAAAC,cAAA,GAAiD,CAAjD;AAMA;;;AAAAf,IAAAG,IAAAC,IAAAC,UAAAS,UAAAE,QAAA,GAA2CC,QAAQ,EAAG;AACpD,SAAO,IAAAF,cAAP;AADoD,CAAtD;AASA;;;AAAAf,IAAAG,IAAAC,IAAAC,UAAAS,UAAAI,UAAA,GAA6CC,QAAQ,EAAG;AACtD,SAAO,IAAAT,WAAAQ,UAAA,EAAP;AADsD,CAAxD;AASA;;;AAAAlB,IAAAG,IAAAC,IAAAC,UAAAS,UAAAM,QAAA,GAA2CC,QAAQ,EAAG;AACpD,SAAOrB,IAAAG,IAAAC,IAAAkB,eAAA,CAA4BC,MAAA,CAAO,IAAAR,cAAP,CAA5B,CAAP,IAAkE,EAAlE;AADoD,CAAtD;AASA;;;AAAAf,IAAAG,IAAAC,IAAAC,UAAAS,UAAAU,wBAAA,GAA2DxB,IAAAyB,eAA3D;AASAzB,IAAAG,IAAAC,IAAAC,UAAAS,UAAAY,QAAA,GAA2C1B,IAAAyB,eAA3C;AASA;;;;AAAAzB,IAAAG,IAAAC,IAAAC,UAAAS,UAAAa,KAAA,GAAwC3B,IAAAyB,eAAxC;;",
"sources":["goog/net/xpc/transport.js"],
"sourcesContent":["// Copyright 2007 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Contains the base class for transports.\n *\n */\n\n\ngoog.provide('goog.net.xpc.Transport');\n\ngoog.require('goog.Disposable');\ngoog.require('goog.dom');\ngoog.require('goog.net.xpc.TransportNames');\n\n\n\n/**\n * The base class for transports.\n * @param {goog.dom.DomHelper=} opt_domHelper The dom helper to use for\n *     finding the window objects.\n * @constructor\n * @extends {goog.Disposable};\n */\ngoog.net.xpc.Transport = function(opt_domHelper) {\n  goog.Disposable.call(this);\n\n  /**\n   * The dom helper to use for finding the window objects to reference.\n   * @type {goog.dom.DomHelper}\n   * @private\n   */\n  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();\n};\ngoog.inherits(goog.net.xpc.Transport, goog.Disposable);\n\n\n/**\n * The transport type.\n * @type {number}\n * @protected\n */\ngoog.net.xpc.Transport.prototype.transportType = 0;\n\n\n/**\n * @return {number} The transport type identifier.\n */\ngoog.net.xpc.Transport.prototype.getType = function() {\n  return this.transportType;\n};\n\n\n/**\n * Returns the window associated with this transport instance.\n * @return {!Window} The window to use.\n */\ngoog.net.xpc.Transport.prototype.getWindow = function() {\n  return this.domHelper_.getWindow();\n};\n\n\n/**\n * Return the transport name.\n * @return {string} the transport name.\n */\ngoog.net.xpc.Transport.prototype.getName = function() {\n  return goog.net.xpc.TransportNames[String(this.transportType)] || '';\n};\n\n\n/**\n * Handles transport service messages (internal signalling).\n * @param {string} payload The message content.\n */\ngoog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;\n\n\n/**\n * Connects this transport.\n * The transport implementation is expected to call\n * CrossPageChannel.prototype.notifyConnected when the channel is ready\n * to be used.\n */\ngoog.net.xpc.Transport.prototype.connect = goog.abstractMethod;\n\n\n/**\n * Sends a message.\n * @param {string} service The name off the service the message is to be\n * delivered to.\n * @param {string} payload The message content.\n */\ngoog.net.xpc.Transport.prototype.send = goog.abstractMethod;\n"],
"names":["goog","provide","require","net","xpc","Transport","goog.net.xpc.Transport","opt_domHelper","Disposable","call","domHelper_","dom","getDomHelper","inherits","prototype","transportType","getType","goog.net.xpc.Transport.prototype.getType","getWindow","goog.net.xpc.Transport.prototype.getWindow","getName","goog.net.xpc.Transport.prototype.getName","TransportNames","String","transportServiceHandler","abstractMethod","connect","send"]
}
