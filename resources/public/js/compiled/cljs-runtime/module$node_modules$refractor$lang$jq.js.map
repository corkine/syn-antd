{
"version":3,
"file":"module$node_modules$refractor$lang$jq.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,sCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMvHC,QAASA,GAAE,CAACC,KAAD,CAAQ,CAEf,IAAIC,cAAgB,6BAAAC,OAApB,CACIC,OAASC,MAAA,CACX,iCAAAF,OAAAG,QAAA,CAAiD,KAAjD,CAAwDJ,aAAxD,CADW,CAGTK,cAAAA,CAAsB,CACxBL,cAAe,CACbM,QAASH,MAAA,CAAO,yBAAAF,OAAP,CAA0CD,aAA1C,CADI,CAEbO,WAAY,CAAA,CAFC,CAGbC,OAAQ,CACNC,QAAS,CACPH,QAAS,uBADF,CAEPC,WAAY,CAAA,CAFL,CAGPC,OAAQ,IAHD,CADH,CAMNE,YAAa,WANP,CAHK,CADS,CActBZ,MAAAA,CA0CHC,KA1CSY,UAAAb,GAANA;AAA2B,CAC7Bc,QAAS,KADoB,CAE7BC,SAAU,CACRP,QAASH,MAAA,CAAOD,MAAAD,OAAP,CAAuB,eAAAA,OAAvB,CADD,CAERa,OAAQ,CAAA,CAFA,CAGRN,OAAQH,aAHA,CAFmB,CAO7BH,OAAQ,CACNI,QAASJ,MADH,CAENY,OAAQ,CAAA,CAFF,CAGNN,OAAQH,aAHF,CAPqB,CAY7BU,SAAU,CACRT,QAAS,sBADD,CAERC,WAAY,CAAA,CAFJ,CAZmB,CAgB7BS,SAAU,SAhBmB,CAiB7B,mBAAoB,CAClBV,QAAS,yBADS,CAElBW,MAAO,UAFW,CAjBS,CAqB7BC,QAAS,uHArBoB,CAsB7BC,QAAS,oBAtBoB,CAuB7BC,OAAQ,yCAvBqB;AAwB7BC,SAAU,CACR,CACEf,QAAS,MADX,CAEEW,MAAO,MAFT,CADQ,CAKR,gEALQ,CAxBmB,CA+B7B,mBAAoB,CAClBX,QAAS,uBADS,CAElBW,MAAO,UAFW,CA/BS,CAmC7BP,YAAa,mCAnCgB,CAoC7BY,IAAK,CACHhB,QAAS,IADN,CAEHW,MAAO,WAFJ,CApCwB,CAyC/BZ,cAAAL,cAAAQ,OAAAC,QAAAD,OAAA,CAA0DV,KA7D3C,CAHnBH,MAAAC,QAAA,CAAiBE,EACjBA,GAAAyB,YAAA,CAAiB,IACjBzB,GAAA0B,QAAA,CAAa,EAL0G;",
"sources":["node_modules/refractor/lang/jq.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$jq\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = jq\njq.displayName = 'jq'\njq.aliases = []\nfunction jq(Prism) {\n  ;(function(Prism) {\n    var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var string = RegExp(\n      /\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(/__/g, interpolation)\n    )\n    var stringInterpolation = {\n      interpolation: {\n        pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n        lookbehind: true,\n        inside: {\n          content: {\n            pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          punctuation: /^\\\\\\(|\\)$/\n        }\n      }\n    }\n    var jq = (Prism.languages.jq = {\n      comment: /#.*/,\n      property: {\n        pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n        greedy: true,\n        inside: stringInterpolation\n      },\n      string: {\n        pattern: string,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      function: {\n        pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n        lookbehind: true\n      },\n      variable: /\\B\\$\\w+/,\n      'property-literal': {\n        pattern: /[a-z_]\\w*(?=\\s*:(?!:))/i,\n        alias: 'property'\n      },\n      keyword: /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      number: /(?:\\b\\d+\\.|\\B\\.)?\\d+(?:[eE][+-]?\\d+)?\\b/,\n      operator: [\n        {\n          pattern: /\\|=?/,\n          alias: 'pipe'\n        },\n        /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|or|not)\\b/\n      ],\n      'c-style-function': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        alias: 'function'\n      },\n      punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n      dot: {\n        pattern: /\\./,\n        alias: 'important'\n      }\n    })\n    stringInterpolation.interpolation.inside.content.inside = jq\n  })(Prism)\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","jq","Prism","interpolation","source","string","RegExp","replace","stringInterpolation","pattern","lookbehind","inside","content","punctuation","languages","comment","property","greedy","function","variable","alias","keyword","boolean","number","operator","dot","displayName","aliases"]
}
