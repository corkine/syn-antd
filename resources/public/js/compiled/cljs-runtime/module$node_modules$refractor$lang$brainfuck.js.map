{
"version":3,
"file":"module$node_modules$refractor$lang$brainfuck.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,6CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM9HC,QAASA,UAAS,CAACC,KAAD,CAAQ,CACxBA,KAAAC,UAAAF,UAAA,CAA4B,CAC1BG,QAAS,CACPC,QAAS,KADF,CAEPC,MAAO,SAFA,CADiB,CAK1BC,UAAW,CACTF,QAAS,IADA,CAETC,MAAO,UAFE,CALe,CAS1BE,UAAW,CACTH,QAAS,GADA,CAETC,MAAO,SAFE,CATe,CAa1BG,UAAW,CACTJ,QAAS,OADA,CAETC,MAAO,WAFE,CAbe,CAiB1BI,SAAU,MAjBgB,CAkB1BC,QAAS,KAlBiB,CADJ,CAH1Bb,MAAAC,QAAA,CAAiBE,SACjBA,UAAAW,YAAA,CAAwB,WACxBX,UAAAY,QAAA,CAAoB,EAL0G;",
"sources":["node_modules/refractor/lang/brainfuck.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$brainfuck\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = brainfuck\nbrainfuck.displayName = 'brainfuck'\nbrainfuck.aliases = []\nfunction brainfuck(Prism) {\n  Prism.languages.brainfuck = {\n    pointer: {\n      pattern: /<|>/,\n      alias: 'keyword'\n    },\n    increment: {\n      pattern: /\\+/,\n      alias: 'inserted'\n    },\n    decrement: {\n      pattern: /-/,\n      alias: 'deleted'\n    },\n    branching: {\n      pattern: /\\[|\\]/,\n      alias: 'important'\n    },\n    operator: /[.,]/,\n    comment: /\\S+/\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","brainfuck","Prism","languages","pointer","pattern","alias","increment","decrement","branching","operator","comment","displayName","aliases"]
}
