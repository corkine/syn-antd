{
"version":3,
"file":"module$node_modules$refractor$lang$kotlin.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,0CAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM3HC,QAASA,OAAM,CAACC,KAAD,CAAQ,CA0DlBA,KAxDDC,UAAAF,OAAA,CAwDCC,KAxDwBC,UAAAC,OAAA,CAAuB,OAAvB,CAAgC,CACvDC,QAAS,CAEPC,QAAS,0bAFF;AAGPC,WAAY,CAAA,CAHL,CAD8C,CAMvDC,SAAU,CACR,cADQ,CAER,CACEF,QAAS,kBADX,CAEEC,WAAY,CAAA,CAFd,CAFQ,CAN6C,CAavDE,OAAQ,iIAb+C,CAcvDC,SAAU,sGAd6C,CAAhC,CAgBzB,QAwCCR,KAxCMC,UAAAF,OAAA,CAAuB,YAAvB,CAwCNC,MAvCDC,UAAAQ,aAAA,CAA6B,QAA7B,CAAuC,QAAvC,CAAiD,CAC/C,aAAc,CACZL,QAAS,qBADG,CAEZM,MAAO,QAFK,CADiC,CAAjD,CAuCCV,MAjCDC,UAAAQ,aAAA,CAA6B,QAA7B;AAAuC,SAAvC,CAAkD,CAChDE,WAAY,CACVP,QAAS,qCADC,CAEVM,MAAO,SAFG,CADoC,CAAlD,CAiCCV,MA3BDC,UAAAQ,aAAA,CAA6B,QAA7B,CAAuC,UAAvC,CAAmD,CACjDG,MAAO,CACLR,QAAS,WADJ,CAELM,MAAO,QAFF,CAD0C,CAAnD,CA2BCV,MALDC,UAAAF,OAAA,OAAAc,OAAA,CAKCb,KALyCC,UAAAF,OAAA,CACxC,YADwC,CAAAc,OAA1C,CAEW,CACTC,cAnBkBA,CAClB,CACEV,QAAS,aADX,CAEES,OAAQ,CACNE,UAAW,CACTX,QAAS,WADA,CAETM,MAAO,UAFE,CADL,CAKNM,KAaLhB,KAbWC,UAAAF,OALA,CAFV,CADkBe,CAWlB,CACEV,QAAS,OADX,CAEEM,MAAO,UAFT,CAXkBI,CAkBT,CAvDQ,CAHvBlB,MAAAC,QAAA,CAAiBE,MACjBA,OAAAkB,YAAA,CAAqB,QACrBlB,OAAAmB,QAAA,CAAiB,EAL0G;",
"sources":["node_modules/refractor/lang/kotlin.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$kotlin\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = kotlin\nkotlin.displayName = 'kotlin'\nkotlin.aliases = []\nfunction kotlin(Prism) {\n  ;(function(Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        /\\w+(?=\\s*\\()/,\n        {\n          pattern: /(\\.)\\w+(?=\\s*\\{)/,\n          lookbehind: true\n        }\n      ],\n      number: /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    Prism.languages.insertBefore('kotlin', 'string', {\n      'raw-string': {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        alias: 'string' // See interpolation below\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\w+@|@\\w+/,\n        alias: 'symbol'\n      }\n    })\n    var interpolation = [\n      {\n        pattern: /\\$\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.kotlin\n        }\n      },\n      {\n        pattern: /\\$\\w+/,\n        alias: 'variable'\n      }\n    ]\n    Prism.languages.kotlin['string'].inside = Prism.languages.kotlin[\n      'raw-string'\n    ].inside = {\n      interpolation: interpolation\n    }\n  })(Prism)\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","kotlin","Prism","languages","extend","keyword","pattern","lookbehind","function","number","operator","insertBefore","alias","annotation","label","inside","interpolation","delimiter","rest","displayName","aliases"]
}
