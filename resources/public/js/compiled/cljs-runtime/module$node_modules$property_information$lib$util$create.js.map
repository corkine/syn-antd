{
"version":3,
"file":"module$node_modules$property_information$lib$util$create.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAG1I,IAAIC,UAAYJ,OAAA,CAAQ,oDAAR,CAAhB,CACIK,OAASL,OAAA,CAAQ,0DAAR,CADb,CAEIM,YAAcN,OAAA,CAAQ,gEAAR,CAElBC,OAAAC,QAAA,CAEAK,QAAe,CAACC,UAAD,CAAa,CAC1B,IAAIC,MAAQD,UAAAC,MAAZ,CACIC,gBAAkBF,UAAAE,gBAAlBA,EAAgD,EADpD,CAEIC,WAAaH,UAAAG,WAAbA;AAAsC,EAF1C,CAGIC,MAAQJ,UAAAK,WACRC,WAAAA,CAAYN,UAAAM,UAChB,KAAIC,SAAW,EAAf,CACIC,OAAS,EADb,CAEIC,IAGJ,KAAKA,IAAL,GAAaL,MAAb,CAAoB,CAClB,IAAAM,KAAO,IAAIZ,WAAJ,CACLW,IADK,CAELH,UAAA,CAAUH,UAAV,CAAsBM,IAAtB,CAFK,CAGLL,KAAA,CAAMK,IAAN,CAHK,CAILR,KAJK,CAOgC,GAAvC,GAAIC,eAAAS,QAAA,CAAwBF,IAAxB,CAAJ,GACEC,IAAAR,gBADF,CACyB,CAAA,CADzB,CAIAK,SAAA,CAASE,IAAT,CAAA,CAAiBC,IAEjBF,OAAA,CAAOZ,SAAA,CAAUa,IAAV,CAAP,CAAA,CAA0BA,IAC1BD,OAAA,CAAOZ,SAAA,CAAUc,IAAAE,UAAV,CAAP,CAAA,CAAoCH,IAflB,CAkBpB,MAAO,KAAIZ,MAAJ,CAAWU,QAAX,CAAqBC,MAArB,CAA6BP,KAA7B,CA7BmB,CAT8G;",
"sources":["node_modules/property-information/lib/util/create.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$property_information$lib$util$create\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nvar normalize = require('../../normalize')\nvar Schema = require('./schema')\nvar DefinedInfo = require('./defined-info')\n\nmodule.exports = create\n\nfunction create(definition) {\n  var space = definition.space\n  var mustUseProperty = definition.mustUseProperty || []\n  var attributes = definition.attributes || {}\n  var props = definition.properties\n  var transform = definition.transform\n  var property = {}\n  var normal = {}\n  var prop\n  var info\n\n  for (prop in props) {\n    info = new DefinedInfo(\n      prop,\n      transform(attributes, prop),\n      props[prop],\n      space\n    )\n\n    if (mustUseProperty.indexOf(prop) !== -1) {\n      info.mustUseProperty = true\n    }\n\n    property[prop] = info\n\n    normal[normalize(prop)] = prop\n    normal[normalize(info.attribute)] = prop\n  }\n\n  return new Schema(property, normal, space)\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","normalize","Schema","DefinedInfo","create","definition","space","mustUseProperty","attributes","props","properties","transform","property","normal","prop","info","indexOf","attribute"]
}
