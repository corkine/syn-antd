{
"version":3,
"file":"module$node_modules$refractor$lang$ebnf.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMzHC,QAASA,KAAI,CAACC,KAAD,CAAQ,CACnBA,KAAAC,UAAAF,KAAA,CAAuB,CACrBG,QAAS,kBADY,CAErBC,OAAQ,CACNC,QAAS,yBADH,CAENC,OAAQ,CAAA,CAFF,CAFa,CAMrBC,QAAS,CACPF,QAAS,eADF,CAEPC,OAAQ,CAAA,CAFD,CAGPE,MAAO,YAHA,CANY,CAWrBC,WAAY,CACVJ,QAAS,6CADC,CAEVK,WAAY,CAAA,CAFF,CAGVF,MAAO,CAAC,MAAD,CAAS,SAAT,CAHG,CAXS,CAgBrBG,KAAM,8BAhBe,CAiBrBC,YAAa,4BAjBQ,CAkBrBC,SAAU,UAlBW,CADJ;AAHrBhB,MAAAC,QAAA,CAAiBE,IACjBA,KAAAc,YAAA,CAAmB,MACnBd,KAAAe,QAAA,CAAe,EAL0G;",
"sources":["node_modules/refractor/lang/ebnf.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$ebnf\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = ebnf\nebnf.displayName = 'ebnf'\nebnf.aliases = []\nfunction ebnf(Prism) {\n  Prism.languages.ebnf = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    special: {\n      pattern: /\\?[^?\\r\\n]*\\?/,\n      greedy: true,\n      alias: 'class-name'\n    },\n    definition: {\n      pattern: /^(\\s*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n      lookbehind: true,\n      alias: ['rule', 'keyword']\n    },\n    rule: /[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*/i,\n    punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n    operator: /[-=|*/!]/\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","ebnf","Prism","languages","comment","string","pattern","greedy","special","alias","definition","lookbehind","rule","punctuation","operator","displayName","aliases"]
}
