{
"version":3,
"file":"module$node_modules$refractor$lang$soy.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMxHC,QAASA,IAAG,CAACC,cAAD,CAAQ,CAClBA,cAAAC,SAAA,CAAeC,yBAAf,CACE,UAAQ,CAACF,KAAD,CAAQ,CAChB,IAAIG,cAAgB,gDAApB,CACIC,cAAgB,mDACpBJ,MAAAK,UAAAN,IAAA,CAAsB,CACpBO,QAAS,CACP,kBADO,CAEP,CACEC,QAAS,YADX,CAEEC,WAAY,CAAA,CAFd,CAGEC,OAAQ,CAAA,CAHV,CAFO,CADW,CASpB,cAAe,CACbF,QAAS,wFADI;AAEbC,WAAY,CAAA,CAFC,CAGbE,MAAO,QAHM,CAIbC,OAAQ,CACNC,YAAa,IADP,CAJK,CATK,CAiBpBC,UAAW,CACTN,QAAS,kCADA,CAETC,WAAY,CAAA,CAFH,CAGTE,MAAO,UAHE,CAjBS,CAsBpBI,QAAS,CACP,CACEP,QAAS,iNADX,CAEEC,WAAY,CAAA,CAFd,CADO,CAKP,yFALO,CAtBW,CA6BpBO,UAAW,CACTR,QAAS,eADA;AAETG,MAAO,aAFE,CA7BS,CAiCpBM,SAAU,UAjCU,CAkCpBC,SAAU,CACRV,QAAS,yCADD,CAERI,OAAQ,CACNO,OAAQ,CACNX,QAASJ,aADH,CAENM,OAAQ,CAAA,CAFF,CADF,CAKNU,OAAQf,aALF,CAMNQ,YAAa,UANP,CAFA,CAlCU,CA6CpBM,OAAQ,CACNX,QAASJ,aADH,CAENM,OAAQ,CAAA,CAFF,CA7CY,CAiDpBW,SAAU,CACR,WADQ,CAER,CACEb,QAAS,mBADX,CAEEC,WAAY,CAAA,CAFd,CAFQ,CAjDU,CAwDpBa,QAAS,oBAxDW,CAyDpBF,OAAQf,aAzDY,CA0DpBkB,SAAU,gDA1DU,CA2DpBV,YAAa,gBA3DO,CA6DtBZ,MAAAuB,MAAAC,IAAA,CAAgB,iBAAhB,CAAmC,QAAQ,CAACC,GAAD,CAAM,CAI/C,IAAIC;AAAkB,CAAA,CACtB1B,MAAAK,UAAA,CAAgB,mBAAhB,CAAAsB,kBAAA,CACEF,GADF,CAEE,KAFF,CAJiBG,0CAIjB,CAIE,QAAQ,CAACC,KAAD,CAAQ,CANGC,YAQjB,GAAID,KAAJ,GACEH,eADF,CACoB,CAAA,CADpB,CAGA,OAAKA,gBAAL,CAMO,CAAA,CANP,EAZmBK,WAgBV,GAHHF,KAGG,GAFLH,eAEK,CAFa,CAAA,CAEb,EAAA,CAAA,CAJT,CALc,CAJlB,CAL+C,CAAjD,CAwBA1B,MAAAuB,MAAAC,IAAA,CAAgB,gBAAhB,CAAkC,QAAQ,CAACC,GAAD,CAAM,CAC9CzB,KAAAK,UAAA,CAAgB,mBAAhB,CAAA2B,qBAAA,CAA0DP,GAA1D,CAA+D,KAA/D,CAD8C,CAAhD,CAxFgB,CAAhB,CAAD,CA2FEzB,cA3FF,CAFiB,CAJpB,IAAIE,0BAA4BP,OAAA,CAAQ,sDAAR,CAChCC,OAAAC,QAAA,CAAiBE,GACjBA,IAAAkC,YAAA;AAAkB,KAClBlC,IAAAmC,QAAA,CAAc,EAL0G;",
"sources":["node_modules/refractor/lang/soy.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$soy\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = soy\nsoy.displayName = 'soy'\nsoy.aliases = []\nfunction soy(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function(Prism) {\n    var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/\n    Prism.languages.soy = {\n      comment: [\n        /\\/\\*[\\s\\S]*?\\*\\//,\n        {\n          pattern: /(\\s)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'command-arg': {\n        pattern: /({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      parameter: {\n        pattern: /({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      keyword: [\n        {\n          pattern: /({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n          lookbehind: true\n        },\n        /\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/\n      ],\n      delimiter: {\n        pattern: /^{+\\/?|\\/?}+$/,\n        alias: 'punctuation'\n      },\n      property: /\\w+(?==)/,\n      variable: {\n        pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,\n        inside: {\n          string: {\n            pattern: stringPattern,\n            greedy: true\n          },\n          number: numberPattern,\n          punctuation: /[\\[\\].?]/\n        }\n      },\n      string: {\n        pattern: stringPattern,\n        greedy: true\n      },\n      function: [\n        /\\w+(?=\\()/,\n        {\n          pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n          lookbehind: true\n        }\n      ],\n      boolean: /\\b(?:true|false)\\b/,\n      number: numberPattern,\n      operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n      punctuation: /[{}()\\[\\]|.,:]/\n    } // Tokenize all inline Soy expressions\n    Prism.hooks.add('before-tokenize', function(env) {\n      var soyPattern = /{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g\n      var soyLitteralStart = '{literal}'\n      var soyLitteralEnd = '{/literal}'\n      var soyLitteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'soy',\n        soyPattern,\n        function(match) {\n          // Soy tags inside {literal} block are ignored\n          if (match === soyLitteralEnd) {\n            soyLitteralMode = false\n          }\n          if (!soyLitteralMode) {\n            if (match === soyLitteralStart) {\n              soyLitteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    }) // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function(env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy')\n    })\n  })(Prism)\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","soy","Prism","register","refractorMarkupTemplating","stringPattern","numberPattern","languages","comment","pattern","lookbehind","greedy","alias","inside","punctuation","parameter","keyword","delimiter","property","variable","string","number","function","boolean","operator","hooks","add","env","soyLitteralMode","buildPlaceholders","soyPattern","match","soyLitteralEnd","soyLitteralStart","tokenizePlaceholders","displayName","aliases"]
}
