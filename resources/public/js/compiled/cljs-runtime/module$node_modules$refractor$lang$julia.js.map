{
"version":3,
"file":"module$node_modules$refractor$lang$julia.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,yCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM1HC,QAASA,MAAK,CAACC,KAAD,CAAQ,CACpBA,KAAAC,UAAAF,MAAA,CAAwB,CACtBG,QAAS,CACPC,QAAS,cADF,CAEPC,WAAY,CAAA,CAFL,CADa,CAKtBC,OAAQ,qDALc,CAMtBC,QAAS,4PANa;AAOtBC,QAAS,oBAPa,CAQtBC,OAAQ,+EARc,CAStBC,SAAU,iFATY,CAUtBC,YAAa,eAVS,CAWtBC,SAAU,kCAXY,CADJ,CAHtBf,MAAAC,QAAA,CAAiBE,KACjBA,MAAAa,YAAA,CAAoB,OACpBb,MAAAc,QAAA,CAAgB,EAL0G;",
"sources":["node_modules/refractor/lang/julia.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$julia\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = julia\njulia.displayName = 'julia'\njulia.aliases = []\nfunction julia(Prism) {\n  Prism.languages.julia = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    string: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2/,\n    keyword: /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+\\.?\\d*|\\.\\d+)(?:[efp][+-]?\\d+)?j?/i,\n    operator: /[-+*^%\u00f7&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:])?|>(?:=|>>?=?)?|==?=?|[~\u2260\u2264\u2265]/,\n    punctuation: /[{}[\\];(),.:]/,\n    constant: /\\b(?:(?:NaN|Inf)(?:16|32|64)?)\\b/\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","julia","Prism","languages","comment","pattern","lookbehind","string","keyword","boolean","number","operator","punctuation","constant","displayName","aliases"]
}
