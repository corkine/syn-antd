{
"version":3,
"file":"module$node_modules$refractor$lang$roboconf.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM7HC,QAASA,SAAQ,CAACC,KAAD,CAAQ,CACvBA,KAAAC,UAAAF,SAAA,CAA2B,CACzBG,QAAS,KADgB,CAEzBC,QAAS,CACPC,QAAS,+EADF,CAEPC,WAAY,CAAA,CAFL,CAFgB,CAMzBC,UAAW,CACTF,QAAS,oBADA,CAETG,MAAO,UAFE,CANc,CAUzBC,SAAU,oBAVe,CAWzBC,MAAO,CACLL,QAAS,iBADJ,CAELC,WAAY,CAAA,CAFP,CAGLE,MAAO,YAHF,CAXkB,CAgBzBG,SAAU,CACRN,QAAS,cADD,CAERG,MAAO,SAFC,CAhBe;AAoBzBI,SAAU,CACRP,QAAS,QADD,CAERC,WAAY,CAAA,CAFJ,CAGRE,MAAO,UAHC,CApBe,CAyBzBK,YAAa,WAzBY,CADJ,CAHzBhB,MAAAC,QAAA,CAAiBE,QACjBA,SAAAc,YAAA,CAAuB,UACvBd,SAAAe,QAAA,CAAmB,EAL0G;",
"sources":["node_modules/refractor/lang/roboconf.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$roboconf\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = roboconf\nroboconf.displayName = 'roboconf'\nroboconf.aliases = []\nfunction roboconf(Prism) {\n  Prism.languages.roboconf = {\n    comment: /#.*/,\n    keyword: {\n      pattern: /(^|\\s)(?:(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{)|(?:external|import)\\b)/,\n      lookbehind: true\n    },\n    component: {\n      pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n      alias: 'variable'\n    },\n    property: /[\\w.-]+(?=[ \\t]*:)/,\n    value: {\n      pattern: /(=[ \\t]*)[^,;]+/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    optional: {\n      pattern: /\\(optional\\)/,\n      alias: 'builtin'\n    },\n    wildcard: {\n      pattern: /(\\.)\\*/,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    punctuation: /[{},.;:=]/\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","roboconf","Prism","languages","comment","keyword","pattern","lookbehind","component","alias","property","value","optional","wildcard","punctuation","displayName","aliases"]
}
