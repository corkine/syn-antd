shadow$provide.module$node_modules$refractor$lang$handlebars=function(global,process,require,module,exports,shadow$shims){function handlebars(Prism$jscomp$0){Prism$jscomp$0.register(refractorMarkupTemplating);(function(Prism){Prism.languages.handlebars={comment:/\{\{![\s\S]*?\}\}/,delimiter:{pattern:/^\{\{\{?|\}\}\}?$/i,alias:"punctuation"},string:/(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][+-]?\d+)?/,boolean:/\b(?:true|false)\b/,block:{pattern:/^(\s*~?\s*)[#\/]\S+?(?=\s*~?\s*$|\s)/i,
lookbehind:!0,alias:"keyword"},brackets:{pattern:/\[[^\]]+\]/,inside:{punctuation:/\[|\]/,variable:/[\s\S]+/}},punctuation:/[!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~]/,variable:/[^!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~\s]+/};Prism.hooks.add("before-tokenize",function(env){Prism.languages["markup-templating"].buildPlaceholders(env,"handlebars",/\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g)});Prism.hooks.add("after-tokenize",function(env){Prism.languages["markup-templating"].tokenizePlaceholders(env,"handlebars")})})(Prism$jscomp$0)}
var refractorMarkupTemplating=require("module$node_modules$refractor$lang$markup_templating");module.exports=handlebars;handlebars.displayName="handlebars";handlebars.aliases=[]}
//# sourceMappingURL=module$node_modules$refractor$lang$handlebars.js.map
