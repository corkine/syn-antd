{
"version":3,
"file":"module$node_modules$react_syntax_highlighter$dist$cjs$highlight.js",
"lineCount":15,
"mappings":"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",
"sources":["node_modules/react-syntax-highlighter/dist/cjs/highlight.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_syntax_highlighter$dist$cjs$highlight\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createElement = _interopRequireDefault(require(\"./create-element\"));\n\nvar newLineRegex = /\\n/g;\n\nfunction getNewLines(str) {\n  return str.match(newLineRegex);\n}\n\nfunction getLineNumbers(_ref) {\n  var lines = _ref.lines,\n      startingLineNumber = _ref.startingLineNumber,\n      style = _ref.style;\n  return lines.map(function (_, i) {\n    var number = i + startingLineNumber;\n    return _react.default.createElement(\"span\", {\n      key: \"line-\".concat(i),\n      className: \"react-syntax-highlighter-line-number\",\n      style: typeof style === 'function' ? style(number) : style\n    }, \"\".concat(number, \"\\n\"));\n  });\n}\n\nfunction LineNumbers(_ref2) {\n  var codeString = _ref2.codeString,\n      codeStyle = _ref2.codeStyle,\n      _ref2$containerStyle = _ref2.containerStyle,\n      containerStyle = _ref2$containerStyle === void 0 ? {\n    float: 'left',\n    paddingRight: '10px'\n  } : _ref2$containerStyle,\n      _ref2$numberStyle = _ref2.numberStyle,\n      numberStyle = _ref2$numberStyle === void 0 ? {} : _ref2$numberStyle,\n      startingLineNumber = _ref2.startingLineNumber;\n  return _react.default.createElement(\"code\", {\n    style: Object.assign({}, codeStyle, containerStyle)\n  }, getLineNumbers({\n    lines: codeString.replace(/\\n$/, '').split('\\n'),\n    style: numberStyle,\n    startingLineNumber: startingLineNumber\n  }));\n}\n\nfunction createLineElement(_ref3) {\n  var children = _ref3.children,\n      lineNumber = _ref3.lineNumber,\n      lineProps = _ref3.lineProps,\n      _ref3$className = _ref3.className,\n      className = _ref3$className === void 0 ? [] : _ref3$className;\n  var properties = (typeof lineProps === 'function' ? lineProps(lineNumber) : lineProps) || {};\n  properties.className = properties.className ? className.concat(properties.className) : className;\n  return {\n    type: 'element',\n    tagName: 'span',\n    properties: properties,\n    children: children\n  };\n}\n\nfunction flattenCodeTree(tree) {\n  var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var newTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n\n    if (node.type === 'text') {\n      newTree.push(createLineElement({\n        children: [node],\n        className: className\n      }));\n    } else if (node.children) {\n      var classNames = className.concat(node.properties.className);\n      newTree = newTree.concat(flattenCodeTree(node.children, classNames));\n    }\n  }\n\n  return newTree;\n}\n\nfunction wrapLinesInSpan(codeTree, lineProps) {\n  var tree = flattenCodeTree(codeTree.value);\n  var newTree = [];\n  var lastLineBreakIndex = -1;\n  var index = 0;\n\n  var _loop = function _loop() {\n    var node = tree[index];\n    var value = node.children[0].value;\n    var newLines = getNewLines(value);\n\n    if (newLines) {\n      var splitValue = value.split('\\n');\n      splitValue.forEach(function (text, i) {\n        var lineNumber = newTree.length + 1;\n        var newChild = {\n          type: 'text',\n          value: \"\".concat(text, \"\\n\")\n        };\n\n        if (i === 0) {\n          var _children = tree.slice(lastLineBreakIndex + 1, index).concat(createLineElement({\n            children: [newChild],\n            className: node.properties.className\n          }));\n\n          newTree.push(createLineElement({\n            children: _children,\n            lineNumber: lineNumber,\n            lineProps: lineProps\n          }));\n        } else if (i === splitValue.length - 1) {\n          var stringChild = tree[index + 1] && tree[index + 1].children && tree[index + 1].children[0];\n\n          if (stringChild) {\n            var lastLineInPreviousSpan = {\n              type: 'text',\n              value: \"\".concat(text)\n            };\n            var newElem = createLineElement({\n              children: [lastLineInPreviousSpan],\n              className: node.properties.className\n            });\n            tree.splice(index + 1, 0, newElem);\n          } else {\n            newTree.push(createLineElement({\n              children: [newChild],\n              lineNumber: lineNumber,\n              lineProps: lineProps,\n              className: node.properties.className\n            }));\n          }\n        } else {\n          newTree.push(createLineElement({\n            children: [newChild],\n            lineNumber: lineNumber,\n            lineProps: lineProps,\n            className: node.properties.className\n          }));\n        }\n      });\n      lastLineBreakIndex = index;\n    }\n\n    index++;\n  };\n\n  while (index < tree.length) {\n    _loop();\n  }\n\n  if (lastLineBreakIndex !== tree.length - 1) {\n    var children = tree.slice(lastLineBreakIndex + 1, tree.length);\n\n    if (children && children.length) {\n      newTree.push(createLineElement({\n        children: children,\n        lineNumber: newTree.length + 1,\n        lineProps: lineProps\n      }));\n    }\n  }\n\n  return newTree;\n}\n\nfunction defaultRenderer(_ref4) {\n  var rows = _ref4.rows,\n      stylesheet = _ref4.stylesheet,\n      useInlineStyles = _ref4.useInlineStyles;\n  return rows.map(function (node, i) {\n    return (0, _createElement.default)({\n      node: node,\n      stylesheet: stylesheet,\n      useInlineStyles: useInlineStyles,\n      key: \"code-segement\".concat(i)\n    });\n  });\n}\n\nfunction getCodeTree(_ref5) {\n  var astGenerator = _ref5.astGenerator,\n      language = _ref5.language,\n      code = _ref5.code,\n      defaultCodeValue = _ref5.defaultCodeValue;\n\n  if (astGenerator.getLanguage) {\n    var hasLanguage = language && astGenerator.getLanguage(language);\n\n    if (language === 'text') {\n      return {\n        value: defaultCodeValue,\n        language: 'text'\n      };\n    } else if (hasLanguage) {\n      return astGenerator.highlight(language, code);\n    } else {\n      return astGenerator.highlightAuto(code);\n    }\n  }\n\n  try {\n    return language && language !== 'text' ? {\n      value: astGenerator.highlight(code, language)\n    } : {\n      value: defaultCodeValue\n    };\n  } catch (e) {\n    return {\n      value: defaultCodeValue\n    };\n  }\n}\n\nfunction _default(defaultAstGenerator, defaultStyle) {\n  return function SyntaxHighlighter(_ref6) {\n    var language = _ref6.language,\n        children = _ref6.children,\n        _ref6$style = _ref6.style,\n        style = _ref6$style === void 0 ? defaultStyle : _ref6$style,\n        _ref6$customStyle = _ref6.customStyle,\n        customStyle = _ref6$customStyle === void 0 ? {} : _ref6$customStyle,\n        _ref6$codeTagProps = _ref6.codeTagProps,\n        codeTagProps = _ref6$codeTagProps === void 0 ? {\n      style: style['code[class*=\"language-\"]']\n    } : _ref6$codeTagProps,\n        _ref6$useInlineStyles = _ref6.useInlineStyles,\n        useInlineStyles = _ref6$useInlineStyles === void 0 ? true : _ref6$useInlineStyles,\n        _ref6$showLineNumbers = _ref6.showLineNumbers,\n        showLineNumbers = _ref6$showLineNumbers === void 0 ? false : _ref6$showLineNumbers,\n        _ref6$startingLineNum = _ref6.startingLineNumber,\n        startingLineNumber = _ref6$startingLineNum === void 0 ? 1 : _ref6$startingLineNum,\n        lineNumberContainerStyle = _ref6.lineNumberContainerStyle,\n        lineNumberStyle = _ref6.lineNumberStyle,\n        wrapLines = _ref6.wrapLines,\n        _ref6$lineProps = _ref6.lineProps,\n        lineProps = _ref6$lineProps === void 0 ? {} : _ref6$lineProps,\n        renderer = _ref6.renderer,\n        _ref6$PreTag = _ref6.PreTag,\n        PreTag = _ref6$PreTag === void 0 ? 'pre' : _ref6$PreTag,\n        _ref6$CodeTag = _ref6.CodeTag,\n        CodeTag = _ref6$CodeTag === void 0 ? 'code' : _ref6$CodeTag,\n        _ref6$code = _ref6.code,\n        code = _ref6$code === void 0 ? Array.isArray(children) ? children[0] : children : _ref6$code,\n        astGenerator = _ref6.astGenerator,\n        rest = (0, _objectWithoutProperties2.default)(_ref6, [\"language\", \"children\", \"style\", \"customStyle\", \"codeTagProps\", \"useInlineStyles\", \"showLineNumbers\", \"startingLineNumber\", \"lineNumberContainerStyle\", \"lineNumberStyle\", \"wrapLines\", \"lineProps\", \"renderer\", \"PreTag\", \"CodeTag\", \"code\", \"astGenerator\"]);\n    astGenerator = astGenerator || defaultAstGenerator;\n    var lineNumbers = showLineNumbers ? _react.default.createElement(LineNumbers, {\n      containerStyle: lineNumberContainerStyle,\n      codeStyle: codeTagProps.style || {},\n      numberStyle: lineNumberStyle,\n      startingLineNumber: startingLineNumber,\n      codeString: code\n    }) : null;\n    var defaultPreStyle = style.hljs || style['pre[class*=\"language-\"]'] || {\n      backgroundColor: '#fff'\n    };\n    var preProps = useInlineStyles ? Object.assign({}, rest, {\n      style: Object.assign({}, defaultPreStyle, customStyle)\n    }) : Object.assign({}, rest, {\n      className: 'hljs'\n    });\n\n    if (!astGenerator) {\n      return _react.default.createElement(PreTag, preProps, lineNumbers, _react.default.createElement(CodeTag, codeTagProps, code));\n    }\n    /*\n     * some custom renderers rely on individual row elements so we need to turn wrapLines on\n     * if renderer is provided and wrapLines is undefined\n     */\n\n\n    wrapLines = renderer && wrapLines === undefined ? true : wrapLines;\n    renderer = renderer || defaultRenderer;\n    var defaultCodeValue = [{\n      type: 'text',\n      value: code\n    }];\n    var codeTree = getCodeTree({\n      astGenerator: astGenerator,\n      language: language,\n      code: code,\n      defaultCodeValue: defaultCodeValue\n    });\n\n    if (codeTree.language === null) {\n      codeTree.value = defaultCodeValue;\n    }\n\n    var tree = wrapLines ? wrapLinesInSpan(codeTree, lineProps) : codeTree.value;\n    return _react.default.createElement(PreTag, preProps, lineNumbers, _react.default.createElement(CodeTag, codeTagProps, renderer({\n      rows: tree,\n      stylesheet: style,\n      useInlineStyles: useInlineStyles\n    })));\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","getLineNumbers","_ref","startingLineNumber","style","lines","map","_","i","number","_react","default","createElement","key","concat","className","LineNumbers","_ref2","codeString","_ref2$containerStyle","containerStyle","_ref2$numberStyle","numberStyle","Object","assign","codeStyle","float","paddingRight","replace","split","createLineElement","_ref3","children","lineNumber","lineProps","_ref3$className","properties","type","tagName","flattenCodeTree","tree","arguments","length","undefined","newTree","node","push","classNames","wrapLinesInSpan","codeTree","value","lastLineBreakIndex","index","_loop","match","newLines","newLineRegex","splitValue","forEach","text","newChild","_children","slice","lastLineInPreviousSpan","newElem","splice","defaultRenderer","_ref4","stylesheet","useInlineStyles","rows","_createElement","_interopRequireDefault","defineProperty","_default","defaultAstGenerator","defaultStyle","SyntaxHighlighter","_ref6","language","_ref6$style","_ref6$customStyle","customStyle","_ref6$codeTagProps","codeTagProps","_ref6$useInlineStyles","_ref6$showLineNumbers","showLineNumbers","_ref6$startingLineNum","lineNumberContainerStyle","lineNumberStyle","wrapLines","_ref6$lineProps","renderer","_ref6$PreTag","PreTag","_ref6$CodeTag","CodeTag","_ref6$code","code","Array","isArray","astGenerator","rest","_objectWithoutProperties2","lineNumbers","defaultPreStyle","hljs","backgroundColor","preProps","defaultCodeValue","getLanguage","hasLanguage","highlight","highlightAuto","e"]
}
