{
"version":3,
"file":"module$node_modules$refractor$lang$toml.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMzHC,QAASA,KAAI,CAACC,KAAD,CAAQ,CAmDhBA,KA/CDC,UAAAF,KAAA,CAAuB,CACrBG,QAAS,CACPC,QAAS,KADF,CAEPC,OAAQ,CAAA,CAFD,CADY,CAKrBC,MAAO,CACLF,QAAS,oIADJ,CASLG,WAAY,CAAA,CATP,CAULF,OAAQ,CAAA,CAVH,CAWLG,MAAO,YAXF,CALc,CAkBrBC,IAAK,CACHL,QAAS,4HADN;AAKHG,WAAY,CAAA,CALT,CAMHF,OAAQ,CAAA,CANL,CAOHG,MAAO,UAPJ,CAlBgB,CA2BrBE,OAAQ,CACNN,QAAS,6EADH,CAENC,OAAQ,CAAA,CAFF,CA3Ba,CA+BrBM,KAAM,CACJ,CAEEP,QAAS,+EAFX,CAGEI,MAAO,QAHT,CADI,CAMJ,CAEEJ,QAAS,8BAFX,CAGEI,MAAO,QAHT,CANI,CA/Be,CA2CrBI,OAAQ,sKA3Ca,CA4CrBC,QAAS,oBA5CY;AA6CrBC,YAAa,YA7CQ,CAJN,CAHrBjB,MAAAC,QAAA,CAAiBE,IACjBA,KAAAe,YAAA,CAAmB,MACnBf,KAAAgB,QAAA,CAAe,EAL0G;",
"sources":["node_modules/refractor/lang/toml.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$toml\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = toml\ntoml.displayName = 'toml'\ntoml.aliases = []\nfunction toml(Prism) {\n  ;(function(Prism) {\n    // pattern: /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\.|[^\\\\\"\\r\\n])*\")/\n    var key = '(?:[\\\\w-]+|\\'[^\\'\\n\\r]*\\'|\"(?:\\\\.|[^\\\\\\\\\"\\r\\n])*\")'\n    Prism.languages.toml = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      table: {\n        pattern: RegExp(\n          '(^\\\\s*\\\\[\\\\s*(?:\\\\[\\\\s*)?)' +\n            key +\n            '(?:\\\\s*\\\\.\\\\s*' +\n            key +\n            ')*(?=\\\\s*\\\\])',\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name'\n      },\n      key: {\n        pattern: RegExp(\n          '(^\\\\s*|[{,]\\\\s*)' + key + '(?:\\\\s*\\\\.\\\\s*' + key + ')*(?=\\\\s*=)',\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'property'\n      },\n      string: {\n        pattern: /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      date: [\n        {\n          // Offset Date-Time, Local Date-Time, Local Date\n          pattern: /\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?/i,\n          alias: 'number'\n        },\n        {\n          // Local Time\n          pattern: /\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?/i,\n          alias: 'number'\n        }\n      ],\n      number: /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?(?:inf|nan)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      punctuation: /[.,=[\\]{}]/\n    }\n  })(Prism)\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","toml","Prism","languages","comment","pattern","greedy","table","lookbehind","alias","key","string","date","number","boolean","punctuation","displayName","aliases"]
}
