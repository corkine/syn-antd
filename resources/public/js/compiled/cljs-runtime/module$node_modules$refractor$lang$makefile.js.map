{
"version":3,
"file":"module$node_modules$refractor$lang$makefile.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM7HC,QAASA,SAAQ,CAACC,KAAD,CAAQ,CACvBA,KAAAC,UAAAF,SAAA,CAA2B,CACzBG,QAAS,CACPC,QAAS,4CADF,CAEPC,WAAY,CAAA,CAFL,CADgB,CAKzBC,OAAQ,CACNF,QAAS,gDADH,CAENG,OAAQ,CAAA,CAFF,CALiB,CAUzBC,QAAS,+BAVgB,CAYzBC,OAAQ,CACNL,QAAS,2BADH,CAENM,OAAQ,CACNC,SAAU,+BADJ,CAFF,CAZiB,CAkBzBA,SAAU,iDAlBe;AAmBzBC,QAAS,CAEP,4HAFO,CAGP,CACER,QAAS,uQADX,CAEEC,WAAY,CAAA,CAFd,CAHO,CAnBgB,CA2BzBQ,SAAU,sBA3Be,CA4BzBC,YAAa,UA5BY,CADJ,CAHzBjB,MAAAC,QAAA,CAAiBE,QACjBA;QAAAe,YAAA,CAAuB,UACvBf,SAAAgB,QAAA,CAAmB,EAL0G;",
"sources":["node_modules/refractor/lang/makefile.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$makefile\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = makefile\nmakefile.displayName = 'makefile'\nmakefile.aliases = []\nfunction makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    // Built-in target names\n    builtin: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    // Targets\n    symbol: {\n      pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n      inside: {\n        variable: /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    keyword: [\n      // Directives\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n      {\n        pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n        lookbehind: true\n      }\n    ],\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","makefile","Prism","languages","comment","pattern","lookbehind","string","greedy","builtin","symbol","inside","variable","keyword","operator","punctuation","displayName","aliases"]
}
