{
"version":3,
"file":"module$node_modules$refractor$lang$tap.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMxHC,QAASA,IAAG,CAACC,KAAD,CAAQ,CAClBA,KAAAC,UAAAF,IAAA,CAAsB,CACpBG,KAAM,kBADc,CAEpBC,KAAM,cAFc,CAGpBC,OAAQ,mBAHY,CAIpBC,QAAS,cAJW,CAKpBC,QAAS,kBALW,CAMpBC,KAAM,sBANc,CAOpBC,QAAS,CACPC,QAAS,oBADF,CAEPC,OAAQ,CAAA,CAFD,CAPW,CAWpBC,YAAa,MAXO,CAYpBC,UAAW,KAZS,CAapBC,QAAS,CACPJ,QAAS,oEADF,CAEPK,WAAY,CAAA,CAFL,CAGPC,OAAQf,KAAAC,UAAAe,KAHD;AAIPC,MAAO,eAJA,CAbW,CADJ,CAHpBrB,MAAAC,QAAA,CAAiBE,GACjBA,IAAAmB,YAAA,CAAkB,KAClBnB,IAAAoB,QAAA,CAAc,EAL0G;",
"sources":["node_modules/refractor/lang/tap.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$tap\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = tap\ntap.displayName = 'tap'\ntap.aliases = []\nfunction tap(Prism) {\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[^\\S\\r\\n]*)---(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?[^\\S\\r\\n]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","tap","Prism","languages","fail","pass","pragma","bailout","version","plan","subtest","pattern","greedy","punctuation","directive","yamlish","lookbehind","inside","yaml","alias","displayName","aliases"]
}
