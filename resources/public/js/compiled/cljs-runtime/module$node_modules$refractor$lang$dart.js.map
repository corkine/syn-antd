{
"version":3,
"file":"module$node_modules$refractor$lang$dart.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMzHC,QAASA,KAAI,CAACC,KAAD,CAAQ,CACnBA,KAAAC,UAAAF,KAAA,CAAuBC,KAAAC,UAAAC,OAAA,CAAuB,OAAvB,CAAgC,CACrDC,OAAQ,CACN,CACEC,QAAS,uBADX,CAEEC,OAAQ,CAAA,CAFV,CADM,CAKN,CACED,QAAS,mCADX,CAEEC,OAAQ,CAAA,CAFV,CALM,CAD6C,CAWrDC,QAAS,CACP,0BADO,CAEP,sTAFO,CAX4C;AAerDC,SAAU,gFAf2C,CAAhC,CAiBvBP,MAAAC,UAAAO,aAAA,CAA6B,MAA7B,CAAqC,UAArC,CAAiD,CAC/CC,SAAU,CACRL,QAAS,MADD,CAERM,MAAO,QAFC,CADqC,CAAjD,CAlBmB,CAHrBd,MAAAC,QAAA,CAAiBE,IACjBA,KAAAY,YAAA,CAAmB,MACnBZ,KAAAa,QAAA,CAAe,EAL0G;",
"sources":["node_modules/refractor/lang/dart.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$dart\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = dart\ndart.displayName = 'dart'\ndart.aliases = []\nfunction dart(Prism) {\n  Prism.languages.dart = Prism.languages.extend('clike', {\n    string: [\n      {\n        pattern: /r?(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true\n      },\n      {\n        pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }\n    ],\n    keyword: [\n      /\\b(?:async|sync|yield)\\*/,\n      /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|default|deferred|do|dynamic|else|enum|export|external|extends|factory|final|finally|for|get|if|implements|import|in|library|new|null|operator|part|rethrow|return|set|static|super|switch|this|throw|try|typedef|var|void|while|with|yield)\\b/\n    ],\n    operator: /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n  })\n  Prism.languages.insertBefore('dart', 'function', {\n    metadata: {\n      pattern: /@\\w+/,\n      alias: 'symbol'\n    }\n  })\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","dart","Prism","languages","extend","string","pattern","greedy","keyword","operator","insertBefore","metadata","alias","displayName","aliases"]
}
