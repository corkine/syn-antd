{
"version":3,
"file":"module$node_modules$space_separated_tokens$index.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,iDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGlID,OAAAE,MAAA,CAOAA,QAAc,CAACC,KAAD,CAAQ,CAChBC,KAAAA,CAAQC,MAAA,CAAOF,KAAP,EAAgBG,KAAhB,CAAAC,KAAA,EACZ,OAAOH,MAAA,GAAUE,KAAV,CAAkB,EAAlB,CAAuBF,KAAAI,MAAA,CAAYC,UAAZ,CAFV,CANtBT,QAAAU,UAAA,CAWAA,QAAkB,CAACC,MAAD,CAAS,CACzB,MAAOA,OAAAC,KAAA,CAAYC,KAAZ,CAAAN,KAAA,EADkB,CAT3B,KAAID,MAAQ,EAAZ,CACIO,MAAQ,GADZ,CAEIJ,WAAa,eARiH;",
"sources":["node_modules/space-separated-tokens/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$space_separated_tokens$index\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar empty = ''\nvar space = ' '\nvar whiteSpace = /[ \\t\\n\\r\\f]+/g\n\nfunction parse(value) {\n  var input = String(value || empty).trim()\n  return input === empty ? [] : input.split(whiteSpace)\n}\n\nfunction stringify(values) {\n  return values.join(space).trim()\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","parse","value","input","String","empty","trim","split","whiteSpace","stringify","values","join","space"]
}
