{
"version":3,
"file":"module$node_modules$refractor$lang$handlebars.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,8CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM/HC,QAASA,WAAU,CAACC,cAAD,CAAQ,CACzBA,cAAAC,SAAA,CAAeC,yBAAf,CACE,UAAQ,CAACF,KAAD,CAAQ,CAChBA,KAAAG,UAAAJ,WAAA,CAA6B,CAC3BK,QAAS,mBADkB,CAE3BC,UAAW,CACTC,QAAS,oBADA,CAETC,MAAO,aAFE,CAFgB,CAM3BC,OAAQ,kCANmB,CAO3BC,OAAQ,4DAPmB,CAQ3BC,QAAS,oBARkB,CAS3BC,MAAO,CACLL,QAAS,uCADJ;AAELM,WAAY,CAAA,CAFP,CAGLL,MAAO,SAHF,CAToB,CAc3BM,SAAU,CACRP,QAAS,YADD,CAERQ,OAAQ,CACNC,YAAa,OADP,CAENC,SAAU,SAFJ,CAFA,CAdiB,CAqB3BD,YAAa,mCArBc,CAsB3BC,SAAU,uCAtBiB,CAwB7BhB,MAAAiB,MAAAC,IAAA,CAAgB,iBAAhB,CAAmC,QAAQ,CAACC,GAAD,CAAM,CAE/CnB,KAAAG,UAAA,CAAgB,mBAAhB,CAAAiB,kBAAA,CACED,GADF,CAEE,YAFF,CADwBE,wCACxB,CAF+C,CAAjD,CAQArB,MAAAiB,MAAAC,IAAA,CAAgB,gBAAhB,CAAkC,QAAQ,CAACC,GAAD,CAAM,CAC9CnB,KAAAG,UAAA,CAAgB,mBAAhB,CAAAmB,qBAAA,CACEH,GADF,CAEE,YAFF,CAD8C,CAAhD,CAjCgB,CAAhB,CAAD,CAuCEnB,cAvCF,CAFwB;AAJ3B,IAAIE,0BAA4BP,OAAA,CAAQ,sDAAR,CAChCC,OAAAC,QAAA,CAAiBE,UACjBA,WAAAwB,YAAA,CAAyB,YACzBxB,WAAAyB,QAAA,CAAqB,EAL0G;",
"sources":["node_modules/refractor/lang/handlebars.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$handlebars\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = handlebars\nhandlebars.displayName = 'handlebars'\nhandlebars.aliases = []\nfunction handlebars(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function(Prism) {\n    Prism.languages.handlebars = {\n      comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n      delimiter: {\n        pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      boolean: /\\b(?:true|false)\\b/,\n      block: {\n        pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      brackets: {\n        pattern: /\\[[^\\]]+\\]/,\n        inside: {\n          punctuation: /\\[|\\]/,\n          variable: /[\\s\\S]+/\n        }\n      },\n      punctuation: /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n      variable: /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n    }\n    Prism.hooks.add('before-tokenize', function(env) {\n      var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'handlebars',\n        handlebarsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function(env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(\n        env,\n        'handlebars'\n      )\n    })\n  })(Prism)\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","handlebars","Prism","register","refractorMarkupTemplating","languages","comment","delimiter","pattern","alias","string","number","boolean","block","lookbehind","brackets","inside","punctuation","variable","hooks","add","env","buildPlaceholders","handlebarsPattern","tokenizePlaceholders","displayName","aliases"]
}
