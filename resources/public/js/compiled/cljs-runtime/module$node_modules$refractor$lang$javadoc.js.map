{
"version":3,
"file":"module$node_modules$refractor$lang$javadoc.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,2CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM5HC,QAASA,QAAO,CAACC,KAAD,CAAQ,CACtBA,KAAAC,SAAA,CAAeC,oBAAf,CAEE,KAAIC,UAAY,CACdC,KAAM,CACJC,QAAS,gCADL,CAEJC,WAAY,CAAA,CAFR,CAGJC,OA6CHP,KA7CWQ,UAAAC,KAHJ,CAIJC,MAAO,eAJH,CADQ,CAiDfV,MAzCDQ,UAAAT,QAAA,CAyCCC,KAzCyBQ,UAAAG,OAAA,CAAuB,aAAvB,CAAsC,EAAtC,CAyCzBX,MAxCDQ,UAAAI,aAAA,CAA6B,SAA7B,CAAwC,SAAxC,CAAmD,CACjD,aAAc,CACZ,CACEP,QAAS,qHADX;AAEEC,WAAY,CAAA,CAFd,CAGEC,OAAQ,CACNM,YAAa,IADP,CAHV,CADY,CAQZ,CAEER,QAAS,uBAFX,CAGEC,WAAY,CAAA,CAHd,CAIEC,OAAQ,CACNM,YAAa,OADP,CAJV,CARY,CADmC,CAkBjDC,UAAW,CACTT,QAAS,8DADA,CAETC,WAAY,CAAA,CAFH,CAGTC,OAAQ,CACNM,YAAa,IADP,CAHC,CAlBsC,CAyBjD,eAAgB,CACd,CACER,QAAS,6CADX,CAEEC,WAAY,CAAA,CAFd,CAGEC,OAAQJ,SAHV,CADc,CAMd,CACEE,QAAS,uCADX,CAEEC,WAAY,CAAA,CAFd,CAGEC,OAAQJ,SAHV,CANc,CAzBiC,CAqCjDY,IAGDf,KAHMQ,UAAAQ,OAAAD,IArC4C,CAAnD,CAwCCf,MADDQ,UAAAS,YAAAC,WAAA,CAAuC,MAAvC;AACClB,KAD8CQ,UAAAT,QAA/C,CAnDoB,CAJxB,IAAIG,qBAAuBP,OAAA,CAAQ,gDAAR,CAC3BC,OAAAC,QAAA,CAAiBE,OACjBA,QAAAoB,YAAA,CAAsB,SACtBpB,QAAAqB,QAAA,CAAkB,EAL0G;",
"sources":["node_modules/refractor/lang/javadoc.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$javadoc\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\nvar refractorJavadoclike = require('./javadoclike.js')\nmodule.exports = javadoc\njavadoc.displayName = 'javadoc'\njavadoc.aliases = []\nfunction javadoc(Prism) {\n  Prism.register(refractorJavadoclike)\n  ;(function(Prism) {\n    var codeLines = {\n      code: {\n        pattern: /(^(\\s*(?:\\*\\s*)*)).*[^*\\s].+$/m,\n        lookbehind: true,\n        inside: Prism.languages.java,\n        alias: 'language-java'\n      }\n    }\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {})\n    Prism.languages.insertBefore('javadoc', 'keyword', {\n      'class-name': [\n        {\n          pattern: /(@(?:exception|throws|see|link|linkplain|value)\\s+(?:[a-z\\d]+\\.)*)[A-Z](?:\\w*[a-z]\\w*)?(?:\\.[A-Z](?:\\w*[a-z]\\w*)?)*/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        {\n          // @param <T> the first generic type parameter\n          pattern: /(@param\\s+)<[A-Z]\\w*>/,\n          lookbehind: true,\n          inside: {\n            punctuation: /[.<>]/\n          }\n        }\n      ],\n      namespace: {\n        pattern: /(@(?:exception|throws|see|link|linkplain)\\s+)(?:[a-z\\d]+\\.)+/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      'code-section': [\n        {\n          pattern: /(\\{@code\\s+)(?:[^{}]|\\{[^{}]*\\})+?(?=\\s*\\})/,\n          lookbehind: true,\n          inside: codeLines\n        },\n        {\n          pattern: /(<(code|tt)>\\s*)[\\s\\S]+?(?=\\s*<\\/\\2>)/,\n          lookbehind: true,\n          inside: codeLines\n        }\n      ],\n      tag: Prism.languages.markup.tag\n    })\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc)\n  })(Prism)\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","javadoc","Prism","register","refractorJavadoclike","codeLines","code","pattern","lookbehind","inside","languages","java","alias","extend","insertBefore","punctuation","namespace","tag","markup","javadoclike","addSupport","displayName","aliases"]
}
