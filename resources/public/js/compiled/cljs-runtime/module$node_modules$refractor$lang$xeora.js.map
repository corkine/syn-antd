{
"version":3,
"file":"module$node_modules$refractor$lang$xeora.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,yCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM1HC,QAASA,MAAK,CAACC,KAAD,CAAQ,CAoHjBA,KAlHDC,UAAAF,MAAA,CAkHCC,KAlHuBC,UAAAC,OAAA,CAAuB,QAAvB,CAAiC,CACvDC,SAAU,CACRC,QAAS,2CADD,CAERC,OAAQ,CACNC,YAAa,CACXF,QAAS,IADE,CADP,CAFA,CAD6C,CASvDG,SAAU,CACRH,QAAS,8BADD,CAERC,OAAQ,CACNC,YAAa,CACXF,QAAS,MADE,CADP,CAINI,SAAU,CACRJ,QAAS,cADD,CAJJ,CAFA,CAT6C,CAoBvD,kBAAmB,CACjBA,QAAS,yGADQ;AAEjBC,OAAQ,CACNE,SAAU,CACRH,QAAS,kCADD,CAERC,OAAQ,CACNC,YAAa,CACXF,QAAS,OADE,CADP,CAINI,SAAU,CACRJ,QAAS,cADD,CAJJ,CAFA,CADJ,CAYNE,YAAa,CACXF,QAAS,gBADE,CAZP,CAFS,CAkBjBK,MAAO,UAlBU,CApBoC,CAwCvD,iBAAkB,CAChBL,QAAS,+GADO,CAEhBC,OAAQ,CACNC,YAAa,CACXF,QAAS,YADE,CADP,CAFQ,CAOhBK,MAAO,UAPS,CAxCqC,CAiDvD,mBAAoB,CAClBL,QAAS,6CADS,CAElBC,OAAQ,CACNC,YAAa,CACXF,QAAS,gCADE;AAEXC,OAAQ,CACNK,IAAK,CACHN,QAAS,KADN,CADC,CAFG,CADP,CAFU,CAYlBK,MAAO,UAZW,CAjDmC,CA+DvD,uBAAwB,CACtBL,QAAS,6DADa,CAEtBC,OAAQ,CACNC,YAAa,CACXF,QAAS,gCADE,CAEXC,OAAQ,CACNK,IAAK,CACHN,QAAS,KADN,CADC,CAFG,CADP,CASNO,UAAW,CACTP,QAAS,UADA,CAETC,OAAQ,CACNC,YAAa,CACXF,QAAS,GADE,CADP,CAFC,CAOTK,MAAO,SAPE,CATL,CAFc,CAqBtBA,MAAO,UArBe,CA/D+B,CAsFvD,4BAA6B,CAC3BL,QAAS,aADkB,CAE3BC,OAAQ,CACNC,YAAa,CACXF,QAAS,OADE,CADP,CAFmB,CAO3BK,MAAO,UAPoB,CAtF0B,CA+FvD,wBAAyB,CACvBL,QAAS,aADc,CAEvBC,OAAQ,CACNC,YAAa,CACXF,QAAS,QADE,CADP,CAFe;AAOvBK,MAAO,UAPgB,CA/F8B,CAAjC,CAkHvBT,MATDC,UAAAW,aAAA,CACE,QADF,CAEE,aAFF,CAGE,CACEL,SAKHP,KALaC,UAAAF,MAAA,CAAsB,iBAAtB,CAAAM,OAAA,SADZ,CAHF,CASCL,KAHCC,UAAAF,MAAA,CAAsB,gBAAtB,CANF,CASCC,MADDC,UAAAY,UAAA,CACCb,KAD2BC,UAAAF,MAnHV,CAHtBH,MAAAC,QAAA,CAAiBE,KACjBA,MAAAe,YAAA,CAAoB,OACpBf,MAAAgB,QAAA,CAAgB,CAAC,WAAD,CAL0G;",
"sources":["node_modules/refractor/lang/xeora.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$xeora\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = xeora\nxeora.displayName = 'xeora'\nxeora.aliases = ['xeoracube']\nfunction xeora(Prism) {\n  ;(function(Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern: /\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern: /\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /}:[-\\w.]+:{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        variable: Prism.languages.xeora['function-inline'].inside['variable']\n      },\n      Prism.languages.xeora['function-block']\n    )\n    Prism.languages.xeoracube = Prism.languages.xeora\n  })(Prism)\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","xeora","Prism","languages","extend","constant","pattern","inside","punctuation","variable","operator","alias","tag","attribute","insertBefore","xeoracube","displayName","aliases"]
}
