{
"version":3,
"file":"module$node_modules$refractor$lang$mizar.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,yCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM1HC,QAASA,MAAK,CAACC,KAAD,CAAQ,CACpBA,KAAAC,UAAAF,MAAA,CAAwB,CACtBG,QAAS,MADa,CAEtBC,QAAS,q0BAFa;AAGtBC,UAAW,CACTC,QAAS,aADA,CAETC,MAAO,UAFE,CAHW,CAOtBC,SAAU,UAPY,CAQtBC,OAAQ,eARc,CAStBC,SAAU,kBATY,CAUtBC,YAAa,uBAVS,CADJ,CAHtBd,MAAAC,QAAA,CAAiBE,KACjBA,MAAAY,YAAA,CAAoB,OACpBZ,MAAAa,QAAA,CAAgB,EAL0G;",
"sources":["node_modules/refractor/lang/mizar.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$mizar\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = mizar\nmizar.displayName = 'mizar'\nmizar.aliases = []\nfunction mizar(Prism) {\n  Prism.languages.mizar = {\n    comment: /::.+/,\n    keyword: /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|equals|end|environ|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:y|ies)|when|where|with|wrt)\\b/,\n    parameter: {\n      pattern: /\\$(?:10|\\d)/,\n      alias: 'variable'\n    },\n    variable: /\\w+(?=:)/,\n    number: /(?:\\b|-)\\d+\\b/,\n    operator: /\\.\\.\\.|->|&|\\.?=/,\n    punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","mizar","Prism","languages","comment","keyword","parameter","pattern","alias","variable","number","operator","punctuation","displayName","aliases"]
}
