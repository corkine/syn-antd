{
"version":3,
"file":"module$node_modules$hastscript$factory.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/hastscript/factory.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$hastscript$factory\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nvar find = require('property-information/find')\nvar normalize = require('property-information/normalize')\nvar parseSelector = require('hast-util-parse-selector')\nvar spaces = require('space-separated-tokens').parse\nvar commas = require('comma-separated-tokens').parse\n\nmodule.exports = factory\n\nvar own = {}.hasOwnProperty\n\nfunction factory(schema, defaultTagName, caseSensitive) {\n  var adjust = caseSensitive ? createAdjustMap(caseSensitive) : null\n\n  return h\n\n  // Hyperscript compatible DSL for creating virtual hast trees.\n  function h(selector, properties) {\n    var node = parseSelector(selector, defaultTagName)\n    var children = Array.prototype.slice.call(arguments, 2)\n    var name = node.tagName.toLowerCase()\n    var property\n\n    node.tagName = adjust && own.call(adjust, name) ? adjust[name] : name\n\n    if (properties && isChildren(properties, node)) {\n      children.unshift(properties)\n      properties = null\n    }\n\n    if (properties) {\n      for (property in properties) {\n        addProperty(node.properties, property, properties[property])\n      }\n    }\n\n    addChild(node.children, children)\n\n    if (node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  function addProperty(properties, key, value) {\n    var info\n    var property\n    var result\n\n    // Ignore nully and NaN values.\n    if (value === null || value === undefined || value !== value) {\n      return\n    }\n\n    info = find(schema, key)\n    property = info.property\n    result = value\n\n    // Handle list values.\n    if (typeof result === 'string') {\n      if (info.spaceSeparated) {\n        result = spaces(result)\n      } else if (info.commaSeparated) {\n        result = commas(result)\n      } else if (info.commaOrSpaceSeparated) {\n        result = spaces(commas(result).join(' '))\n      }\n    }\n\n    // Accept `object` on style.\n    if (property === 'style' && typeof value !== 'string') {\n      result = style(result)\n    }\n\n    // Class-names (which can be added both on the `selector` and here).\n    if (property === 'className' && properties.className) {\n      result = properties.className.concat(result)\n    }\n\n    properties[property] = parsePrimitives(info, property, result)\n  }\n}\n\nfunction isChildren(value, node) {\n  return (\n    typeof value === 'string' ||\n    'length' in value ||\n    isNode(node.tagName, value)\n  )\n}\n\nfunction isNode(tagName, value) {\n  var type = value.type\n\n  if (tagName === 'input' || !type || typeof type !== 'string') {\n    return false\n  }\n\n  if (typeof value.children === 'object' && 'length' in value.children) {\n    return true\n  }\n\n  type = type.toLowerCase()\n\n  if (tagName === 'button') {\n    return (\n      type !== 'menu' &&\n      type !== 'submit' &&\n      type !== 'reset' &&\n      type !== 'button'\n    )\n  }\n\n  return 'value' in value\n}\n\nfunction addChild(nodes, value) {\n  var index\n  var length\n\n  if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n    return\n  }\n\n  if (typeof value === 'object' && 'length' in value) {\n    index = -1\n    length = value.length\n\n    while (++index < length) {\n      addChild(nodes, value[index])\n    }\n\n    return\n  }\n\n  if (typeof value !== 'object' || !('type' in value)) {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n\n  nodes.push(value)\n}\n\n// Parse a (list of) primitives.\nfunction parsePrimitives(info, name, value) {\n  var index\n  var length\n  var result\n\n  if (typeof value !== 'object' || !('length' in value)) {\n    return parsePrimitive(info, name, value)\n  }\n\n  length = value.length\n  index = -1\n  result = []\n\n  while (++index < length) {\n    result[index] = parsePrimitive(info, name, value[index])\n  }\n\n  return result\n}\n\n// Parse a single primitives.\nfunction parsePrimitive(info, name, value) {\n  var result = value\n\n  if (info.number || info.positiveNumber) {\n    if (!isNaN(result) && result !== '') {\n      result = Number(result)\n    }\n  } else if (info.boolean || info.overloadedBoolean) {\n    // Accept `boolean` and `string`.\n    if (\n      typeof result === 'string' &&\n      (result === '' || normalize(value) === normalize(name))\n    ) {\n      result = true\n    }\n  }\n\n  return result\n}\n\nfunction style(value) {\n  var result = []\n  var key\n\n  for (key in value) {\n    result.push([key, value[key]].join(': '))\n  }\n\n  return result.join('; ')\n}\n\nfunction createAdjustMap(values) {\n  var length = values.length\n  var index = -1\n  var result = {}\n  var value\n\n  while (++index < length) {\n    value = values[index]\n    result[value.toLowerCase()] = value\n  }\n\n  return result\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","addChild","nodes","value","length","push","type","String","index","Error","parsePrimitive","info","name","result","number","positiveNumber","isNaN","Number","boolean","overloadedBoolean","normalize","createAdjustMap","values","toLowerCase","find","parseSelector","spaces","parse","commas","factory","schema","defaultTagName","caseSensitive","adjust","h","selector","properties","node","children","Array","prototype","slice","call","arguments","tagName","property","own","unshift","undefined","spaceSeparated","commaSeparated","commaOrSpaceSeparated","join","key","className","concat","content","hasOwnProperty"]
}
