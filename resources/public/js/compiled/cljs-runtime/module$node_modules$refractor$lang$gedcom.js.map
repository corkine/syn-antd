{
"version":3,
"file":"module$node_modules$refractor$lang$gedcom.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,0CAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM3HC,QAASA,OAAM,CAACC,KAAD,CAAQ,CACrBA,KAAAC,UAAAF,OAAA,CAAyB,CACvB,aAAc,CAEZG,QAAS,gFAFG,CAGZC,WAAY,CAAA,CAHA,CAIZC,OAAQ,CACNC,QAAS,CACPH,QAAS,wDADF,CAEPI,MAAO,UAFA,CADH,CAJI,CADS,CAYvBC,IAAK,CAEHL,QAAS,4EAFN,CAGHC,WAAY,CAAA,CAHT,CAIHG,MAAO,QAJJ,CAZkB;AAkBvBE,MAAO,CACLN,QAAS,YADJ,CAELC,WAAY,CAAA,CAFP,CAGLG,MAAO,QAHF,CAlBgB,CAuBvBD,QAAS,CACPH,QAAS,sDADF,CAEPI,MAAO,UAFA,CAvBc,CADJ,CAHvBV,MAAAC,QAAA,CAAiBE,MACjBA,OAAAU,YAAA,CAAqB,QACrBV,OAAAW,QAAA,CAAiB,EAL0G;",
"sources":["node_modules/refractor/lang/gedcom.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$gedcom\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = gedcom\ngedcom.displayName = 'gedcom'\ngedcom.aliases = []\nfunction gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ +).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    tag: {\n      // Preceded by level and optional pointer\n      pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'string'\n    },\n    level: {\n      pattern: /(^\\s*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","gedcom","Prism","languages","pattern","lookbehind","inside","pointer","alias","tag","level","displayName","aliases"]
}
