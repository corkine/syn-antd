{
"version":3,
"file":"module$node_modules$refractor$lang$hcl.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMxHC,QAASA,IAAG,CAACC,KAAD,CAAQ,CAClBA,KAAAC,UAAAF,IAAA,CAAsB,CACpBG,QAAS,qCADW,CAEpBC,QAAS,CACPC,QAAS,0BADF,CAEPC,OAAQ,CAAA,CAFD,CAGPC,MAAO,QAHA,CAFW,CAOpBC,QAAS,CACP,CACEH,QAAS,oEADX,CAEEI,OAAQ,CACNC,KAAM,CACJL,QAAS,gDADL,CAEJM,WAAY,CAAA,CAFR,CAGJJ,MAAO,UAHH,CADA,CAFV,CADO,CAWP,CACEF,QAAS,sGADX;AAEEI,OAAQ,CACNC,KAAM,CACJL,QAAS,+FADL,CAEJM,WAAY,CAAA,CAFR,CAGJJ,MAAO,UAHH,CADA,CAFV,CAXO,CAqBP,CACEF,QAAS,gBADX,CArBO,CAPW,CAgCpBO,SAAU,CAAC,uBAAD,CAA0B,mCAA1B,CAhCU,CAiCpBC,OAAQ,CACNR,QAAS,yFADH,CAENC,OAAQ,CAAA,CAFF,CAGNG,OAAQ,CACNK,cAAe,CACbT,QAAS,kDADI,CAEbM,WAAY,CAAA,CAFC,CAGbF,OAAQ,CACNC,KAAM,CACJL,QAAS,qEADL;AAEJM,WAAY,CAAA,CAFR,CAGJJ,MAAO,UAHH,CADA,CAMNC,QAAS,0DANH,CAONO,SAAU,WAPJ,CAQNF,OAAQ,CACNR,QAAS,wBADH,CAENC,OAAQ,CAAA,CAFF,CARF,CAYNU,OAAQ,uCAZF,CAaNC,YAAa,sCAbP,CAHK,CADT,CAHF,CAjCY,CA0DpBD,OAAQ,uCA1DY,CA2DpBE,QAAS,qBA3DW,CA4DpBD,YAAa,WA5DO,CADJ,CAHpBpB,MAAAC,QAAA,CAAiBE,GACjBA,IAAAmB,YAAA,CAAkB,KAClBnB,IAAAoB,QAAA,CAAc,EAL0G;",
"sources":["node_modules/refractor/lang/hcl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$hcl\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = hcl\nhcl.displayName = 'hcl'\nhcl.aliases = []\nfunction hcl(Prism) {\n  Prism.languages.hcl = {\n    comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    heredoc: {\n      pattern: /<<-?(\\w+)[\\s\\S]*?^\\s*\\1/m,\n      greedy: true,\n      alias: 'string'\n    },\n    keyword: [\n      {\n        pattern: /(?:resource|data)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+{)/i,\n        inside: {\n          type: {\n            pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      {\n        pattern: /(?:provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?={)/i,\n        inside: {\n          type: {\n            pattern: /(provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      {\n        pattern: /[\\w-]+(?=\\s+{)/\n      }\n    ],\n    property: [/[\\w-\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\n    string: {\n      pattern: /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n          lookbehind: true,\n          inside: {\n            type: {\n              pattern: /(\\b(?:terraform|var|self|count|module|path|data|local)\\b\\.)[\\w\\*]+/i,\n              lookbehind: true,\n              alias: 'variable'\n            },\n            keyword: /\\b(?:terraform|var|self|count|module|path|data|local)\\b/i,\n            function: /\\w+(?=\\()/,\n            string: {\n              pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n              greedy: true\n            },\n            number: /\\b0x[\\da-f]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?/i,\n            punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n          }\n        }\n      }\n    },\n    number: /\\b0x[\\da-f]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:true|false)\\b/i,\n    punctuation: /[=\\[\\]{}]/\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","hcl","Prism","languages","comment","heredoc","pattern","greedy","alias","keyword","inside","type","lookbehind","property","string","interpolation","function","number","punctuation","boolean","displayName","aliases"]
}
