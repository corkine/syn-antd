shadow$provide.module$node_modules$refractor$core=function(global,process,require,module,exports,shadow$shims){function Refractor(){}function register(grammar){if("function"!==typeof grammar||!grammar.displayName)throw Error("Expected `function` for `grammar`, got `"+grammar+"`");void 0===refract.languages[grammar.displayName]&&grammar(refract)}process=function(){var defined="Prism"in global,current=defined?global.Prism:void 0;return function(){defined?global.Prism=current:delete global.Prism;current=
defined=void 0}}();("undefined"===typeof window?"undefined"===typeof self?{}:self:window).Prism={manual:!0,disableWorkerMessageHandler:!0};var h=require("module$node_modules$hastscript$index"),decode=require("module$node_modules$parse_entities$index"),Prism=require("module$node_modules$prismjs$components$prism_core");exports=require("module$node_modules$refractor$lang$markup");shadow$shims=require("module$node_modules$refractor$lang$css");var clike=require("module$node_modules$refractor$lang$clike");
require=require("module$node_modules$refractor$lang$javascript");process();var own={}.hasOwnProperty;Refractor.prototype=Prism;var refract=new Refractor;module.exports=refract;refract.highlight=function(value,name){var sup=Prism.highlight;if("string"!==typeof value)throw Error("Expected `string` for `value`, got `"+value+"`");if("Object"===refract.util.type(name)){var grammar=name;name=null}else{if("string"!==typeof name)throw Error("Expected `string` for `name`, got `"+name+"`");if(own.call(refract.languages,
name))grammar=refract.languages[name];else throw Error("Unknown language: `"+name+"` is not registered");}return sup.call(this,value,grammar,name)};refract.register=register;refract.alias=function(name,alias){var languages=refract.languages,map=name,key,index;alias&&(map={},map[name]=alias);for(key in map)for(name=map[key],name="string"===typeof name?[name]:name,alias=name.length,index=-1;++index<alias;)languages[name[index]]=languages[key]};refract.registered=function(language){if("string"!==typeof language)throw Error("Expected `string` for `language`, got `"+
language+"`");return own.call(refract.languages,language)};refract.listLanguages=function(){var languages=refract.languages,list=[],language;for(language in languages)own.call(languages,language)&&"object"===typeof languages[language]&&list.push(language);return list};register(exports);register(shadow$shims);register(clike);register(require);refract.util.encode=function(tokens){return tokens};refract.Token.stringify=function(value$jscomp$0,language,parent){if("string"===typeof value$jscomp$0)return{type:"text",
value:value$jscomp$0};if("Array"===refract.util.type(value$jscomp$0)){var result=[];parent=value$jscomp$0.length;for(var index=-1,value;++index<parent;)value=value$jscomp$0[index],""!==value&&null!==value&&void 0!==value&&result.push(value);index=-1;for(parent=result.length;++index<parent;)value=result[index],result[index]=refract.Token.stringify(value,language,result);return result}language={type:value$jscomp$0.type,content:refract.Token.stringify(value$jscomp$0.content,language,parent),tag:"span",
classes:["token",value$jscomp$0.type],attributes:{},language:language,parent:parent};value$jscomp$0.alias&&(language.classes=language.classes.concat(value$jscomp$0.alias));refract.hooks.run("wrap",language);value$jscomp$0=language.tag+"."+language.classes.join(".");parent=language.attributes;for(result in parent)parent[result]=decode(parent[result]);return h(value$jscomp$0,parent,language.content)}}
//# sourceMappingURL=module$node_modules$refractor$core.js.map
