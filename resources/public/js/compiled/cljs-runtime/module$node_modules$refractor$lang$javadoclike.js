shadow$provide.module$node_modules$refractor$lang$javadoclike=function(global,process,require,module,exports,shadow$shims){function javadoclike(Prism$jscomp$0){(function(Prism){function docCommentSupport(lang,callback){var grammar=Prism.languages[lang];if(grammar){var token=grammar["doc-comment"];token||(grammar=Prism.languages.insertBefore(lang,"comment",{"doc-comment":{pattern:/(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/,alias:"comment"}}),token=grammar["doc-comment"]);token instanceof RegExp&&(token=
grammar["doc-comment"]={pattern:token});if(Array.isArray(token))for(lang=0,grammar=token.length;lang<grammar;lang++)token[lang]instanceof RegExp&&(token[lang]={pattern:token[lang]}),callback(token[lang]);else callback(token)}}var javaDocLike=Prism.languages.javadoclike={parameter:{pattern:/(^\s*(?:\/{3}|\*|\/\*\*)\s*@(?:param|arg|arguments)\s+)\w+/m,lookbehind:!0},keyword:{pattern:/(^\s*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m,lookbehind:!0},punctuation:/[{}]/};Object.defineProperty(javaDocLike,
"addSupport",{value:function(languages,docLanguage){"string"===typeof languages&&(languages=[languages]);languages.forEach(function(lang){docCommentSupport(lang,function(pattern){pattern.inside||(pattern.inside={});pattern.inside.rest=docLanguage})})}});javaDocLike.addSupport(["java","javascript","php"],javaDocLike)})(Prism$jscomp$0)}module.exports=javadoclike;javadoclike.displayName="javadoclike";javadoclike.aliases=[]}
//# sourceMappingURL=module$node_modules$refractor$lang$javadoclike.js.map
