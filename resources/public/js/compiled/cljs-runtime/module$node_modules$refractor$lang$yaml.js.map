{
"version":3,
"file":"module$node_modules$refractor$lang$yaml.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMzHC,QAASA,KAAI,CAACC,KAAD,CAAQ,CACnBA,KAAAC,UAAAF,KAAA,CAAuB,CACrBG,OAAQ,CACNC,QAAS,uFADH,CAENC,WAAY,CAAA,CAFN,CAGNC,MAAO,QAHD,CADa,CAMrBC,QAAS,KANY,CAOrBC,IAAK,CACHJ,QAAS,8EADN,CAEHC,WAAY,CAAA,CAFT,CAGHC,MAAO,QAHJ,CAPgB,CAYrBG,UAAW,CACTL,QAAS,eADA,CAETC,WAAY,CAAA,CAFH,CAGTC,MAAO,WAHE,CAZU,CAiBrBI,SAAU,CACRN,QAAS,0MADD;AAERC,WAAY,CAAA,CAFJ,CAGRC,MAAO,QAHC,CAjBW,CAsBrBK,QAAS,CACPP,QAAS,kEADF,CAEPC,WAAY,CAAA,CAFL,CAGPC,MAAO,WAHA,CAtBY,CA2BrBM,KAAM,CACJR,QAAS,8DADL,CAEJC,WAAY,CAAA,CAFR,CAGJC,MAAO,WAHH,CA3Be,CAgCrBO,OAAQ,CACNT,QAAS,2FADH,CAENC,WAAY,CAAA,CAFN,CAGNS,OAAQ,CAAA,CAHF,CAhCa,CAqCrBC,OAAQ,CACNX,QAAS,+HADH;AAENC,WAAY,CAAA,CAFN,CArCa,CAyCrBW,IAAK,SAzCgB,CA0CrBC,UAAW,WA1CU,CA2CrBC,YAAa,2BA3CQ,CA6CvBjB,MAAAC,UAAAiB,IAAA,CAAsBlB,KAAAC,UAAAF,KA9CH,CAHrBH,MAAAC,QAAA,CAAiBE,IACjBA,KAAAoB,YAAA,CAAmB,MACnBpB,KAAAqB,QAAA,CAAe,CAAC,KAAD,CAL0G;",
"sources":["node_modules/refractor/lang/yaml.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$yaml\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = yaml\nyaml.displayName = 'yaml'\nyaml.aliases = ['yml']\nfunction yaml(Prism) {\n  Prism.languages.yaml = {\n    scalar: {\n      pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    comment: /#.*/,\n    key: {\n      pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n      lookbehind: true,\n      alias: 'atrule'\n    },\n    directive: {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    datetime: {\n      pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    boolean: {\n      pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n      lookbehind: true,\n      alias: 'important'\n    },\n    null: {\n      pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n      lookbehind: true,\n      alias: 'important'\n    },\n    string: {\n      pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}|\\s*#))/m,\n      lookbehind: true,\n      greedy: true\n    },\n    number: {\n      pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n      lookbehind: true\n    },\n    tag: /![^\\s]+/,\n    important: /[&*][\\w]+/,\n    punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  }\n  Prism.languages.yml = Prism.languages.yaml\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","yaml","Prism","languages","scalar","pattern","lookbehind","alias","comment","key","directive","datetime","boolean","null","string","greedy","number","tag","important","punctuation","yml","displayName","aliases"]
}
