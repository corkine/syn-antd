shadow$provide.module$node_modules$parse_entities$index=function(global,process,require,module,exports,shadow$shims){function parse(value,settings){function now(){return{line:line,column:column,offset:index+(pos.offset||0)}}function parseError(code,offset){var position=now();position.column+=offset;position.offset+=offset;handleWarning.call(warningContext,messages[code],position,code)}function flush(){queue&&(result.push(queue),handleText&&handleText.call(textContext,queue,{start:prev,end:now()}),
queue="")}var additional=settings.additional,nonTerminated=settings.nonTerminated,handleText=settings.text,handleReference=settings.reference,handleWarning=settings.warning,textContext=settings.textContext,referenceContext=settings.referenceContext,warningContext=settings.warningContext,pos=settings.position,indent=settings.indent||[],length=value.length,index=0,lines=-1,column=pos.column||1,line=pos.line||1,queue="",result=[],entityCharacters,output,begin,start;"string"===typeof additional&&(additional=
additional.charCodeAt(0));var prev=now();var warning=handleWarning?parseError:noop;index--;for(length++;++index<length;){character===lineFeed&&(column=indent[lines]||1);var character=value.charCodeAt(index);if(character===ampersand){var terminated=value.charCodeAt(index+1);if(terminated===tab||terminated===lineFeed||terminated===formFeed||terminated===space||terminated===ampersand||terminated===lessThan||terminated!==terminated||additional&&terminated===additional)queue+=fromCharCode(character),column++;
else{var end=begin=start=index+1;if(terminated===numberSign)if(end=++begin,terminated=value.charCodeAt(end),terminated===uppercaseX||terminated===lowercaseX){var type=hexa;end=++begin}else type=deci;else type=name;var characters=output=entityCharacters="";var namedEntity=tests[type];for(end--;++end<length;){terminated=value.charCodeAt(end);if(!namedEntity(terminated))break;characters+=fromCharCode(terminated);type===name&&own.call(legacy,characters)&&(entityCharacters=characters,output=legacy[characters])}if(terminated=
value.charCodeAt(end)===semicolon)if(end++,namedEntity=type===name?decodeEntity(characters):!1)entityCharacters=characters,output=namedEntity;namedEntity=1+end-start;if(terminated||nonTerminated)if(characters)if(type===name){if(terminated&&!output)warning(namedUnknown,1);else if(entityCharacters!==characters&&(end=begin+entityCharacters.length,namedEntity=1+end-begin,terminated=!1),!terminated){var reference=entityCharacters?namedNotTerminated:namedEmpty;settings.attribute?(terminated=value.charCodeAt(end),
terminated===equalsTo?(warning(reference,namedEntity),output=null):alphanumerical(terminated)?output=null:warning(reference,namedEntity)):warning(reference,namedEntity)}reference=output}else terminated||warning(numericNotTerminated,namedEntity),reference=parseInt(characters,bases[type]),55296<=reference&&57343>=reference||1114111<reference?(warning(numericProhibited,namedEntity),reference=fromCharCode(replacementCharacter)):reference in invalid?(warning(numericDisallowed,namedEntity),reference=invalid[reference]):
(output="",(1<=reference&&8>=reference||11===reference||13<=reference&&31>=reference||127<=reference&&159>=reference||64976<=reference&&65007>=reference||65535===(reference&65535)||65534===(reference&65535))&&warning(numericDisallowed,namedEntity),65535<reference&&(reference-=65536,output+=fromCharCode(reference>>>10|55296),reference=56320|reference&1023),reference=output+fromCharCode(reference));else type!==name&&warning(numericEmpty,namedEntity);reference?(flush(),prev=now(),index=end-1,column+=
end-start+1,result.push(reference),output=now(),output.offset++,handleReference&&handleReference.call(referenceContext,reference,{start:prev,end:output},value.slice(start-1,end)),prev=output):(characters=value.slice(start-1,end),queue+=characters,column+=characters.length,index=end-1)}}else 10===character&&(line++,lines++,column=0),character===character?(queue+=fromCharCode(character),column++):flush()}return result.join("")}var legacy=require("module$node_modules$character_entities_legacy$index_json"),
invalid=require("module$node_modules$character_reference_invalid$index_json");global=require("module$node_modules$is_decimal$index");process=require("module$node_modules$is_hexadecimal$index");var alphanumerical=require("module$node_modules$is_alphanumerical$index"),decodeEntity=require("module$node_modules$parse_entities$decode_entity_browser");module.exports=function(value,options){var settings={},key;options||(options={});for(key in defaults){var option=options[key];settings[key]=null===option||
void 0===option?defaults[key]:option}if(settings.position.indent||settings.position.start)settings.indent=settings.position.indent||[],settings.position=settings.position.start;return parse(value,settings)};var own={}.hasOwnProperty,fromCharCode=String.fromCharCode,noop=Function.prototype,defaults={warning:null,reference:null,text:null,warningContext:null,referenceContext:null,textContext:null,position:{},additional:null,attribute:!1,nonTerminated:!0},tab=9,lineFeed=10,formFeed=12,space=32,ampersand=
38,semicolon=59,lessThan=60,equalsTo=61,numberSign=35,uppercaseX=88,lowercaseX=120,replacementCharacter=65533,name="named",hexa="hexadecimal",deci="decimal",bases={};bases[hexa]=16;bases[deci]=10;var tests={};tests[name]=alphanumerical;tests[deci]=global;tests[hexa]=process;var namedNotTerminated=1,numericNotTerminated=2,namedEmpty=3,numericEmpty=4,namedUnknown=5,numericDisallowed=6,numericProhibited=7,messages={};messages[namedNotTerminated]="Named character references must be terminated by a semicolon";
messages[numericNotTerminated]="Numeric character references must be terminated by a semicolon";messages[namedEmpty]="Named character references cannot be empty";messages[numericEmpty]="Numeric character references cannot be empty";messages[namedUnknown]="Named character references must be known";messages[numericDisallowed]="Numeric character references cannot be disallowed";messages[numericProhibited]="Numeric character references cannot be outside the permissible Unicode range"}
//# sourceMappingURL=module$node_modules$parse_entities$index.js.map
