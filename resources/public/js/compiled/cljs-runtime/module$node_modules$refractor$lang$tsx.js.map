{
"version":3,
"file":"module$node_modules$refractor$lang$tsx.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAOxHC,QAASA,IAAG,CAACC,KAAD,CAAQ,CAClBA,KAAAC,SAAA,CAAeC,YAAf,CACAF,MAAAC,SAAA,CAAeE,mBAAf,CACA,KAAIC,WAAaJ,KAAAK,KAAAC,MAAA,CAAiBN,KAAAO,UAAAH,WAAjB,CACjBJ,MAAAO,UAAAR,IAAA,CAAsBC,KAAAO,UAAAC,OAAA,CAAuB,KAAvB,CAA8BJ,UAA9B,CAJJ,CALpB,IAAIF,aAAeP,OAAA,CAAQ,wCAAR,CAAnB,CACIQ,oBAAsBR,OAAA,CAAQ,+CAAR,CAC1BC,OAAAC,QAAA,CAAiBE,GACjBA,IAAAU,YAAA,CAAkB,KAClBV;GAAAW,QAAA,CAAc,EAN0G;",
"sources":["node_modules/refractor/lang/tsx.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$tsx\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\nvar refractorJsx = require('./jsx.js')\nvar refractorTypescript = require('./typescript.js')\nmodule.exports = tsx\ntsx.displayName = 'tsx'\ntsx.aliases = []\nfunction tsx(Prism) {\n  Prism.register(refractorJsx)\n  Prism.register(refractorTypescript)\n  var typescript = Prism.util.clone(Prism.languages.typescript)\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript)\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","tsx","Prism","register","refractorJsx","refractorTypescript","typescript","util","clone","languages","extend","displayName","aliases"]
}
