{
"version":3,
"file":"module$node_modules$refractor$lang$sas.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMxHC,QAASA,IAAG,CAACC,KAAD,CAAQ,CAClBA,KAAAC,UAAAF,IAAA,CAAsB,CACpBG,UAAW,CACTC,QAAS,sDADA,CAETC,MAAO,QAFE,CAGTC,OAAQ,CACNC,QAAS,CACPH,QAAS,iCADF,CAEPI,WAAY,CAAA,CAFL,CADH,CAKNC,YAAa,GALP,CAHC,CADS,CAYpBC,QAAS,CACP,CACEN,QAAS,mBADX,CAEEI,WAAY,CAAA,CAFd,CADO,CAKP,kBALO,CAZW,CAmBpBG,SAAU,CAERP,QAAS,qBAFD,CAGRC,MAAO,QAHC,CAnBU,CAwBpBO,OAAQ,CACNR,QAAS,gCADH;AAENS,OAAQ,CAAA,CAFF,CAxBY,CA4BpBN,QAAS,uFA5BW,CA8BpBO,OAAQ,8CA9BY,CA+BpBC,SAAU,sFA/BU,CAgCpBN,YAAa,oBAhCO,CADJ,CAHpBZ,MAAAC,QAAA,CAAiBE,GACjBA,IAAAgB,YAAA,CAAkB,KAClBhB,IAAAiB,QAAA,CAAc,EAL0G;",
"sources":["node_modules/refractor/lang/sas.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$sas\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = sas\nsas.displayName = 'sas'\nsas.aliases = []\nfunction sas(Prism) {\n  Prism.languages.sas = {\n    datalines: {\n      pattern: /^\\s*(?:(?:data)?lines|cards);[\\s\\S]+?(?:\\r?\\n|\\r);/im,\n      alias: 'string',\n      inside: {\n        keyword: {\n          pattern: /^(\\s*)(?:(?:data)?lines|cards)/i,\n          lookbehind: true\n        },\n        punctuation: /;/\n      }\n    },\n    comment: [\n      {\n        pattern: /(^\\s*|;\\s*)\\*.*;/m,\n        lookbehind: true\n      },\n      /\\/\\*[\\s\\S]+?\\*\\//\n    ],\n    datetime: {\n      // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n      pattern: /'[^']+'(?:dt?|t)\\b/i,\n      alias: 'number'\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n      greedy: true\n    },\n    keyword: /\\b(?:data|else|format|if|input|proc\\s\\w+|quit|run|then|libname|set|output|options)\\b/i,\n    // Decimal (1.2e23), hexadecimal (0c1x)\n    number: /\\b(?:[\\da-f]+x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)/i,\n    operator: /\\*\\*?|\\|\\|?|!!?|\u00a6\u00a6?|<[>=]?|>[<=]?|[-+\\/=&]|[~\u00ac^]=?|\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\n    punctuation: /[$%@.(){}\\[\\];,\\\\]/\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","sas","Prism","languages","datalines","pattern","alias","inside","keyword","lookbehind","punctuation","comment","datetime","string","greedy","number","operator","displayName","aliases"]
}
