{
"version":3,
"file":"module$node_modules$refractor$lang$twig.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMzHC,QAASA,KAAI,CAACC,KAAD,CAAQ,CACnBA,KAAAC,UAAAF,KAAA,CAAuB,CACrBG,QAAS,gBADY,CAErBC,IAAK,CACHC,QAAS,iCADN,CAEHC,OAAQ,CACNC,GAAI,CACFF,QAAS,yBADP,CAEFC,OAAQ,CACNE,YAAa,iBADP,CAENC,QAAS,KAFH,CAFN,CADE,CAQNC,GAAI,CACFL,QAAS,iBADP,CAEFC,OAAQ,CACNE,YAAa,IADP,CAFN,CARE,CAcNG,OAAQ,CACNN,QAAS,iCADH,CAENC,OAAQ,CACNE,YAAa,aADP,CAFF,CAdF,CAoBNC,QAAS,qBApBH;AAqBNG,QAAS,yBArBH,CAsBNC,OAAQ,0DAtBF,CAuBNC,SAAU,CACR,CACET,QAAS,uFADX,CAEEU,WAAY,CAAA,CAFd,CADQ,CAKR,qCALQ,CAvBJ,CA8BNC,SAAU,kBA9BJ,CA+BNR,YAAa,eA/BP,CAFL,CAFgB,CAuCrBS,MAAO,CAELZ,QAAS,kBAFJ,CAGLC,OAAQL,KAAAC,UAAAgB,OAHH,CAvCc,CADJ,CAHrBrB,MAAAC,QAAA,CAAiBE,IACjBA,KAAAmB,YAAA,CAAmB,MACnBnB,KAAAoB,QAAA,CAAe,EAL0G;",
"sources":["node_modules/refractor/lang/twig.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$twig\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = twig\ntwig.displayName = 'twig'\ntwig.aliases = []\nfunction twig(Prism) {\n  Prism.languages.twig = {\n    comment: /\\{#[\\s\\S]*?#\\}/,\n    tag: {\n      pattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n      inside: {\n        ld: {\n          pattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n          inside: {\n            punctuation: /^(?:\\{\\{|\\{%)-?/,\n            keyword: /\\w+/\n          }\n        },\n        rd: {\n          pattern: /-?(?:%\\}|\\}\\})$/,\n          inside: {\n            punctuation: /.+/\n          }\n        },\n        string: {\n          pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          inside: {\n            punctuation: /^['\"]|['\"]$/\n          }\n        },\n        keyword: /\\b(?:even|if|odd)\\b/,\n        boolean: /\\b(?:true|false|null)\\b/,\n        number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n        operator: [\n          {\n            pattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n            lookbehind: true\n          },\n          /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n        ],\n        property: /\\b[a-zA-Z_]\\w*\\b/,\n        punctuation: /[()\\[\\]{}:.,]/\n      }\n    },\n    // The rest can be parsed as HTML\n    other: {\n      // We want non-blank matches\n      pattern: /\\S(?:[\\s\\S]*\\S)?/,\n      inside: Prism.languages.markup\n    }\n  }\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","twig","Prism","languages","comment","tag","pattern","inside","ld","punctuation","keyword","rd","string","boolean","number","operator","lookbehind","property","other","markup","displayName","aliases"]
}
