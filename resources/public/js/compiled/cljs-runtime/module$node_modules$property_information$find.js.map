{
"version":3,
"file":"module$node_modules$property_information$find.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,8CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CA2D/HC,QAASA,MAAK,CAACC,EAAD,CAAK,CACjB,MAAO,GAAP,CAAaA,EAAAC,YAAA,EADI,CAInBC,QAASA,UAAS,CAACF,EAAD,CAAK,CACrB,MAAOA,GAAAG,OAAA,CAAU,CAAV,CAAAC,YAAA,EADc,CA5DvB,IAAIC,UAAYV,OAAA,CAAQ,oDAAR,CAAhB,CACIW,YAAcX,OAAA,CAAQ,gEAAR,CADlB,CAEIY,KAAOZ,OAAA,CAAQ,wDAAR,CAIXC,OAAAC,QAAA,CAMAW,QAAa,CAACC,MAAD,CAASC,KAAT,CAAgB,CAC3B,IAAIC;AAASN,SAAA,CAAUK,KAAV,CAAb,CACIE,KAAOF,KADX,CAEIG,KAAON,IAEX,IAAII,MAAJ,GAAcF,OAAAE,OAAd,CACE,MAAOF,OAAAK,SAAA,CAAgBL,MAAAE,OAAA,CAAcA,MAAd,CAAhB,CAGW,EAApB,CAAIA,MAAAI,OAAJ,EAjBSC,MAiBT,GAAyBL,MAAAM,MAAA,CAAa,CAAb,CAAgB,CAAhB,CAAzB,EAAwDC,KAAAC,KAAA,CAAWT,KAAX,CAAxD,GAE0B,GAAxB,GAAIA,KAAAP,OAAA,CAAa,CAAb,CAAJ,EAaEO,IACJ,CAb6BA,KAYjBO,MAAA,CAAgB,CAAhB,CAAAG,QAAA,CAA2BC,IAA3B,CAAiCnB,SAAjC,CACZ,CAAA,IAAA,CAjCSc,MAiCT,CAAcN,IAAAP,OAAA,CAAa,CAAb,CAAAC,YAAA,EAAd,CAA8CM,IAAAO,MAAA,CAAY,CAAZ,CAd5C,GAkBEP,MAEJ,CAFYI,KAAAG,MAAA,CAAe,CAAf,CAEZ,CAAII,IAAAF,KAAA,CAAUT,MAAV,CAAJ,GAIAA,MAMA,CANQA,MAAAU,QAAA,CAAcE,GAAd,CAAmBvB,KAAnB,CAMR,CAJwB,GAIxB,GAJIW,MAAAP,OAAA,CAAa,CAAb,CAIJ,GAHEO,MAGF,CAHU,GAGV,CAHgBA,MAGhB,EAAA,KAAA,CAjDSM,MAiDT,CAAcN,MAVd,CApBE,CAMA,CAAAG,IAAA,CAAOP,WART,CAWA,OAAO,KAAIO,IAAJ,CAASD,IAAT,CAAeF,KAAf,CApBoB,CAJ7B,KAAIQ,MAAQ,sBAAZ;AACIG,KAAO,SADX,CAEIC,IAAM,QAbqH;",
"sources":["node_modules/property-information/find.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$property_information$find\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nvar normalize = require('./normalize')\nvar DefinedInfo = require('./lib/util/defined-info')\nvar Info = require('./lib/util/info')\n\nvar data = 'data'\n\nmodule.exports = find\n\nvar valid = /^data[-a-z0-9.:_]+$/i\nvar dash = /-[a-z]/g\nvar cap = /[A-Z]/g\n\nfunction find(schema, value) {\n  var normal = normalize(value)\n  var prop = value\n  var Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === data && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      prop = datasetToProperty(value)\n    } else {\n      value = datasetToAttribute(value)\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\nfunction datasetToProperty(attribute) {\n  var value = attribute.slice(5).replace(dash, camelcase)\n  return data + value.charAt(0).toUpperCase() + value.slice(1)\n}\n\nfunction datasetToAttribute(property) {\n  var value = property.slice(4)\n\n  if (dash.test(value)) {\n    return property\n  }\n\n  value = value.replace(cap, kebab)\n\n  if (value.charAt(0) !== '-') {\n    value = '-' + value\n  }\n\n  return data + value\n}\n\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","kebab","$0","toLowerCase","camelcase","charAt","toUpperCase","normalize","DefinedInfo","Info","find","schema","value","normal","prop","Type","property","length","data","slice","valid","test","replace","dash","cap"]
}
