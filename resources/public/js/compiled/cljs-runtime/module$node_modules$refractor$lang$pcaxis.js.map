{
"version":3,
"file":"module$node_modules$refractor$lang$pcaxis.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,0CAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAM3HC,QAASA,OAAM,CAACC,KAAD,CAAQ,CACrBA,KAAAC,UAAAF,OAAA,CAAyB,CACvBG,OAAQ,SADe,CAEvBC,QAAS,CACPC,QAAS,oFADF,CAEPC,WAAY,CAAA,CAFL,CAGPC,OAAQ,CAAA,CAHD,CAIPC,OAAQ,CACNJ,QAAS,YADH,CAENK,SAAU,CACRJ,QAAS,kBADD,CAERC,WAAY,CAAA,CAFJ,CAGRE,OAAQ,CACNE,YAAa,SADP,CAENC,SAAU,QAFJ,CAHA,CAFJ,CAUN,UAAW,CACTN,QAAS,eADA,CAETC,WAAY,CAAA,CAFH,CAGTE,OAAQ,CACNI,UAAW,CACTP,QAAS,SADA;AAETQ,MAAO,UAFE,CADL,CAKNH,YAAa,WALP,CAHC,CAVL,CAJD,CAFc,CA6BvBI,SAAU,GA7Ba,CA8BvBC,MAAO,CACLV,QAAS,sEADJ,CAELE,OAAQ,CAAA,CAFH,CAGLC,OAAQ,CACNQ,SAAU,QADJ,CAENL,SAAU,CACRN,QAAS,gBADD,CAERC,WAAY,CAAA,CAFJ,CAFJ,CAMNH,OAAQ,SANF,CAONO,YAAa,OAPP,CAQNI,SAAU,GARJ,CAHH,CA9BgB,CA4CvBJ,YAAa,MA5CU,CA6CvBO,OAAQ,CACNZ,QAAS,2BADH,CAENC,WAAY,CAAA,CAFN,CA7Ce,CAiDvBY,QAAS,QAjDc,CAmDzBjB,MAAAC,UAAAiB,GAAA,CAAqBlB,KAAAC,UAAAF,OApDA,CAHvBH,MAAAC,QAAA,CAAiBE,MACjBA,OAAAoB,YAAA,CAAqB,QACrBpB,OAAAqB,QAAA,CAAiB,CAAC,IAAD,CAL0G;",
"sources":["node_modules/refractor/lang/pcaxis.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$pcaxis\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = pcaxis\npcaxis.displayName = 'pcaxis'\npcaxis.aliases = ['px']\nfunction pcaxis(Prism) {\n  Prism.languages.pcaxis = {\n    string: /\"[^\"]*\"/,\n    keyword: {\n      pattern: /((?:^|;)\\s*)[-A-Z\\d]+(?:\\s*\\[[-\\w]+\\])?(?:\\s*\\(\"[^\"]*\"(?:,\\s*\"[^\"]*\")*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        keyword: /^[-A-Z\\d]+/,\n        language: {\n          pattern: /^(\\s*)\\[[-\\w]+\\]/,\n          lookbehind: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            property: /[-\\w]+/\n          }\n        },\n        'sub-key': {\n          pattern: /^(\\s*)[\\s\\S]+/,\n          lookbehind: true,\n          inside: {\n            parameter: {\n              pattern: /\"[^\"]*\"/,\n              alias: 'property'\n            },\n            punctuation: /^\\(|\\)$|,/\n          }\n        }\n      }\n    },\n    operator: /=/,\n    tlist: {\n      pattern: /TLIST\\s*\\(\\s*\\w+(?:(?:\\s*,\\s*\"[^\"]*\")+|\\s*,\\s*\"[^\"]*\"-\"[^\"]*\")?\\s*\\)/,\n      greedy: true,\n      inside: {\n        function: /^TLIST/,\n        property: {\n          pattern: /^(\\s*\\(\\s*)\\w+/,\n          lookbehind: true\n        },\n        string: /\"[^\"]*\"/,\n        punctuation: /[(),]/,\n        operator: /-/\n      }\n    },\n    punctuation: /[;,]/,\n    number: {\n      pattern: /(^|\\s)\\d+(?:\\.\\d+)?(?!\\S)/,\n      lookbehind: true\n    },\n    boolean: /YES|NO/\n  }\n  Prism.languages.px = Prism.languages.pcaxis\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","pcaxis","Prism","languages","string","keyword","pattern","lookbehind","greedy","inside","language","punctuation","property","parameter","alias","operator","tlist","function","number","boolean","px","displayName","aliases"]
}
