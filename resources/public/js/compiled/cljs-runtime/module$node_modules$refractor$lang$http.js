shadow$provide.module$node_modules$refractor$lang$http=function(global,process,require,module,exports,shadow$shims){function http(Prism){Prism.languages.http={"request-line":{pattern:/^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\s(?:https?:\/\/|\/)\S+\sHTTP\/[0-9.]+/m,inside:{property:/^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\b/,"attr-name":/:\w+/}},"response-status":{pattern:/^HTTP\/1.[01] \d+.*/m,inside:{property:{pattern:/(^HTTP\/1.[01] )\d+.*/i,lookbehind:!0}}},"header-name":{pattern:/^[\w-]+:(?=.)/m,
alias:"keyword"}};var langs=Prism.languages;langs={"application/javascript":langs.javascript,"application/json":langs.json||langs.javascript,"application/xml":langs.xml,"text/xml":langs.xml,"text/html":langs.html,"text/css":langs.css};var suffixTypes={"application/json":!0,"application/xml":!0},contentType;for(contentType in langs)if(langs[contentType]){var options=options||{};if(suffixTypes[contentType]){var JSCompiler_temp=contentType;var suffix=JSCompiler_temp.replace(/^[a-z]+\//,"");JSCompiler_temp=
"(?:"+JSCompiler_temp+"|"+("\\w+/(?:[\\w.-]+\\+)+"+suffix+"(?![+\\w.-])")+")"}else JSCompiler_temp=contentType;options[contentType]={pattern:RegExp("(content-type:\\s*"+JSCompiler_temp+"[\\s\\S]*?)(?:\\r?\\n|\\r){2}[\\s\\S]*","i"),lookbehind:!0,inside:{rest:langs[contentType]}}}options&&Prism.languages.insertBefore("http","header-name",options)}module.exports=http;http.displayName="http";http.aliases=[]}
//# sourceMappingURL=module$node_modules$refractor$lang$http.js.map
