{
"version":3,
"file":"module$node_modules$refractor$lang$nix.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMxHC,QAASA,IAAG,CAACC,KAAD,CAAQ,CAClBA,KAAAC,UAAAF,IAAA,CAAsB,CACpBG,QAAS,sBADW,CAEpBC,OAAQ,CACNC,QAAS,8DADH,CAENC,OAAQ,CAAA,CAFF,CAGNC,OAAQ,CACNC,cAAe,CAEbH,QAAS,gDAFI,CAGbI,WAAY,CAAA,CAHC,CAIbF,OAAQ,CACNG,cAAe,CACbL,QAAS,WADI,CAEbM,MAAO,UAFM,CADT,CAJK,CADT,CAHF,CAFY,CAmBpBC,IAAK,CACH,yCADG,CAEH,CACEP,QAAS,mFADX;AAEEI,WAAY,CAAA,CAFd,CAFG,CAnBe,CA0BpBC,cAAe,CACbL,QAAS,UADI,CAEbM,MAAO,UAFM,CA1BK,CA8BpBE,OAAQ,SA9BY,CA+BpBC,QAAS,kEA/BW,CAgCpBC,SAAU,kgBAhCU;AAiCpBC,QAAS,oBAjCW,CAkCpBC,SAAU,sCAlCU,CAmCpBC,YAAa,eAnCO,CAqCtBjB,MAAAC,UAAAF,IAAAI,OAAAG,OAAAC,cAAAD,OAAAY,KAAA,CACElB,KAAAC,UAAAF,IAvCgB,CAHpBH,MAAAC,QAAA,CAAiBE,GACjBA,IAAAoB,YAAA,CAAkB,KAClBpB,IAAAqB,QAAA,CAAc,EAL0G;",
"sources":["node_modules/refractor/lang/nix.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$refractor$lang$nix\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict'\n\nmodule.exports = nix\nnix.displayName = 'nix'\nnix.aliases = []\nfunction nix(Prism) {\n  Prism.languages.nix = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // The lookbehind ensures the ${} is not preceded by \\ or ''\n          pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^}]|\\{[^}]*\\})*}/,\n          lookbehind: true,\n          inside: {\n            antiquotation: {\n              pattern: /^\\$(?=\\{)/,\n              alias: 'variable' // See rest below\n            }\n          }\n        }\n      }\n    },\n    url: [\n      /\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,\n      {\n        pattern: /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n        lookbehind: true\n      }\n    ],\n    antiquotation: {\n      pattern: /\\$(?=\\{)/,\n      alias: 'variable'\n    },\n    number: /\\b\\d+\\b/,\n    keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n    function: /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:url|Tarball)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n    punctuation: /[{}()[\\].,:;]/\n  }\n  Prism.languages.nix.string.inside.interpolation.inside.rest =\n    Prism.languages.nix\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","nix","Prism","languages","comment","string","pattern","greedy","inside","interpolation","lookbehind","antiquotation","alias","url","number","keyword","function","boolean","operator","punctuation","rest","displayName","aliases"]
}
